{"version":3,"sources":["static/tracks.ts","hooks.tsx","components/UI/Section.tsx","static/appConfig.ts","static/canvasConfig.ts","static/theme.ts","components/SampleTray/NewSampleTray/CanvasItems/BasicSamplePath.tsx","components/SampleTray/NewSampleTray/CanvasItems/CollectionContainer.tsx","components/SampleTray/NewSampleTray/DialogBox.tsx","classes/Kosima.ts","utils.ts","components/SampleTray/NewSampleTray/CanvasItems/Layers/KosimaRender.tsx","classes/SampleCollection.ts","components/SampleTray/NewSampleTray/CanvasItems/CollectionNav.tsx","classes/Tag.ts","static/tags.ts","components/SampleTray/NewSampleTray/Packer.ts","components/SampleTray/NewSampleTray/rects.ts","components/SampleTray/NewSampleTray/CanvasItems/TagSelector.tsx","components/SampleTray/NewSampleTray/CanvasItems/Layers/TagsLayer.tsx","components/SampleTray/NewSampleTray/CanvasItems/SamplePath.tsx","components/SampleTray/NewSampleTray/CanvasItems/Layers/SampleLayer.tsx","components/SampleTray/NewSampleTray/CanvasItems/Layers/WidgetsLayer.tsx","components/SampleTray/NewSampleTray/CanvasItems/Navigation.tsx","components/SampleTray/NewSampleTray/Canvas.tsx","components/SampleTray/SampleTray.tsx","pages/Instrument.tsx","pages/Testing/CSS3DDemo.tsx","pages/Testing.tsx","static/gridLayouts.ts","model/homeModel.ts","stores/homeStore.ts","components/Misc/FXAADemo.tsx","pages/FXAADemoPage.tsx","components/Home/Grid/GridLayoutTools/ViewCard.tsx","components/DAW/DAWGridLayout.tsx","components/DAW/DAWApp.tsx","pages/DAWPage.tsx","components/Home/Grid/GridWidgets/ViolinWidget.tsx","enums.ts","IFrameValidator.ts","pages/TempSite/TempSiteApp.tsx","App.tsx","reportWebVitals.ts","classes/CardData.ts","static/defaultLayouts.ts","classes/History.ts","model/appModel.ts","classes/WaveFormBuilder.ts","classes/ðŸŽ»CompositionData.ts","static/defaultCompositions.ts","model/ðŸŽ»compositionsModel.ts","static/cardDataSheetKey.ts","classes/ðŸ“‹GoogleSheetData.ts","model/googleSheetsModel.ts","model/historyModel.ts","classes/LayoutData.ts","model/layoutsModel.ts","model/logModel.ts","classes/SampleData.ts","static/placeHolderSamples.ts","model/samplesModel.ts","model/index.ts","store.ts","index.tsx"],"names":["anjaliImage","process","pacificImage","contourImage","anjaliTrack","pacificTrack","contourTrack","ysaeTrack","bachVideo","ysayeVideo","bartokVideo","lorem","tracks","artist","title","link","src","about","visualType","visual","playing","connections","target","description","category","bio","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","playListHooks","Section","React","forwardRef","ref","children","className","backgroundColor","column","padding","width","height","flexStatus","style","borderRadius","backdropFilter","backgroundBlur","appConfig","sampleHeight","longestSample","showIntro","showFPS","homePadding","gridUnit","window","innerWidth","canvasConfig","startMode","sampleContainerWidth","sampleListWidth","sampleTagWidth","widgetWidth","widgetHeight","sampleCollectionGroupX","sampleCollectionRectHeight","innerHeight","theme","primary","primaryDark","primaryMedium","secondary","secondaryRGB","secondaryHover","primaryInactive","transparent","stroke","border","textDark","text","shadow","titleFontFamily","primaryFont","titleFont","bigFont","mediumFont","logoFont","BasicSamplePath","memo","props","useState","isHovered","x","y","sampleRef","useRef","h","w","draggable","fill","onMouseDown","onDragStart","onDragEnd","onMouseEnter","onDragMove","onMouseUp","id","svgPath","sample","scaleX","getGradient","tags","console","log","data","scaleY","strokeWidth","stop1","stop2","includes","CollectionContainer","sampleCollection","appMode","cornerRadius","name","samples","map","s","i","samplePath","key","DialogBox","open","setOpen","containerStyle","display","position","left","bottom","overflow","color","handler","useEffect","listener","event","el","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","dialogClass","classNames","hidden","ReactDOM","createPortal","getElementById","Kosima","reaction","this","KosimaFolder","randomElements","arr","count","len","length","lookup","tmp","index","Math","random","push","mapRange","value","inMin","inMax","outMin","outMax","KosimaRender","kosima","setPopOverOpen","useImage","baseImage","setReaction","reactionImage","expressionImage","xPos","yPos","hUnit","eyeHeight","eyePos","groupRef","eyeOffset","setEyeOffset","circRef","e","onMouseLeave","to","easing","Konva","Easings","EaseOut","onMouseMove","bBox","getClientRect","newX","evt","pageX","newY","pageY","image","radius","SampleCollection","CollectionNav","numSamples","sampleCollections","containerGroupRef","c","groupProps","rectProps","activeCollection","Tag","Packer","gutter","root","used","blocks","n","node","block","findNode","splitNode","fit","right","down","packSamples","forEach","calculateDimensions","TagSelector","activeTags","tag","setCircleFill","circleProps","hovered","setHovered","duration","EaseInOut","align","TagsLayer","removeTag","addTag","selectedTags","layerRef","element","opacity","withRadiusTags","t","allRadii","bigRadius","tagCircles","posX","cos","findPlace","posY","sin","asin","SamplePath","setRef","setisHovered","setabsolutePosition","isDragging","setIsDragging","gradient","fillPriority","absolutePosition","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","renderGhost","SampleLayer","sampleTrayGroupRef","setSampleToClone","addToCurrentCollection","dragLayerRef","sampleToClone","setHoveredId","setPlayingSample","stageY","sampleLayerRef","sampleLayerProps","onRectMouseDown","onRectMouseUp","filter","filename","attrs","enriched","useMemo","intersect","setAttr","moveTo","toEnriched","drawSamples","r1","r2","WidgetsLayer","widgetContainerRef","timeLineRef","Array","from","keys","widgWidth","widgHeight","widgFill","groupX","groupY","trackGroupY","borderRectProps","a","rectX","widgets","NavItem","setAppMode","navItemStyle","onClick","Navigation","top","alignItems","margin","Canvas","state","samplesModel","stageContainerRef","sampleLayerWidth","packedSamples","packedRects","r","every","rows","list","Map","val","has","set","groupBy","f","size","packed","allTags","flatTags","reduce","prev","next","concat","getNumMatches","finalTags","get","defaultCollection1","slice","defaultCollection2","defaultCollection3","defaultCollection4","defaultCollection5","useLocalStore","action","toAddId","activeSamples","undefined","toClone","setActiveCollection","collectionName","availableTags","computed","tagToAdd","tagToRemove","hoveredId","playingSample","draggingId","popOverOpen","active","viewHeight","getBoundingClientRect","stageHeight","setStageHeight","setViewHeight","setStageY","max","min","mode","setDraggingId","playingId","devTools","actions","stageProps","onWheel","preventDefault","deltaY","currentSample","stageNodeRef","container","useKeyboardShortcut","keyCode","disabled","draggingRef","containerHeight","sampleTrayGroupY","targY","targX","progressInterval","onProgress","played","playedSeconds","loaded","loadedSeconds","url","getChildren","array","valToFind","numMatches","j","SampleTray","_state","sampleTrayClass","tagFilter","Instrument","World","trig","div1","div2","div3","connectorRef1","connectorRef2","connectorRef3","l1","Vector3","l2","l3","lines","setLines","divItems","pos","useSpring","damping","stiffness","bounce","PI","third","useFrame","linescopy","item","p1","z","points","Html","transform","DivBlock","Text","justifyContent","textAlign","fontSize","Connector","curve","LineCurve3","args","CSS3DDemo","setTrig","camera","fov","PerspectiveCamera","makeDefault","OrbitControls","enableRotate","intensity","penumbra","Testing","layoutv2","static","modifyBase","toReplace","copy","toReplaceIds","toReplaceIndexes","copyIds","trid","indexOf","ind","remixLayout","recitalLayout","homeModel","infoDisplayMode","setInfoDisplayMode","isPlaying","setCurrentTrack","payload","currentTrackId","setIsPlaying","currentTrack","currentAudioElement","currentLayout","setCurrentLayout","l","homeStore","createStore","middleware","shaders","Shaders","create","circle","frag","GLSL","FXAA","FXAADemo","circleRef","shader","uniforms","u_resolution","PostFXAA","inTexture","Component","FXAADemoPage","flexDirection","href","ViewCard","overflowHidden","DAWGridLayout","layout","wrappedWidgets","motion","div","cols","rowHeight","defaultLayout","Block","DAWApp","DAWPage","Violin","track","nodes","useGLTF","matcapTexture","useLoader","TextureLoader","group","V","onChange","last","rotation","geometry","material","attach","matcap","ViolinWidget","fallback","OrthographicCamera","zoom","DropCategory","DragSource","InteractionType","AppMode","Composition","IFrameLoadError","IFrameLoadWarning","TempSiteApp","zIndex","date","Date","TopBar","paddingLeft","fontFamily","App","fetchCardDataGoogleSheetThunk","googleSheetsModel","fetchAppGoogleSheet","processCompositions","compositionsModel","fetchCompositionSheet","fetchCompositionsSheet","fetchSamples","fetchSamplesSheet","initialValue","setValue","useToggle","toggleSampleTrayIsActive","path","component","store","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","IFrameValidator","errors","warnings","xoCheckArray","errorsArray","test","contentWindow","message","CROSS_ORIGIN","checkForXO","malformedUrlCheckArray","str","warningsArray","RegExp","MALFORMED_URL","validURL","CardData","row","added","sourceId","author","interaction","validator","isActive","failed","b","defaultGridLayoutArray","defaultLayouts","lg","md","sm","xs","xxs","JSON","stringify","History","events","currentStep","appModel","availableCards","activeCards","defaultGridLayout","DISPLAY","history","manageViewModeChange","thunk","viewModeEnum","EDIT","CYCLE","toggleViewMode","_","getState","layoutArray","setAvailableCards","cardDataArray","setActiveCards","onCardSheetLoadSuccess","actionOn","storeActions","setAppGoogleSheetData","cards","getSheetRows","sourceid","onSetActiveLayout","thunkOn","layoutsModel","setActiveLayout","activeSources","sources","availableCardsUpdated","card","setActive","registerCardLoadFailure","failedCard","getStoreState","failedId","newCards","fail","onSwapCardContent","swapCardContent","targetId","newSource","find","debug","onUndoHistory","historyModel","setCurrentHistory","onRedoHistory","WaveFormBuilder","collectSamplePoints","sampleDuration","svgViewBoxWidth","currentTime","channel1","channel","valueAtTime","at_time","maxSampleVal","max_sample","percentageComplete","xValue","yValue","timePointValue","round","topPoints","p","reversePoints","reverse","newPoint","allPoints","SVGCatmullRomSpline","toPath","audioContext","getAudio","fetch","response","arrayBuffer","buffer","options","audio_context","array_buffer","scale","Promise","resolve","reject","WaveformData","createFromAudio","err","waveform","error","AudioContext","original","pathData","setPath","catch","CompositionData","waveFormData","d","defaultCompositions","bachMovement1","genearteDefaultCompositions","compositions","processor","analysisResults","allSettled","results","succesfulAnalaysisCompositions","result","comp","status","setCompositions","downloadAnalysis","samplesArray","toJSON","csv","Papa","unparse","Blob","type","cardDataSheetKey","sheet_number","GoogleSheetData","sheetId","sheets","sheetIndex","apikey","GoogleSpreadsheet","useApiKey","sheetPromiseArray","loadInfo","sheetsByIndex","myTest","getRows","layoutDataGoogleSheet","cardDataGoogleSheet","appGoogleSheet","samplesSheet","compositionsSheet","publicSheetUrl","parseSheet","setCompositionsSheet","setSamplesSheet","prototype","loadSheets","all","responseData","studentsGoogleSheet","googleSheet","setCardDataGoogleSheet","sheet","setLayoutDataGoogleSheet","compositionSheet","complete","parse","download","header","file","endsWith","undoHistory","undoIt","undo","redoIt","redo","addEditHistory","layouts","addEditEvent","LayoutData","timestamp","split","startLayout","swapInfo","Object","entries","k","v","toRemove","toAdd","newItem","toFail","newGridLayout","activeLayout","externalLayouts","bufferLayout","tempLayout","onSetAppGoogleSheetData","dLayout","setExternalLayouts","setBufferLayout","onToggleViewModeListener","buf","newActiveLayout","newLayoutArray","getStoreActions","swapCard","deleteCard","cardToDelete","removeCard","addCard","cardAddEvent","targetPosition","cardToAdd","setGridLayout","failCard","setTempLayout","updateLayout","swap","old","logModel","setData","SampleData","sampleDataRow","composition","startTime","endTime","konvaObject","starTime","hour","defaultStartTime","defaultEndTime","containerWidth","placeHolderSamplePaths","placeHolderSamples","defaultSamples","sampleUrl","basicRow","sampleD","makeDefaultSamples","draggingSample","onSetSamplesSheets","rawSampleRows","sampleDataArray","setSamples","processSamples","processedSamples","generateSVG","succesfulAnalaysisSamples","loadSamples","setDraggingSample","model","appData","historyData","compositonsModel","render"],"mappings":"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","file":"static/js/main.4138496d.chunk.js","sourcesContent":["import { Track } from \"@interfaces/Track\";\r\n\r\nconst src = `${process.env.PUBLIC_URL}/overandunder (infinity).wav`;\r\n\r\nconst anjaliImage = `${process.env.PUBLIC_URL}/Headshots/DIASPOURA_HS.png`;\r\nconst pacificImage = `${process.env.PUBLIC_URL}/Headshots/PACIFIC_YEW_HS.png`;\r\nconst contourImage = `${process.env.PUBLIC_URL}/Headshots/CONTOUR_HS.png`;\r\n\r\nconst anjaliTrack = `${process.env.PUBLIC_URL}/Tracks/demo.wav`;\r\nconst pacificTrack = `${process.env.PUBLIC_URL}/Tracks/overandunder (infinity).wav`;\r\nconst contourTrack = `${process.env.PUBLIC_URL}/Tracks/Kontour_Remix_16.mp3`;\r\n\r\nconst bachTrack = `${process.env.PUBLIC_URL}/Tracks/Bach Mov 2.wav`;\r\nconst bartokTrack = `${process.env.PUBLIC_URL}/Tracks/Bartok Mov 1.wav`;\r\nconst ysaeTrack = `${process.env.PUBLIC_URL}/Tracks/Ysaye_AUDIO.mp3`;\r\n\r\nconst anjaliBio = \"ANJALI BIO\"\r\nconst countourBio = \"CONTOUR BIO\"\r\nconst pacificBio = \"PACIFIC BIO\"\r\n\r\nconst bachVideo = `${process.env.PUBLIC_URL}/Videos/Recital/Vivek Menon - JS Bach Partita n2_rev01-005.mov`;\r\nconst ysayeVideo = `${process.env.PUBLIC_URL}/Videos/Recital/Vivek Menon - Sonate n3 - Eugene Ysaye_Rev02.mov`;\r\nconst bartokVideo = `${process.env.PUBLIC_URL}/Videos/Recital/Vivek_Menon_Bartok_Sonata_for_Violin_Solo_rev01.mov`;\r\n\r\nconst anjaliAbout = `I worked with Vivekâ€™s performance of Movement 1 of Allemande by Bach to write Believe. When I listened through, one small section caught my ear as an interesting loop. I built layers around this loop and tried my best intuitively to match synth sounds with the clear and smooth violin. The pace of the violin sample encouraged me to explore writing at 140bpm. When I told Vivek I was working with Allemande, he anticipated a perhaps brooding and mysterious energy to be built. I have a much different perception of the energy the harmonies create. I thought this could be from my exposure to old South Asian folk and pop songs, many of which are based in a minor pentatonic scale and sing of love and desire.\r\nIt feels exciting to me that the violin can sound so in the mix with a bunch of synthesizers. And that I could integrate Bachâ€™s music into my sound. Thanks for the challenge sei.solo.`;\r\n\r\nconst lorem =\r\n  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam pulvinar lorem ipsum, at suscipit nibh finibus sed. Donec dignissim erat sed nunc consequat molestie. In arcu urna, eleifend vitae nisi vel, dignissim efficitur odio. Suspendisse hendrerit odio feugiat nulla suscipit posuere. Nulla scelerisque, urna in euismod dictum, mi elit fermentum nisi, et porttitor ipsum massa auctor tellus. Sed a sem vitae quam volutpat ultricies ac ac odio. Maecenas sit amet felis varius massa tempor porta. Quisque eu tristique massa.\";\r\n// const pacificAbout = `It's been a while since I've had a chance to experiment with sampling, and to be honest my sound as of late has been geared to more of an analog/live nature, so it was very interesting getting back into the more electronic sound. I'm finding my new setup is a lot more equipped for the task than I was aware of. I feel like I landed on a nice balance of electronic and live/acoustic with this one. Going through the files I found myself wanting to keep their integrity as much as possible, and as a result found myself playing with very subtle pitch corrections, and spending time finding phrases and bits that felt organic in reference to a melody I wrote on rhodes piano. Pulling samples from two completely different pieces was a really interesting experiment. I found YsaÃ©'s \"Ballade\" and BartÃ³k's \"Presto\" to have the most favorable parts for the comp. Their usage of such abstract melody and the players spotless technique made them resonate in a way that gave me all the inspiration I needed to write the progression. Towards the end I tried my hand at a solo using only phrasing from the violin audio. Although the overall placement of the violin alongside the other instruments in the piece throughout tends to be a more supportive role, I wanted to give it a way to stand out. It never fails to blow my mind when creating circumstances around the musical process produces such beautiful and bizarre results. I feel I may have never attempted such a thing, had this opportunity not been present. This will most certainly have lasting effects on my creative process.`;\r\nconst pacificAbout = `Going through the files I found myself wanting to keep their integrity as much as possible, and as a result found myself playing with very subtle pitch corrections, and spending time finding phrases and bits that felt organic in reference to a melody I wrote on rhodes piano. Pulling samples from two completely different pieces was a really interesting experiment. I found YsaÃ©'s \"Ballade\" and BartÃ³k's \"Presto\" to have the most favorable parts for the comp.`;\r\n// const pacificAbout = `Going through the files I found myself wanting to keep their integrity as much as possible, and as a result found myself playing with very subtle pitch corrections, and spending time finding phrases and bits that felt organic in reference to a melody I wrote on rhodes piano. Pulling samples from two completely different pieces was a really interesting experiment. I found YsaÃ©'s \"Ballade\" and BartÃ³k's \"Presto\" to have the most favorable parts for the comp. Their usage of such abstract melody and the players spotless technique made them resonate in a way that gave me all the inspiration I needed to write the progression. Towards the end I tried my hand at a solo using only phrasing from the violin audio. Although the overall placement of the violin alongside the other instruments in the piece throughout tends to be a more supportive role, I wanted to give it a way to stand out. It never fails to blow my mind when creating circumstances around the musical process produces such beautiful and bizarre results. I feel I may have never attempted such a thing, had this opportunity not been present. This will most certainly have lasting effects on my creative process.`;\r\n\r\nconst vVideo = `${process.env.PUBLIC_URL}/Headshots/ROTOSCOPE_TEST_1.mp4`;\r\nconst contourAbout =\r\n  \"*A young Jeronimo gets a fly caught in his eye and spends the week at home. Each morning he wakes, left eye patched and crusted shut with pus, to the sound of parents knocking at the door with a fresh set of tweezers, towels, and medic grade eye solution. He lies in bed struggling to open his left eye as he dreads the coming pry of the lid for removal of yet another fly limb. These songs track Jeronimo's journey back to dual-eyed sight*\";\r\n\r\nconst tracks: Track[] = [\r\n  {\r\n    artist: \"Diaspoura\",\r\n    title: \"Diaspoura Track\",\r\n    link: \"https://diaspoura.bandcamp.com/\",\r\n    src: anjaliTrack,\r\n    about: anjaliAbout,\r\n    visualType: \"image\",\r\n    visual: anjaliImage,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"YsaÃ©\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"remix\",\r\n    bio: anjaliBio,\r\n  },\r\n  {\r\n    artist: \"Pacific Yew\",\r\n    title: \"overandunder (infinity)\",\r\n    link: \"https://nomad1.bandcamp.com/\",\r\n    src: pacificTrack,\r\n    about: pacificAbout,\r\n    visualType: \"image\",\r\n    visual: pacificImage,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"YsaÃ©\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"remix\",\r\n    bio: pacificBio,\r\n  },\r\n  {\r\n    artist: \"Contour\",\r\n    title: \"Revolving Melody\",\r\n    link: \"https://diaspoura.bandcamp.com/\",\r\n    src: contourTrack,\r\n    about: contourAbout,\r\n    visualType: \"image\",\r\n    visual: contourImage,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"YsaÃ©\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"remix\",\r\n    bio: countourBio,\r\n  },\r\n  {\r\n    artist: \"Vivek Menon\",\r\n    title: \"BartÃ³k\",\r\n    // src: bartokTrack,\r\n    src: ysaeTrack,\r\n    about: lorem,\r\n    visualType: \"video\",\r\n    visual: bartokVideo,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"YsaÃ©\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"recital\",\r\n  },\r\n  {\r\n    artist: \"Vivek Menon\",\r\n    title: \"Bach\",\r\n    src: ysaeTrack,\r\n    // src: bachTrack,\r\n    // about: \"about Bach\",\r\n    about: lorem,\r\n    visualType: \"video\",\r\n    visual: bachVideo,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"YsaÃ©\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"recital\",\r\n  },\r\n  {\r\n    artist: \"Vivek Menon\",\r\n    title: \"YsaÃ©\",\r\n    src: ysaeTrack,\r\n    about: lorem,\r\n    visualType: \"video\",\r\n    visual: ysayeVideo,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"Bach\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"recital\",\r\n    // movements: {}\r\n  },\r\n];\r\n\r\nexport default tracks;\r\n","// eslint-disable-next-line filenames/match-exported\r\nimport React, {\r\n  EffectCallback,\r\n  useCallback,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport { StoreModel } from \"./model\";\r\nimport { ActionCreator, createTypedHooks } from \"easy-peasy\";\r\nimport { useArray } from \"react-hanger\";\r\nimport usePrevious, { usePreviousNumber } from \"react-hooks-use-previous\";\r\nconst typedHooks = createTypedHooks<StoreModel>();\r\n\r\n// We export the hooks from our store as they will contain the\r\n// type information on them\r\n// see https://easy-peasy.vercel.app/docs/api/use-store-actions.html for more on store hooks\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\n\r\nconst playListHooks = createTypedHooks<HomeModel>();\r\nexport const useHomeActions = playListHooks.useStoreActions;\r\nexport const useHomeDispatch = playListHooks.useStoreDispatch;\r\nexport const useHomeState = playListHooks.useStoreState;\r\n\r\ninterface useAppProps {\r\n  setAppMode: ActionCreator<SSAppMode>;\r\n  appMode: SSAppMode;\r\n\r\n}\r\nexport function useApp(): useAppProps {\r\n  const setAppMode = useHomeActions((actions) => actions.setAppMode);\r\n  const appModeState = useHomeState((state) => state.appMode);\r\n  const [appMode, setAppModeLocal] = useState(appModeState);\r\n  useEffect(() => {\r\n    console.log(appModeState);\r\n    setAppModeLocal(appModeState);\r\n  }, [appModeState]);\r\n  return {\r\n    setAppMode,\r\n    appMode,\r\n  };\r\n}\r\n//USE PLAYLIST\r\n\r\nexport function useTrackCategory(\r\n  onRemix?: () => void,\r\n  onRecital?: () => void\r\n): void {\r\n  const currentTrackState = useHomeState((state) => state.currentTrack);\r\n  // const [curTrack, setcurTrack] = useState(currentTrackState);\r\n  // useEffect(() => {\r\n  //   setcurTrack(currentTrackState);\r\n  // }, [currentTrackState]);\r\n  // useEffect(() => {\r\n  //   console.log(curTrack);\r\n  //   // if (curTrack.category === \"recital\") {\r\n  //   //   onRecital();\r\n  //   // } else {\r\n  //   //   onRemix();\r\n  //   // }\r\n  // }, [curTrack]);\r\n}\r\n\r\ninterface UsePlaylistProps {\r\n  currentTrack: Track;\r\n  setCurrentTrack: ActionCreator<string>;\r\n  previousTrack: Track | undefined;\r\n  playTrack: (t: Track) => void;\r\n  pauseTrack: (t: Track) => void;\r\n  // nextTrack: () => void;\r\n  restartCurrent: () => void;\r\n  pauseCurrent: () => void;\r\n  isPlaying: boolean;\r\n  currentAudioRef: React.MutableRefObject<HTMLAudioElement>;\r\n  currentAudio: HTMLAudioElement;\r\n  currentDuration: number;\r\n  trackCategory: TrackCategory;\r\n  isRecital: boolean;\r\n  startingTrack: Track;\r\n  infoDisplayMode: InfoDisplayMode;\r\n  setInfoDisplayMode: (payload: InfoDisplayMode) => void;\r\n}\r\n\r\nexport function usePlaylist(): UsePlaylistProps {\r\n  const currentTrackState = useHomeState((state) => state.currentTrack);\r\n  const setCurrentTrack = useHomeActions((actions) => actions.setCurrentTrack);\r\n  const allAudioElems = useRef<HTMLAudioElement[]>();\r\n  const setIsPlayingAction = useHomeActions((actions) => actions.setIsPlaying);\r\n  const isPlayingState = useHomeState((state) => state.isPlaying);\r\n  const currentAudioRef = useRef<HTMLAudioElement>(null);\r\n  const infoDisplayModeState = useHomeState((state) => state.infoDisplayMode);\r\n  const setInfoDisplayMode = useHomeActions((actions) => actions.setInfoDisplayMode)\r\n  // setInfoDisplayMode(\"bio\")\r\n  // setInfoDisplayMode.\r\n  const handleEnd = (e: Event) => {\r\n    // console.log(e.target);\r\n    const targ = e.target as HTMLAudioElement;\r\n    const title = targ.id.split(\"_\")[1];\r\n    const endedIndex = tracks.indexOf(\r\n      tracks.filter((t) => t.title === title)[0]\r\n    );\r\n    playTrack(tracks[endedIndex + 1]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const elems = tracks\r\n      .map((t) => \"audio_\" + t.title)\r\n      .map((id) => document.getElementById(id) as HTMLAudioElement)\r\n      .filter((e) => e !== null);\r\n\r\n    allAudioElems.current = elems;\r\n    allAudioElems.current.forEach((audio) => {\r\n      audio.addEventListener(\"ended\", handleEnd);\r\n    });\r\n    currentAudioRef.current = getTrackAudio(currentTrackState);\r\n    return () => {\r\n      allAudioElems.current.forEach((audio) => {\r\n        audio.removeEventListener(\"ended\", handleEnd);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const playTrack = (track: Track) => {\r\n    if (allAudioElems.current) {\r\n      allAudioElems.current.forEach((element) => {\r\n        if (element.id === \"audio_\" + track.title) {\r\n          // if (track.)\r\n          element.play();\r\n          setCurrentAudio(element);\r\n        } else {\r\n          element.pause();\r\n        }\r\n      });\r\n    }\r\n    setCurrentTrack(track.title);\r\n    setIsPlayingAction(true);\r\n  };\r\n\r\n  const pauseTrack = (track: Track) => {\r\n    if (allAudioElems.current) {\r\n      allAudioElems.current.forEach((element) => {\r\n        if (element.id === \"audio_\" + track.title) {\r\n          element.pause();\r\n        }\r\n      });\r\n    }\r\n    // setCurrentTrack(track.title);\r\n    setIsPlayingAction(false);\r\n  };\r\n\r\n  const restartCurrent = () => {\r\n    if (allAudioElems.current) {\r\n      allAudioElems.current.forEach((element) => {\r\n        if (element.id === \"audio_\" + currentTrack.title) {\r\n          element.currentTime = 0;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const pauseCurrent = () => {\r\n    if (allAudioElems.current) {\r\n      allAudioElems.current.forEach((element) => {\r\n        if (element.id === \"audio_\" + currentTrack.title) {\r\n          element.pause()\r\n        }\r\n      });\r\n    }\r\n    setIsPlaying(false)\r\n  }\r\n\r\n  const [currentTrack, setCurrentTrackLocal] = useState(currentTrackState);\r\n  const [infoDisplayMode, setInfoDisplayModeLocal] = useState(infoDisplayModeState);\r\n\r\n  const previousTrack = usePrevious<Track | undefined>(currentTrack, undefined);\r\n  const [trackCategory, setTrackCategory] = useState(\r\n    currentTrackState.category\r\n  );\r\n  const [isRecital, setIsRecital] = useState(\r\n    currentTrackState.category === \"recital\"\r\n  );\r\n  const [currentAudio, setCurrentAudio] = useState(\r\n    getTrackAudio(currentTrackState)\r\n  );\r\n  // const currentTrackCategory = currentTrackState.category;\r\n  const [currentDuration, setCurrentDuration] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const onRefChange = useCallback((node) => {\r\n    if (node === null) {\r\n      // DOM node referenced by ref has been unmounted\r\n    } else {\r\n      // DOM node referenced by ref has changed and exists\r\n    }\r\n  }, []); // adjust deps\r\n  // const curentAudioRef = () =>{getTrackAudio()}\r\n\r\n  useEffect(() => {\r\n    // console.log(currentTrackState);\r\n    setCurrentTrackLocal(currentTrackState);\r\n    setTrackCategory(currentTrackState.category);\r\n    setIsRecital(currentTrack.category === \"recital\");\r\n    // setCurrentAudio(getTrackAudio(currentTrackState))\r\n    const curAuidoGet = getTrackAudio(currentTrack);\r\n    setCurrentAudio(curAuidoGet);\r\n    // setCurrentDuration(currentAudio.duration);\r\n    currentAudioRef.current = getTrackAudio(currentTrack);\r\n    if (currentAudioRef.current) {\r\n      setCurrentDuration(currentAudioRef.current.duration);\r\n    }\r\n  }, [currentTrackState]);\r\n\r\n  useEffect(() => {\r\n    // console.log(currentTrackState);\r\n    setIsPlaying(isPlayingState);\r\n  }, [isPlayingState]);\r\n\r\n  useEffect(() => {\r\n    setInfoDisplayModeLocal(infoDisplayModeState)\r\n  }, [infoDisplayModeState]);\r\n\r\n\r\n  const startingTrack = tracks[0];\r\n  return {\r\n    currentTrack,\r\n    setCurrentTrack,\r\n    previousTrack,\r\n    playTrack,\r\n    pauseTrack,\r\n    restartCurrent,\r\n    pauseCurrent,\r\n    isPlaying,\r\n    currentAudioRef,\r\n    currentAudio,\r\n    currentDuration,\r\n    trackCategory,\r\n    isRecital,\r\n    startingTrack,\r\n    infoDisplayMode,\r\n    setInfoDisplayMode,\r\n  };\r\n}\r\n\r\nexport const useIsPlaying = (track: Track) => {\r\n  const currentTrackState = useHomeState((state) => state.currentTrack);\r\n  const [isPlaying, setIsPlaying] = useState(\r\n    currentTrackState.title === track.title\r\n  );\r\n  useEffect(() => {\r\n    if (track.title === currentTrackState.title) {\r\n      setIsPlaying(true);\r\n    } else {\r\n      setIsPlaying(false);\r\n    }\r\n  }, [currentTrackState]);\r\n  return isPlaying;\r\n};\r\n\r\nconst getTrackAudio = (track: Track): HTMLMediaElement => {\r\n  const test = document.getElementById(\r\n    \"audio_\" + track.title\r\n  ) as HTMLMediaElement;\r\n  // console.log(test);\r\n  return document.getElementById(\"audio_\" + track.title) as HTMLMediaElement;\r\n};\r\n\r\nexport function useToggle(initialValue: boolean): [boolean, () => void] {\r\n  const [value, setValue] = useState<boolean>(initialValue);\r\n\r\n  const toggleValue = () => setValue(!value);\r\n\r\n  return [value, toggleValue];\r\n}\r\n\r\nexport { useArray };\r\n\r\nconst test = \"test\";\r\n\r\nimport { RefObject, useEffect } from \"react\";\r\nimport { HomeModel, InfoDisplayMode, SSAppMode } from \"model/homeModel\";\r\nimport { Track, TrackCategory } from \"@interfaces/Track\";\r\nimport tracks from \"@static/tracks\";\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent;\r\n\r\nexport function useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current;\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(`mousedown`, listener);\r\n    document.addEventListener(`touchstart`, listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener);\r\n      document.removeEventListener(`touchstart`, listener);\r\n    };\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler]);\r\n}\r\n\r\n// export function useAppMode()\r\n\r\ntype TStatus = \"IDLE\" | \"PROCESSING\" | \"ERROR\" | \"SUCCESS\";\r\n\r\nexport function useAsyncTask<T extends any[], R = any>(\r\n  task: (...args: T) => Promise<R>\r\n) {\r\n  const [status, setStatus] = useState<TStatus>(\"IDLE\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const run = useCallback(async (...arg: T) => {\r\n    setStatus(\"PROCESSING\");\r\n    try {\r\n      const resp: R = await task(...arg);\r\n      setStatus(\"SUCCESS\");\r\n      return resp;\r\n    } catch (error) {\r\n      let message = error?.response?.data?.error?.message || error.message;\r\n      setMessage(message);\r\n      setStatus(\"ERROR\");\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  const reset = useCallback(() => {\r\n    setMessage(\"\");\r\n    setStatus(\"IDLE\");\r\n  }, []);\r\n\r\n  return {\r\n    run,\r\n    status,\r\n    message,\r\n    reset,\r\n  };\r\n}\r\n\r\n// import { useEffect, useReducer, useRef } from \"react\";\r\n\r\ninterface State<T> {\r\n  data?: T;\r\n  error?: Error;\r\n}\r\n\r\ntype Cache<T> = { [url: string]: T };\r\n\r\n// discriminated union type\r\ntype Action<T> =\r\n  | { type: \"loading\" }\r\n  | { type: \"fetched\"; payload: T }\r\n  | { type: \"error\"; payload: Error };\r\n\r\nexport function useFetch<T = unknown>(\r\n  url?: string,\r\n  options?: RequestInit\r\n): State<T> {\r\n  const cache = useRef<Cache<T>>({});\r\n\r\n  // Used to prevent state update if the component is unmounted\r\n  const cancelRequest = useRef<boolean>(false);\r\n\r\n  const initialState: State<T> = {\r\n    error: undefined,\r\n    data: undefined,\r\n  };\r\n\r\n  // Keep state logic separated\r\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\r\n    switch (action.type) {\r\n      case \"loading\":\r\n        return { ...initialState };\r\n      case \"fetched\":\r\n        return { ...initialState, data: action.payload };\r\n      case \"error\":\r\n        return { ...initialState, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    // Do nothing if the url is not given\r\n    if (!url) return;\r\n\r\n    const fetchData = async () => {\r\n      dispatch({ type: \"loading\" });\r\n\r\n      // If a cache exists for this url, return it\r\n      if (cache.current[url]) {\r\n        dispatch({ type: \"fetched\", payload: cache.current[url] });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(url, options);\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n\r\n        const data = (await response.json()) as T;\r\n        cache.current[url] = data;\r\n        if (cancelRequest.current) return;\r\n\r\n        dispatch({ type: \"fetched\", payload: data });\r\n      } catch (error) {\r\n        if (cancelRequest.current) return;\r\n\r\n        dispatch({ type: \"error\", payload: error as Error });\r\n      }\r\n    };\r\n\r\n    void fetchData();\r\n\r\n    // Use the cleanup function for avoiding a possibly...\r\n    // ...state update after the component was unmounted\r\n    return () => {\r\n      cancelRequest.current = true;\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [url]);\r\n\r\n  return state;\r\n}\r\n\r\nexport default useFetch;\r\n\r\n/**\r\n * Hook to get the width of a container\r\n */\r\nexport function useSize() {\r\n  const [rect, setRect] = useState(null);\r\n  const resizer = new ResizeObserver((entries) => {\r\n    entries && setRect(entries[0].contentRect);\r\n  });\r\n  const ref = useCallback((node) => {\r\n    if (node !== null) {\r\n      resizer.observe(node);\r\n      setRect(node.getBoundingClientRect());\r\n    }\r\n  }, []);\r\n  return [rect, ref];\r\n}\r\n\r\nfunction useEffectOnce(effect: EffectCallback) {\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(effect, []);\r\n}\r\n\r\nexport function useHover<T extends HTMLElement = HTMLElement>(\r\n  elementRef: RefObject<T>\r\n): boolean {\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  const handleMouseEnter = () => setValue(true);\r\n  const handleMouseLeave = () => setValue(false);\r\n\r\n  useEventListener(\"mouseenter\", handleMouseEnter, elementRef);\r\n  useEventListener(\"mouseleave\", handleMouseLeave, elementRef);\r\n\r\n  return value;\r\n}\r\n\r\nfunction useEventListener<T extends HTMLElement = HTMLDivElement>(\r\n  eventName: keyof WindowEventMap | string, // string to allow custom event\r\n  handler: (event: Event) => void,\r\n  element?: RefObject<T>\r\n) {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef<(event: Event) => void>();\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window;\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return;\r\n    }\r\n\r\n    // Update saved handler if necessary\r\n    if (savedHandler.current !== handler) {\r\n      savedHandler.current = handler;\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener = (event: Event) => {\r\n      // eslint-disable-next-line no-extra-boolean-cast\r\n      if (!!savedHandler?.current) {\r\n        savedHandler.current(event);\r\n      }\r\n    };\r\n\r\n    targetElement.addEventListener(eventName, eventListener);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element, handler]);\r\n}\r\n\r\ninterface WindowSize {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport function useWindowSize(): WindowSize {\r\n  const [windowSize, setWindowSize] = useState<WindowSize>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  const handleSize = () => {\r\n    setWindowSize({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    });\r\n  };\r\n\r\n  useEventListener(\"resize\", handleSize);\r\n\r\n  // Set size at the first client-side load\r\n  useLayoutEffect(() => {\r\n    handleSize();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n\r\ninterface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport function useElementSize<T extends HTMLElement = HTMLDivElement>(): [\r\n  (node: T | null) => void,\r\n  Size\r\n] {\r\n  // Mutable values like 'ref.current' aren't valid dependencies\r\n  // because mutating them doesn't re-render the component.\r\n  // Instead, we use a state as a ref to be reactive.\r\n  const [ref, setRef] = useState<T | null>(null);\r\n  const [size, setSize] = useState<Size>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  // Prevent too many rendering using useCallback\r\n  const handleSize = useCallback(() => {\r\n    setSize({\r\n      width: ref?.offsetWidth || 0,\r\n      height: ref?.offsetHeight || 0,\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref?.offsetHeight, ref?.offsetWidth]);\r\n\r\n  useEventListener(\"resize\", handleSize);\r\n\r\n  useLayoutEffect(() => {\r\n    handleSize();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref?.offsetHeight, ref?.offsetWidth]);\r\n\r\n  return [setRef, size];\r\n}\r\n\r\n// export function usePrevious(value) {\r\n//   const ref = useRef();\r\n//   useEffect(() => {\r\n//     ref.current = value;\r\n//   });\r\n//   return ref.current;\r\n// }\r\n","import React, { useState, useEffect} from \"react\";\r\nimport {Pane} from \"evergreen-ui\";\r\nimport \"@css/Section.scss\";\r\n\r\ninterface SectionProperties{\r\n  children: JSX.Element | JSX.Element[];\r\n  className?: string;\r\n  backgroundColor?: string\r\n  column?: boolean; \r\n  padding?: string;\r\n  width?: string | number;\r\n  height?: string | number;\r\n  backgroundBlur?: boolean;\r\n}\r\n// const Component = React.forwardRef<RefType, PropsType>((props, ref) => {\r\n// eslint-disable-next-line react/display-name\r\nconst Section = React.forwardRef<HTMLDivElement, SectionProperties>(({children, className, backgroundColor, column, padding, width, height, backgroundBlur}, ref) => {\r\n  const flexStatus = column?\"flex-column \":\"flex-row \"\r\n  const style = {\r\n    backgroundColor: backgroundColor??\"rgba(0,0,0,0)\",\r\n    padding: padding,\r\n    borderRadius: \"1em\",\r\n    width: width??\"100%\", \r\n    height: height??\"100%\",\r\n    backdropFilter: backgroundBlur?\"blur(10px)\":\"\",\r\n  }\r\n  return(\r\n    <div className = {\"ui-section \" + flexStatus + className??\"\"}style = {style} ref = {ref}>\r\n    {/* <Pane ref = {ref} className = {\"ui-section \" + flexStatus + className??\"\"}width = {\"100%\"} height = {\"100%\"} backgroundColor = {backgroundColor??\"lightgrey\"} padding = {padding??\"1em\"} borderRadius = {\"1em\"}> */}\r\n        {children} \r\n    {/* </Pane> */}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Section\r\n","export interface AppConfig {\r\n  sampleHeight: number;\r\n  longestSample: number;\r\n  showIntro: boolean;\r\n  showFPS: boolean;\r\n  homePadding: number;\r\n}\r\n\r\nconst appConfig = {\r\n  sampleHeight: 40,\r\n  longestSample: 5,\r\n  showIntro: false,\r\n  // showFPS: true,\r\n  showFPS: false,\r\n  homePadding: 20,\r\n};\r\n\r\nexport default appConfig;\r\n","import { AppMode } from \"@components/SampleTray/NewSampleTray/Canvas\";\r\n\r\ninterface CanvasConfig {\r\n  startMode: AppMode;\r\n  sampleContainerWidth: number;\r\n  sampleListWidth: number;\r\n  sampleTagWidth: number;\r\n  widgetWidth: number;\r\n  widgetHeight: number;\r\n  sampleCollectionGroupX: number;\r\n  sampleCollectionRectHeight: number;\r\n}\r\n\r\nconst gridUnit = window.innerWidth / 12;\r\nconst canvasConfig: CanvasConfig = {\r\n  startMode: \"samples\",\r\n  sampleContainerWidth: gridUnit * 2,\r\n  sampleListWidth: gridUnit * 5,\r\n  sampleTagWidth: gridUnit * 4,\r\n  widgetWidth: 300,\r\n  widgetHeight: 300,\r\n  sampleCollectionGroupX: 50,\r\n  sampleCollectionRectHeight: window.innerHeight - 100,\r\n};\r\n\r\nexport default canvasConfig;\r\n","export interface Theme {\r\n  primary: string;\r\n  primaryInactive: string;\r\n  primaryMedium: string;\r\n  secondary: string;\r\n  secondaryRGB: number[];\r\n  secondaryHover: string;\r\n  stroke: string;\r\n  transparent: string;\r\n  borderRadius: number;\r\n  textDark: string;\r\n  shadow: string;\r\n  primaryFont: string;\r\n  titleFontFamily: string;\r\n  bigFont: string;\r\n  mediumFont: string;\r\n  titleFont: string;\r\n  logoFont: string;\r\n}\r\n\r\nconst theme = {\r\n  primary: \"#9e9e9e\",\r\n  primaryDark: \"#1f1f1f\",\r\n  primaryMedium: \"rgba(100, 100, 100, 255)\",\r\n  secondary: \"#fff200\",\r\n  secondaryRGB: [255, 242, 0],\r\n  secondaryHover: \"#b38900\",\r\n  primaryInactive: \"#4c4c4c\",\r\n  transparent: \"#0000\",\r\n  stroke: \"rgba(0,0,0,0)\",\r\n  border: \"2px solid black\",\r\n  // borderRadius: 0,\r\n  borderRadius: 10,\r\n  // borderRadius: 10,\r\n  textDark: \"black\",\r\n  text: \"white\",\r\n  shadow: \"5px 5px 15px 5px #000000\",\r\n  // titleFontFamily: \"Heming\",\r\n  // titleFontFamily: \"Nunito\",\r\n  titleFontFamily: \"Mimoid\",\r\n  // titleFontFamily: \"OTR type\",\r\n  // titleFontFamily: \"Hoover\",\r\n  // titleFontFamily: \"Aber-Mono\",\r\n  primaryFont: \"OTR type\",\r\n  // primaryFont: \"Nunito\",\r\n  // primaryFont: \"NeueMetana-Bold\",\r\n  // primaryFont: \"Aber-Mono\",\r\n  titleFont: \"3vw\",\r\n  // bigFont: \"6.5vw\",\r\n  bigFont: \"min(10.5vh, 100px)\",\r\n\r\n  mediumFont: \"1.5vw\",\r\n  logoFont: \"Pexel\",\r\n};\r\n\r\nexport default theme;\r\n","import Konva from \"konva\";\r\nimport SampleData from \"@classes/SampleData\";\r\nimport { Group, Layer, Path, Rect, Stage, Text, Circle } from \"react-konva\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { groupBy, mapRange } from \"@utils\";\r\nimport React, { MutableRefObject, RefObject, useRef, useState } from \"react\";\r\nimport { PathConfig } from \"konva/lib/shapes/Path\";\r\n\r\nexport interface BasicSample extends PathConfig {\r\n  sample: SampleData;\r\n  setRef?: (ref: RefObject<Konva.Path>) => void;\r\n  // onDragMove: (e: KonvaEventObject<DragEvent>) => void;\r\n  // onDragStart: (e: KonvaEventObject<DragEvent>) => void;\r\n  // onDragEnd: (e: KonvaEventObject<DragEvent>) => void;\r\n  // onMouseEnter: (e: KonvaEventObject<MouseEvent>) => void;\r\n  // onMouseDown: (e: KonvaEventObject<MouseEvent>) => void;\r\n  // onMouseUp: (e: KonvaEventObject<MouseEvent>) => void;\r\n  // draggable: boolean;\r\n  // fill: string;\r\n}\r\n\r\n// packedSamples: computed((state)=>{\r\n//   return packedSamples.packed.map((sample) => {\r\n//     state.activeTags.every(t=>sample.tags.includes(t))\r\n//   })\r\n// }),\r\n\r\nconst BasicSamplePath = React.memo((props: BasicSample): JSX.Element => {\r\n  const [isHovered, setisHovered] = useState(false);\r\n  const [absolutePosition, setabsolutePosition] = useState({ x: 0, y: 0 });\r\n  const sampleRef = useRef<Konva.Path>(null);\r\n\r\n  const {\r\n    w,\r\n    h,\r\n    width,\r\n    fill,\r\n    onMouseDown,\r\n    onDragStart,\r\n    onDragEnd,\r\n    onMouseEnter,\r\n    onDragMove,\r\n    onMouseUp,\r\n    draggable,\r\n    id,\r\n    svgPath,\r\n    sample,\r\n    x,\r\n    y,\r\n    scaleX,\r\n    // isHovered,\r\n  } = props;\r\n\r\n  const startPoint = { x: x, y: y };\r\n  // const startPoint = { x: 0, y: 0 };\r\n  const endPoint = { x: x + w, y: y + h };\r\n  const gradient = getGradient(sample.tags);\r\n  console.log(svgPath);\r\n  return (\r\n    <Path\r\n      x={x}\r\n      y={y}\r\n      ref={sampleRef}\r\n      width={width}\r\n      height={h}\r\n      id={id}\r\n      // y={h / 2}\r\n      data={sample.svgPath}\r\n      scaleX={scaleX}\r\n      scaleY={isHovered ? 1.1 : 1}\r\n      // fillPriority={\"linear-gradient\"}\r\n      // fill={fill}\r\n      fill={\"red\"}\r\n      // onMouseUp={onMouseUp}\r\n      // onMouseDown={(e) => {\r\n      //   console.log(e.target.absolutePosition());\r\n      //   setabsolutePosition(e.target.absolutePosition());\r\n      //   onMouseDown(e);\r\n      // }}\r\n      // onDragStart={onDragStart}\r\n      // onDragEnd={onDragEnd}\r\n      // onMouseEnter={(e) => {\r\n      //   onMouseEnter(e);\r\n      //   setisHovered(true);\r\n      // }}\r\n      // onMouseLeave={(e) => {\r\n      //   onMouseEnter(e);\r\n      //   setisHovered(false);\r\n      // }}\r\n      // dragBoundFunc={(e) => {\r\n      //   // console.log(e);\r\n      //   // return { x: x, y: y };\r\n      //   // return null;\r\n      //   return absolutePosition;\r\n      //   // return { x: 0, y: 0 };\r\n      // }}\r\n      // fillLinearGradientStartPoint={{ x: 0, y: 0 }}\r\n      // fillLinearGradientEndPoint={{ x: w, y: h }}\r\n      // fillLinearGradientColorStops={gradient}\r\n      // onDragMove={(e) => {\r\n      //   onDragMove(e);\r\n      // }}\r\n      draggable={draggable}\r\n      stroke={isHovered ? \"white\" : \"black\"}\r\n      strokeWidth={isHovered ? 2 : 2}\r\n    />\r\n  );\r\n});\r\nconst getGradient = (tags: string[]): (string | number)[] => {\r\n  let stop1 = \"blue\";\r\n  let stop2 = \"yellow\";\r\n\r\n  if (tags.includes(\"MR\")) {\r\n    stop1 = \"#3023AE\";\r\n    stop2 = \"#53A0FD\";\r\n    // console.log(\"HAD AN MR\");\r\n  }\r\n  if (tags.includes(\"LR\")) {\r\n    stop1 = \"#8c34eb\";\r\n    stop2 = \"#d034eb\";\r\n  }\r\n  if (tags.includes(\"LR\")) {\r\n    stop1 = \"#ebd510\";\r\n    stop2 = \"#eb8110\";\r\n  }\r\n  if (tags.includes(\"MIX\")) {\r\n    stop1 = \"#60eb10\";\r\n    stop2 = \"#2a10eb\";\r\n  }\r\n\r\n  return [0, stop1, 0.5, stop2, 1, stop1];\r\n};\r\nexport default BasicSamplePath;\r\n","import SampleCollection from \"@classes/SampleCollection\";\r\nimport appConfig from \"@static/appConfig\";\r\nimport canvasConfig from \"@static/canvasConfig\";\r\nimport theme from \"@static/theme\";\r\nimport React, { MutableRefObject } from \"react\";\r\nimport { Group, Rect, Text } from \"react-konva\";\r\nimport { AppMode } from \"../Canvas\";\r\nimport BasicSamplePath from \"./BasicSamplePath\";\r\n\r\nconst CollectionContainer = ({\r\n  sampleCollection,\r\n  appMode,\r\n}: {\r\n  sampleCollection: SampleCollection;\r\n  appMode: AppMode;\r\n}): JSX.Element => {\r\n  console.log(\"RENDERING COLLECTION CONTAINER\");\r\n\r\n  return (\r\n    <>\r\n      <Rect\r\n        fill={theme.stroke}\r\n        height={window.innerHeight - 100}\r\n        width={canvasConfig.sampleContainerWidth}\r\n        stroke={theme.primaryInactive}\r\n        strokeWidth={2}\r\n        cornerRadius={5}\r\n      />\r\n      <Text text={sampleCollection.name} />\r\n      {sampleCollection.samples.map((s, i) => {\r\n        const padding = 20;\r\n        const samplePath = {\r\n          x: 20,\r\n          y: appConfig.sampleHeight * i + appConfig.sampleHeight / 2 + padding,\r\n          sample: s,\r\n          h: appConfig.sampleHeight,\r\n          width: 10,\r\n          scaleX: 0.5,\r\n        };\r\n        return <BasicSamplePath key={i} {...samplePath} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CollectionContainer);\r\n","import theme from \"@static/theme\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@css/DialogBox.scss\";\r\nimport classNames from \"classnames\";\r\nimport { useOnClickOutside } from \"@hooks\";\r\n\r\nconst DialogBox = ({\r\n  open,\r\n  setOpen,\r\n}: {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n}): JSX.Element => {\r\n  const widthPercent = 25;\r\n  const leftPercent = 50 - widthPercent / 2;\r\n\r\n  const containerStyle = {\r\n    width: `${widthPercent}%`,\r\n    height: 200,\r\n    display: open ? \"flex\" : \"none\",\r\n    backgroundColor: theme.secondary,\r\n    borderRadius: theme.borderRadius,\r\n    position: \"absolute\",\r\n    left: `${leftPercent}%`,\r\n    bottom: \"25%\",\r\n    overflow: \"hidden\",\r\n    color: theme.textDark,\r\n    // transform: \"translate(-50%, -50%)\",\r\n    padding: \"1em\",\r\n  } as React.CSSProperties;\r\n\r\n  const handleClickOutside = () => {\r\n    setOpen(false);\r\n    console.log(\"clicked outside\");\r\n  };\r\n\r\n  const ref = useRef(null);\r\n  useOnClickOutside(ref, handleClickOutside);\r\n\r\n  const dialogClass = classNames(\"dialog\", {\r\n    hidden: !open,\r\n    \"dialog-display\": open,\r\n  });\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={dialogClass} style={containerStyle} ref={ref}>\r\n      <p>\r\n        Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n        since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book. It has survived not only five\r\n        centuries, but also the leap into electronic typesetting, remaining\r\n        essentially unchanged. It was popularised in the 1960s with the release\r\n        of Letraset sheets containing Lorem Ipsum passages, and more recently\r\n        with desktop publishing software like Aldus PageMaker including versions\r\n        of Lorem Ipsum.\r\n      </p>\r\n    </div>,\r\n    document.getElementById(\"dialog-box\") as HTMLDivElement\r\n  );\r\n};\r\n\r\nexport default DialogBox;\r\n","type KosimaReaction =\r\n  | \"KOSIMA_SURPRISE\"\r\n  | \"KOSIMA_QUESTION\"\r\n  | \"KOSIMA_THINKING\"\r\n  | \"KOSIMA_NEUTRAL\";\r\n\r\nclass Kosima {\r\n  static KosimaFolder = process.env.PUBLIC_URL + \"/Kosima/\";\r\n  reaction!: KosimaReaction;\r\n  constructor() {\r\n    this.reaction = \"KOSIMA_NEUTRAL\";\r\n  }\r\n\r\n  reactionImage() {\r\n    console.log(Kosima.KosimaFolder + this.reaction + \".svg\");\r\n    return Kosima.KosimaFolder + this.reaction + \".svg\";\r\n  }\r\n  baseImage() {\r\n    return Kosima.KosimaFolder + \"KOSIMA_NEUTRAL\" + \".svg\";\r\n  }\r\n  setReaction(reaction: KosimaReaction) {\r\n    this.reaction = reaction;\r\n  }\r\n}\r\n\r\nexport default Kosima;\r\n","export function randomElements(arr: any[], count: number) {\n  let len = arr.length;\n  let lookup = {};\n  let tmp = [];\n\n  if (count > len) count = len;\n\n  for (let i = 0; i < count; i++) {\n    let index;\n    do {\n      index = ~~(Math.random() * len);\n    } while (index in lookup);\n    lookup[index] = null;\n    tmp.push(arr[index]);\n  }\n\n  return tmp;\n}\n\nexport function mapRange(\n  value: number,\n  inMin: number,\n  inMax: number,\n  outMin: number,\n  outMax: number\n): number {\n  // return Math.max( inMin, Math.min( outMax, unclamped ) );\n  return ((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n}\n\nexport function downloadBlob(\n  content: any,\n  filename: string,\n  contentType: string\n): void {\n  // Create a blob\n  const blob = new Blob([content], { type: contentType });\n  const url = URL.createObjectURL(blob);\n\n  // Create a link to download it\n  const pom = document.createElement(\"a\");\n  pom.href = url;\n  pom.setAttribute(\"download\", filename);\n  pom.click();\n}\n\nexport const groupBy = (list: any[], key: string): Map<string, Array<any>> => {\n  let map = new Map();\n  list.map((val) => {\n    if (!map.has(val[key])) {\n      map.set(\n        val[key],\n        list.filter((data) => data[key] == val[key])\n      );\n    }\n  });\n  return map;\n};\n\nexport const getRandomIntInclusive = (min, max): number => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n};\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Circle, Group, Image, Layer } from \"react-konva\";\r\nimport Kosima from \"@classes/Kosima\";\r\nimport useImage from \"use-image\";\r\nimport theme from \"@static/theme\";\r\nimport { mapRange } from \"@utils\";\r\nimport { group } from \"console\";\r\nimport Konva from \"konva\";\r\nimport { ActionCreator, Actions } from \"easy-peasy\";\r\nimport { CanvasModel } from \"../../Canvas\";\r\n\r\ninterface KosimaProperties\r\n  extends Pick<Actions<CanvasModel>, \"setPopOverOpen\"> {\r\n  kosima: Kosima;\r\n  // setPopOverOpen: (payload: boolean) => void\r\n}\r\n\r\nconst KosimaRender = ({\r\n  kosima,\r\n  setPopOverOpen,\r\n}: KosimaProperties): JSX.Element => {\r\n  const [baseImage] = useImage(kosima.baseImage());\r\n  kosima.setReaction(\"KOSIMA_QUESTION\");\r\n\r\n  const [expressionImage] = useImage(kosima.reactionImage());\r\n  // console.log(expressionImage.w);\r\n  const width = 150.0;\r\n  const height = 150.0;\r\n  console.log(expressionImage);\r\n\r\n  const xPos = (window.innerWidth - width) / 2;\r\n  const yPos = window.innerHeight - height - 50;\r\n  const eyeDiameter = 1;\r\n  const headHeight = 9;\r\n  const hUnit = height / headHeight;\r\n  const eyeHeight = 150 - 5 * hUnit;\r\n  // let eyeY = height - (eyeHeight / 2) * hUnit;\r\n  // eyeY -= (eyeDiameter * hUnit) / 2;\r\n  const eyeY = eyeHeight + (eyeDiameter / 2) * hUnit + eyeHeight / 2;\r\n\r\n  // const eyeY = eyeHeight / 2;\r\n  // const eyeY = height;\r\n\r\n  // eyeY += (eyeHeight / 2.0) * hUnit;\r\n\r\n  // let eyeY = eyeHeight * hUnit + (eyeHeight / 2) * hUnit;\r\n\r\n  // const eyeX = (width - eyeRadius) / 2;\r\n  // const eyeX = width / 2 - (eyeDiameter / 2) * hUnit;\r\n  const eyeX = (width - eyeDiameter) / 2;\r\n  const [eyePos, setEyePos] = useState({\r\n    x: eyeX,\r\n    y: eyeY,\r\n  });\r\n  const groupRef = useRef(null);\r\n  const [eyeOffset, setEyeOffset] = useState({ x: 0, y: 0 });\r\n  useEffect(() => {\r\n    // console.log(eyeOffset);\r\n  }, [eyeOffset]);\r\n  const maxEyeRadius = 15;\r\n  const circRef = useRef(null);\r\n\r\n  return (\r\n    <Layer\r\n      onMouseUp={(e) => {\r\n        setPopOverOpen(true);\r\n      }}\r\n      onMouseLeave={(e) => {\r\n        circRef.current.to({\r\n          x: eyePos.x,\r\n          y: eyePos.y,\r\n          easing: Konva.Easings.EaseOut,\r\n        });\r\n      }}\r\n      onMouseMove={(e) => {\r\n        console.log(groupRef);\r\n        if (groupRef.current) {\r\n          const bBox = groupRef.current.getClientRect();\r\n          console.log(bBox);\r\n          const newX = mapRange(\r\n            e.evt.pageX,\r\n            bBox.x,\r\n            bBox.x + bBox.width,\r\n            -maxEyeRadius,\r\n            maxEyeRadius\r\n          );\r\n          console.log(newX);\r\n          console.log(e);\r\n          console.log(e.evt.x);\r\n          console.log(e.evt.y);\r\n          const newY = mapRange(\r\n            e.evt.pageY,\r\n            bBox.y,\r\n            bBox.y + bBox.height,\r\n            -maxEyeRadius,\r\n            maxEyeRadius\r\n          );\r\n          setEyeOffset({ x: newX, y: newY });\r\n        }\r\n      }}\r\n    >\r\n      <Group x={xPos} y={yPos} ref={groupRef}>\r\n        <Image width={width} height={height} image={baseImage} />\r\n        {/* <Image width={width} height={height} image={expressionImage} /> */}\r\n        <Circle\r\n          ref={circRef}\r\n          x={eyePos.x + eyeOffset.x}\r\n          y={eyePos.y + eyeOffset.y}\r\n          fill={\"yellow\"}\r\n          radius={hUnit * 0.5}\r\n          stroke={theme.stroke}\r\n        />\r\n      </Group>\r\n    </Layer>\r\n  );\r\n};\r\n\r\nexport default React.memo(KosimaRender);\r\n","import SampleData from \"./SampleData\";\r\n\r\nclass SampleCollection {\r\n  samples!: SampleData[];\r\n  name!: string;\r\n\r\n  constructor(samples: SampleData[], name: string) {\r\n    this.samples = samples;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\nexport default SampleCollection;\r\n","import SampleCollection from \"@classes/SampleCollection\";\r\nimport theme from \"@static/theme\";\r\nimport Konva from \"konva\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { RectConfig } from \"konva/lib/shapes/Rect\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Group, Rect } from \"react-konva\";\r\n\r\ninterface CollectionNavProperties extends Partial<RectConfig> {\r\n  sampleCollections: SampleCollection[];\r\n  activeCollection: string;\r\n  // onMouseUp: (e: KonvaEventObject<MouseEvent>) => void;\r\n}\r\n\r\nconst CollectionNav = (props: CollectionNavProperties): JSX.Element => {\r\n  const height = 15;\r\n  const spacing = 5;\r\n  const numSamples = props.sampleCollections.length;\r\n  const containerGroupRef = useRef<Konva.Layer>(null);\r\n  const yPos =\r\n    window.innerHeight / 2 - (height * numSamples + spacing * numSamples) / 2;\r\n\r\n  return (\r\n    <Group>\r\n      <Group ref={containerGroupRef} y={yPos}>\r\n        {props.sampleCollections.map((c, i) => {\r\n          const groupProps = {\r\n            x: 10,\r\n            y: i * 15 + spacing,\r\n          };\r\n          const isActiveCollection = props.activeCollection === c.name;\r\n          const rectProps = {\r\n            fill: isActiveCollection ? theme.secondary : theme.primary,\r\n            stroke: theme.secondary,\r\n            width: height,\r\n            height: height,\r\n            id: c.name,\r\n            onMouseUp: props.onMouseUp,\r\n          };\r\n\r\n          return (\r\n            <Group key={i} {...groupProps}>\r\n              <Rect {...rectProps}></Rect>\r\n            </Group>\r\n          );\r\n        })}\r\n      </Group>\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default CollectionNav;\r\n","export default class Tag {\r\n  name: string;\r\n  count: number | undefined;\r\n\r\n  constructor(name: string, count: number) {\r\n    this.name = name;\r\n    this.count = count;\r\n  }\r\n}\r\n","type SampleTag = \"short\" |\"long\" | \"fast\" | \"upbeat\" | \"intense\" | \"dramatic\" |\"chaotic\"\r\n\r\nconst tags = [\"FD\", \"MR\", \"HR\", \"ST\", \"LT\", \"MIX\", \"LR\", \"E\", \"M\", \"FL\", \"C\", \"BACH\", \"BARTOK\", \"YSAYE\", \"TONE\", \"TRL\", \"T\"]\r\n// const tags = [\"FD\", \"MR\", \"HR\", \"ST\", \"LT\", \"MIX\", \"LR\", \"E\", \"M\", \"3L\", \"2L\", \"1L\", \"4L\", \"FL\", \"C\", \"BACH\", \"BARTOK\", \"YSAYE\"]\r\nexport default tags;\r\n\r\n\r\n// AIzaSyBo7S3o_RHuyBnG3Z7ywlvz3FbtKU9n0MQ","// export interface Block {\r\n//   [x: string]: any;\r\n//   w: number;\r\n//   h: number;\r\n//   fit?: PackNode;\r\n//   // id: string;\r\n// }\r\n\r\nimport SampleData from \"@classes/SampleData\";\r\n\r\nexport interface PackNode {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  // id: string;\r\n  used?: boolean;\r\n  down?: PackNode;\r\n  right?: PackNode;\r\n}\r\n\r\nexport interface Piece {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n}\r\n\r\nexport interface Fit {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport class Packer {\r\n  readonly w: number;\r\n  readonly h: number;\r\n  readonly root: PackNode;\r\n  readonly gutter: number;\r\n\r\n  constructor(w: number, h: number, gutter?: number) {\r\n    const margin = 40;\r\n    this.w = w;\r\n    this.h = h;\r\n    this.gutter = gutter ?? 5;\r\n    this.root = { x: margin, y: 0, w: w, h: h, used: false };\r\n  }\r\n  fit(blocks: SampleData[]): void {\r\n    let n, node, block;\r\n    for (n = 0; n < blocks.length; n++) {\r\n      block = blocks[n];\r\n      // block.w += this.gutter;\r\n      // block.h += this.gutter;\r\n      if ((node = this.findNode(this.root, block.w, block.h))) {\r\n        const fit = this.splitNode(node, block.w, block.h, block.id);\r\n        block.fit = this.splitNode(node, block.w, block.h, block.id);\r\n        // console.log(fit);\r\n      }\r\n\r\n      // console.log(this.splitNode(node, block.w, block.h, block.id));\r\n    }\r\n  }\r\n  findNode(root: PackNode, w: number, h: number): PackNode | null {\r\n    if (root.used && root.right && root.down)\r\n      return this.findNode(root.right, w, h) || this.findNode(root.down, w, h);\r\n    else if (w <= root.w && h <= root.h) return root;\r\n    else return null;\r\n  }\r\n  splitNode(node: PackNode, w: number, h: number, id: string): PackNode {\r\n    node.used = true;\r\n    node.down = {\r\n      x: node.x,\r\n      y: node.y + h,\r\n      w: node.w,\r\n      h: node.h - h,\r\n    };\r\n    node.right = {\r\n      x: node.x + w,\r\n      y: node.y,\r\n      w: node.w - w,\r\n      h: h,\r\n    };\r\n    return node;\r\n  }\r\n}\r\n\r\nexport default Packer;\r\n","import Packer from \"./Packer\";\r\nimport { RectConfig } from \"konva/lib/shapes/Rect\";\r\nimport SampleData from \"@classes/SampleData\";\r\nimport { mapRange } from \"@utils\";\r\nimport appConfig from \"@static/appConfig\";\r\n\r\nconst stageProps = {\r\n  width: window.innerWidth,\r\n  height: 800,\r\n};\r\n\r\nconst greens = [\r\n  \"#A4DE02\",\r\n  \"#76BA1B\",\r\n  \"#4C9A2A\",\r\n  \"#1E5631\",\r\n  \"#68BB59\",\r\n  \"#ACDF87\",\r\n];\r\n// const makeBlocks = (count: number, colWidth: number): Block[] => {\r\n//   let blocks = [];\r\n//   const widths = [1, 2, 3, 4, 5];\r\n//   for (let index = 0; index < count; index++) {\r\n//     const block = {\r\n//       w: randomElement(widths) * colWidth,\r\n//       h: 74,\r\n//     };\r\n//     blocks.push(block);\r\n//   }\r\n//   return blocks;\r\n// };\r\n\r\n// const packer = new Packer(stageProps.width, stageProps.height, 10);\r\n// const blocks = makeBlocks(25, stageProps.width / 10);\r\n// packer.fit(blocks);\r\n\r\nconst getSampleWidth2 = (sample: SampleData): number => {\r\n  const mapped = mapRange(sample.length, 0, 3.0, 5, 12);\r\n  const rounded = Math.round(mapped);\r\n  return rounded;\r\n};\r\n\r\n// const samplesToBlocks = (samples: SampleData[]): Block[] => {\r\n//   return samples.map((s) => {\r\n//     const w = getSampleWidth2(s);\r\n//     const h = 70;\r\n//     return {\r\n//       w: w,\r\n//       h: h,\r\n//       id: s.id,\r\n//     } as Block;\r\n//   });\r\n// };\r\n\r\nexport const packSamples = (\r\n  samples: SampleData[],\r\n  width: number,\r\n  height: number\r\n): SampleData[] => {\r\n  // const sampleBlocks = samplesToBlocks(samples);\r\n  console.log(\"PACKING SAMPLES\");\r\n  samples.forEach((sample) => {\r\n    sample.calculateDimensions(width, appConfig.sampleHeight);\r\n  });\r\n  const packer = new Packer(width, height, 10);\r\n  packer.fit(samples);\r\n  // console.log(samples);\r\n  return samples;\r\n};\r\n\r\nfunction randomElement<T>(array: T[]): T {\r\n  return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\n// const rects = makeRects(blocks);\r\nconst rects = [];\r\nexport default rects;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Circle, Group, Text } from \"react-konva\";\r\nimport { CircleConfig } from \"konva/lib/shapes/Circle\";\r\nimport Tag from \"@classes/Tag\";\r\nimport Konva from \"konva\";\r\nimport theme from \"@static/theme\";\r\n\r\nexport interface TagSelectorProps extends Partial<CircleConfig> {\r\n  tag: Tag;\r\n  activeTags: string[];\r\n}\r\n\r\nconst TagSelector = (props: TagSelectorProps): JSX.Element => {\r\n  const {\r\n    activeTags,\r\n    x,\r\n    y,\r\n    tag,\r\n    w,\r\n    h,\r\n    fill,\r\n    radius,\r\n    onMouseDown,\r\n    onDragStart,\r\n    onDragEnd,\r\n    onMouseEnter,\r\n    // onMouseExit,\r\n    onDragMove,\r\n    onMouseUp,\r\n    draggable,\r\n    id,\r\n    fit,\r\n    stroke,\r\n    strokeWidth,\r\n    // isHovered,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    console.log(x, y);\r\n    groupRef.current.to({\r\n      x: x,\r\n      y: y,\r\n    });\r\n  }, [x, y]);\r\n\r\n  const groupRef = useRef(null);\r\n  const groupProps = {\r\n    // y,\r\n    // x,\r\n    onMouseDown,\r\n    onDragStart,\r\n    onDragEnd,\r\n    onMouseEnter,\r\n    onDragMove,\r\n    onMouseUp,\r\n    draggable,\r\n    id,\r\n  };\r\n\r\n  const [isActive, setIsActive] = useState(activeTags.includes(props.tag.name));\r\n  const [circleFill, setCircleFill] = useState(fill);\r\n  const circleProps = { strokeWidth };\r\n  const [hovered, setHovered] = useState(false);\r\n  const circRef = useRef(null);\r\n  useEffect(() => {\r\n    // console.log(activeTags);\r\n    if (activeTags.includes(tag.name)) {\r\n      setCircleFill(theme.secondary);\r\n    } else {\r\n      setCircleFill(fill);\r\n    }\r\n  }, [activeTags]);\r\n\r\n  useEffect(() => {\r\n    // console.log(radius);\r\n    circRef.current.to({\r\n      radius: radius,\r\n      duration: 0.3,\r\n      easing: Konva.Easings.EaseInOut,\r\n    });\r\n  }, [radius]);\r\n\r\n  return (\r\n    <Group {...groupProps} ref={groupRef}>\r\n      <Circle\r\n        onMouseEnter={(e) => {\r\n          setHovered(true);\r\n          //   e.target.attrs.fill = theme.secondary_hover;\r\n          //   onMouseEnter(e);\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          setHovered(false);\r\n        }}\r\n        id={`tag_${tag.name}_circle`}\r\n        {...circleProps}\r\n        stroke={tag.count === 0 ? theme.primaryInactive : stroke}\r\n        fill={\r\n          tag.count == 0\r\n            ? theme.primary\r\n            : hovered\r\n            ? theme.secondaryHover\r\n            : theme.stroke\r\n        }\r\n        // fill={\"green\"}\r\n        ref={circRef}\r\n      />\r\n      <Text\r\n        x={-radius}\r\n        fill={\"white\"}\r\n        text={tag.name}\r\n        align={\"center\"}\r\n        width={radius * 2}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default React.memo(TagSelector);\r\n","import Tag from \"@classes/Tag\";\r\nimport theme from \"@static/theme\";\r\nimport { mapRange } from \"@utils\";\r\nimport { ActionCreator, Actions } from \"easy-peasy\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { CircleConfig } from \"konva/lib/shapes/Circle\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Circle, Layer } from \"react-konva\";\r\nimport { AppMode, CanvasModel } from \"../../Canvas\";\r\nimport TagSelector, { TagSelectorProps } from \"../TagSelector\";\r\n\r\ninterface TagsLayerProps\r\n  extends Pick<Actions<CanvasModel>, \"removeTag\" | \"addTag\"> {\r\n  appMode: AppMode;\r\n  tags: Tag[];\r\n  selectedTags: string[];\r\n}\r\nconst TagsLayer = ({\r\n  appMode,\r\n  tags,\r\n  removeTag,\r\n  addTag,\r\n  selectedTags,\r\n}: TagsLayerProps): JSX.Element => {\r\n  const layerRef = useRef(null);\r\n\r\n  // useEffect(() => {\r\n  if (appMode !== \"samples\") {\r\n    if (layerRef.current) {\r\n      layerRef.current.children.forEach((element) => {\r\n        element.to({\r\n          opacity: 0,\r\n          // scale: 0,\r\n          duration: 0.1,\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    if (layerRef.current) {\r\n      layerRef.current.children.forEach((element) => {\r\n        element.to({\r\n          opacity: 1,\r\n          // scale: 0,\r\n          duration: 0.5,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  // }, [appMode]);\r\n\r\n  useEffect(() => {\r\n    console.log(tags);\r\n  }, [tags]);\r\n\r\n  const withRadiusTags = tags.map((t) => {\r\n    console.log(t.count);\r\n    // const circleRadius = mapRange(t.count, 0, 360, 50, 150);\r\n    const circleRadius = mapRange(t.count, 0, 170, 20, 80);\r\n    return {\r\n      tag: t,\r\n      radius: circleRadius,\r\n    };\r\n  });\r\n\r\n  const allRadii = withRadiusTags.map((t) => t.radius);\r\n  const bigRadius = 200;\r\n  // let testRadii = allRadii.map(r=>mapRange())\r\n  console.log(allRadii);\r\n  let xPos = window.innerWidth - bigRadius - 100;\r\n  let yPos = window.innerHeight / 2;\r\n  const tagCircles = withRadiusTags.map((tag, i) => {\r\n    let posX = bigRadius * Math.cos(findPlace(i, bigRadius, allRadii));\r\n    let posY = bigRadius * Math.sin(findPlace(i, bigRadius, allRadii));\r\n    posX += xPos;\r\n    posY += yPos;\r\n\r\n    const onMouseUp = (e: KonvaEventObject<MouseEvent>): void => {\r\n      console.log(\"got circle mouse up\");\r\n      console.log(tag);\r\n      if (selectedTags.includes(tag.tag.name)) {\r\n        removeTag(tag.tag.name);\r\n      } else {\r\n        addTag(tag.tag.name);\r\n      }\r\n      console.log(selectedTags);\r\n    };\r\n\r\n    return {\r\n      activeTags: selectedTags,\r\n      tag: tag.tag,\r\n      key: i,\r\n      radius: tag.radius,\r\n      fill: theme.primary,\r\n      x: posX,\r\n      y: posY,\r\n      stroke: theme.secondary,\r\n      strokeWidth: 5,\r\n      onMouseUp,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Layer ref={layerRef}>\r\n      <Circle x={xPos} y={yPos} radius={bigRadius} stroke={\"red\"} />\r\n      {tagCircles.map((c, i) => {\r\n        return <TagSelector {...c} key={i} />;\r\n      })}\r\n    </Layer>\r\n  );\r\n};\r\n\r\nexport default TagsLayer;\r\n\r\n//from https://stackoverflow.com/questions/69684506/arrange-circles-along-circle-without-overlap/69685450#69685450\r\nfunction findPlace(i: number, bigRadius: number, allRadii: number[]): number {\r\n  // console.log(i, bigRadius, allRadii[i], allRadii);\r\n  // console.log(Math.);\r\n  if (i < 1) {\r\n    return 0;\r\n  } else {\r\n    console.log(\r\n      i,\r\n      allRadii[i],\r\n      allRadii[i - 1],\r\n      bigRadius,\r\n      (2 * bigRadius) / (allRadii[i] + allRadii[i - 1]),\r\n      Math.asin((2 * bigRadius) / (allRadii[i] + allRadii[i - 1])),\r\n      Math.asin(i),\r\n      i - 1\r\n    );\r\n  }\r\n  return (\r\n    findPlace(i - 1, bigRadius, allRadii) +\r\n    Math.asin((allRadii[i] * 2 + allRadii[i - 1] * 2) / (2 * bigRadius))\r\n  );\r\n}\r\n","import Konva from \"konva\";\r\nimport SampleData from \"@classes/SampleData\";\r\nimport { Group, Layer, Path, Rect, Stage, Text, Circle } from \"react-konva\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { groupBy, mapRange } from \"@utils\";\r\nimport React, { MutableRefObject, RefObject, useRef, useState } from \"react\";\r\nimport theme from \"@static/theme\";\r\n\r\nexport interface EnrichedSample\r\n  extends Omit<SampleData, \"setPath\" | \"calculateDimensions\"> {\r\n  onDragMove: (e: KonvaEventObject<DragEvent>) => void;\r\n  onDragStart: (e: KonvaEventObject<DragEvent>) => void;\r\n  onDragEnd: (e: KonvaEventObject<DragEvent>) => void;\r\n  onMouseEnter: (e: KonvaEventObject<MouseEvent>) => void;\r\n  onMouseDown: (e: KonvaEventObject<MouseEvent>) => void;\r\n  onMouseUp: (e: KonvaEventObject<MouseEvent>) => void;\r\n  draggable: boolean;\r\n  fill: string;\r\n}\r\n\r\n// packedSamples: computed((state)=>{\r\n//   return packedSamples.packed.map((sample) => {\r\n//     state.activeTags.every(t=>sample.tags.includes(t))\r\n//   })\r\n// }),\r\n\r\nconst SamplePath = React.memo(\r\n  ({\r\n    sample,\r\n    ref,\r\n    setRef,\r\n  }: // setSample,\r\n  {\r\n    sample: EnrichedSample;\r\n    ref?: MutableRefObject<Konva.Path>;\r\n    setRef?: (ref: RefObject<Konva.Path>) => void;\r\n  }): JSX.Element => {\r\n    const {\r\n      w,\r\n      h,\r\n      fill,\r\n      onMouseDown,\r\n      onDragStart,\r\n      onDragEnd,\r\n      onMouseEnter,\r\n      onDragMove,\r\n      onMouseUp,\r\n      draggable,\r\n      id,\r\n      svgPath,\r\n      fit,\r\n      // isHovered,\r\n    } = sample;\r\n    const [isHovered, setisHovered] = useState(false);\r\n    const [absolutePosition, setabsolutePosition] = useState({ x: 0, y: 0 });\r\n    const sampleRef = useRef<Konva.Path>(null);\r\n    const [isDragging, setIsDragging] = useState(false);\r\n\r\n    // const [sampleRef, setSampleRef] = useState<()\r\n    // useEffect(() => {\r\n    //   console.log(hoveredId);\r\n    // setisHovered(hoveredId === id);\r\n    // }, [hoveredId]);\r\n    const actualWidth = mapRange(sample.w, 0, 2.5, 0, 400);\r\n\r\n    const { x, y } = fit;\r\n    const startPoint = { x: x, y: y };\r\n    // const startPoint = { x: 0, y: 0 };\r\n    const endPoint = { x: x + w, y: y + h };\r\n    const gradient = getGradient(sample.tags);\r\n    // console.log(svgPath);\r\n    const renderGhost = () => {\r\n      if (isDragging) {\r\n        return (\r\n          <Path\r\n            //  ref={sampleRef}\r\n            width={w}\r\n            height={h}\r\n            id={`ghost_${id}`}\r\n            y={h / 2}\r\n            data={svgPath}\r\n            scaleX={isHovered ? 1.1 : 1}\r\n            scaleY={isHovered ? 1.1 : 1}\r\n            fillPriority={\"linear-gradient\"}\r\n            // fill={fill}\r\n            stroke={theme.secondary}\r\n            strokeWidth={2}\r\n            // onMouseUp={onMouseUp}\r\n          />\r\n        );\r\n      }\r\n    };\r\n    return (\r\n      <Group x={x} y={y} width={w} height={h}>\r\n        <Path\r\n          ref={sampleRef}\r\n          width={w}\r\n          height={h}\r\n          id={id}\r\n          // y={h / 2}\r\n          data={svgPath}\r\n          // scaleX={isHovered ? 1.1 : 1}\r\n          scaleX={0.2}\r\n          scaleY={0.6}\r\n          // scaleY={isHovered ? 1.1 : 1}\r\n          fillPriority={\"linear-gradient\"}\r\n          // fill={fill}\r\n          // fill={fill}\r\n          onMouseUp={onMouseUp}\r\n          onMouseDown={(e) => {\r\n            console.log(e.target.absolutePosition());\r\n            setabsolutePosition(e.target.absolutePosition());\r\n            onMouseDown(e);\r\n          }}\r\n          onDragStart={(e) => {\r\n            setIsDragging(true);\r\n            onDragStart;\r\n          }}\r\n          onDragEnd={(e) => {\r\n            setIsDragging(false);\r\n            e.target.x(0);\r\n            e.target.y(h / 2);\r\n            onDragEnd(e);\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            onMouseEnter(e);\r\n            setisHovered(true);\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            onMouseEnter(e);\r\n            setisHovered(false);\r\n          }}\r\n          // dragBoundFunc={(e) => {\r\n          //   // console.log(e);\r\n          //   // return { x: x, y: y };\r\n          //   // return null;\r\n          //   return absolutePosition;\r\n          //   // return { x: 0, y: 0 };\r\n          // }}\r\n          // shadowColor={\"black\"}\r\n          // shadowBlur={15}\r\n          // shadowOffsetX={0}\r\n          // shadowOffsetY={0}\r\n          // shadowOpacity={0.2}\r\n          fillLinearGradientStartPoint={{ x: 0, y: 0 }}\r\n          fillLinearGradientEndPoint={{ x: w, y: h }}\r\n          fillLinearGradientColorStops={gradient}\r\n          onDragMove={(e) => {\r\n            onDragMove(e);\r\n          }}\r\n          draggable={draggable}\r\n          stroke={isHovered ? \"white\" : \"black\"}\r\n          strokeWidth={isHovered ? 2 : 2}\r\n        />\r\n        <Rect\r\n          // fillLinearGradientStartPoint={{ x: w, y: h }}\r\n          // // fillLinearGradientStartPoint={startPoint}\r\n          // fillLinearGradientEndPoint={{ x: 0, y: 0 }}\r\n          // fillLinearGradientColorStops={[0, \"red\", 0.5, \"black\", 1, \"green\"]}\r\n          // stroke={isHovered ? \"white\" : \"red\"}\r\n          strokeWidth={2}\r\n          // width={actualWidth}\r\n          width={w}\r\n          height={h}\r\n          x={0}\r\n          y={0}\r\n        />\r\n        {renderGhost()}\r\n      </Group>\r\n    );\r\n  }\r\n);\r\nconst getGradient = (tags: string[]): (string | number)[] => {\r\n  let stop1 = \"blue\";\r\n  let stop2 = \"yellow\";\r\n\r\n  if (tags.includes(\"MR\")) {\r\n    stop1 = \"#3023AE\";\r\n    stop2 = \"#53A0FD\";\r\n    // console.log(\"HAD AN MR\");\r\n  }\r\n  if (tags.includes(\"LR\")) {\r\n    stop1 = \"#8c34eb\";\r\n    stop2 = \"#d034eb\";\r\n  }\r\n  if (tags.includes(\"LR\")) {\r\n    stop1 = \"#ebd510\";\r\n    stop2 = \"#eb8110\";\r\n  }\r\n  if (tags.includes(\"MIX\")) {\r\n    stop1 = \"#60eb10\";\r\n    stop2 = \"#2a10eb\";\r\n  }\r\n\r\n  return [0, stop1, 0.5, stop2, 1, stop1];\r\n};\r\nexport default SamplePath;\r\n","import SampleData from \"@classes/SampleData\";\r\nimport canvasConfig from \"@static/canvasConfig\";\r\nimport theme from \"@static/theme\";\r\nimport { Actions } from \"easy-peasy\";\r\nimport Konva from \"konva\";\r\nimport { Group } from \"konva/lib/Group\";\r\nimport { LayerConfig } from \"konva/lib/Layer\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { Shape } from \"konva/lib/Shape\";\r\nimport { PathConfig } from \"konva/lib/shapes/Path\";\r\nimport React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport { Layer } from \"react-konva\";\r\nimport { AppMode, CanvasModel } from \"../../Canvas\";\r\nimport SamplePath, { EnrichedSample } from \"../SamplePath\";\r\n\r\ninterface SampleLayerProperties\r\n  extends Pick<\r\n    Actions<CanvasModel>,\r\n    | \"setSampleToClone\"\r\n    | \"setIsDragging\"\r\n    | \"addToCurrentCollection\"\r\n    | \"setIsDragging\"\r\n    | \"setHoveredId\"\r\n    | \"setPlayingSample\"\r\n  > {\r\n  appMode: AppMode;\r\n  samples: SampleData[];\r\n  sampleToClone: Konva.Path | undefined;\r\n  //   sampleToClone: Shape<PathConfig> | undefined;\r\n  dragLayerRef: React.MutableRefObject<any>;\r\n  sampleTrayGroupRef: React.MutableRefObject<Group>;\r\n  stageY: number;\r\n}\r\n\r\nconst SampleLayer = ({\r\n  appMode,\r\n  samples,\r\n  sampleTrayGroupRef,\r\n  setSampleToClone,\r\n  addToCurrentCollection,\r\n  setIsDragging,\r\n  dragLayerRef,\r\n  sampleToClone,\r\n  setHoveredId,\r\n  setPlayingSample,\r\n  stageY,\r\n}: SampleLayerProperties): JSX.Element => {\r\n  useEffect(() => {\r\n    console.log(samples);\r\n  }, [samples]);\r\n\r\n  const sampleLayerRef = useRef(null);\r\n\r\n  const sampleLayerProps = {\r\n    x: canvasConfig.sampleContainerWidth + 20,\r\n    y: stageY,\r\n    ref: sampleLayerRef,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sampleLayerRef.current) {\r\n      if (appMode === \"editor\" || appMode === \"viewer\") {\r\n        sampleLayerRef.current.to({\r\n          opacity: 0,\r\n          duration: 0.1,\r\n        });\r\n      } else {\r\n        if (appMode === \"samples\") {\r\n          sampleLayerRef.current.to({\r\n            opacity: 1,\r\n            duration: 0.1,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [appMode]);\r\n\r\n  const onRectMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\r\n    console.log(\"DOING ON RECT MOUSE DOWN\");\r\n  };\r\n\r\n  const onRectMouseUp = (e: KonvaEventObject<MouseEvent>): void => {\r\n    console.log(samples.filter((s) => s.filename === e.target.attrs.id)[0]);\r\n    setPlayingSample(\r\n      samples.filter((s) => s.filename === e.target.attrs.id)[0]\r\n    );\r\n  };\r\n\r\n  const toEnriched = (samples: SampleData[]): EnrichedSample[] => {\r\n    return samples.map((sample) => {\r\n      const onMouseDown = onRectMouseDown;\r\n      const onDragStart = (e: KonvaEventObject<DragEvent>) => {\r\n        setSampleToClone(e.target as Konva.Path);\r\n        e.target.moveTo(dragLayerRef.current);\r\n        console.log(e.target);\r\n      };\r\n\r\n      const onDragEnd = (e: KonvaEventObject<DragEvent>) => {\r\n        console.log(\"GOT DRAG END AT CANVAS\");\r\n        setIsDragging(false);\r\n        // setIsDragging(false);\r\n        if (sampleTrayGroupRef.current) {\r\n          if (\r\n            intersect(\r\n              e.target.getClientRect(),\r\n              sampleTrayGroupRef.current.getClientRect()\r\n            )\r\n          ) {\r\n            addToCurrentCollection(sampleToClone.attrs.id);\r\n          }\r\n          if (sampleToClone && sampleTrayGroupRef.current) {\r\n            sampleTrayGroupRef.current.children[0].setAttr(\"fill\", \"red\");\r\n            sampleToClone.moveTo(sampleLayerRef.current);\r\n          }\r\n        }\r\n        sampleTrayGroupRef.current.children[0].setAttr(\r\n          \"fill\",\r\n          theme.transparent\r\n        );\r\n        addToCurrentCollection(e.target.attrs.id);\r\n      };\r\n\r\n      const onMouseEnter = (e: KonvaEventObject<MouseEvent>) =>\r\n        setHoveredId(e.target.attrs.id);\r\n      const onDragMove = (e: KonvaEventObject<DragEvent>) => {\r\n        if (sampleTrayGroupRef.current) {\r\n          if (\r\n            intersect(\r\n              e.target.getClientRect(),\r\n              sampleTrayGroupRef.current.getClientRect()\r\n            )\r\n          ) {\r\n            sampleTrayGroupRef.current.children[0].setAttr(\r\n              \"fill\",\r\n              theme.secondaryHover\r\n            );\r\n            console.log(\"INTERSECTED WITH TRAY\");\r\n          } else {\r\n            sampleTrayGroupRef.current.children[0].setAttr(\r\n              \"fill\",\r\n              theme.transparent\r\n            );\r\n            // setRectFill(theme.transparent);\r\n            console.log(\"NO INTERSECTION\");\r\n          }\r\n        }\r\n      };\r\n      const onMouseUp = onRectMouseUp;\r\n\r\n      const fill = theme.secondary;\r\n      // const fill = \"green\";\r\n      const draggable = true;\r\n\r\n      return {\r\n        ...sample,\r\n        fill,\r\n        draggable,\r\n        onDragMove,\r\n        onDragStart,\r\n        onDragEnd,\r\n        onMouseEnter,\r\n        onMouseDown,\r\n        onMouseUp,\r\n      };\r\n    });\r\n  };\r\n\r\n  const drawSamples = (): JSX.Element[] => {\r\n    if (enriched[0].fit) {\r\n      return enriched.map((sample) => {\r\n        return <SamplePath key={sample.id} sample={sample} />;\r\n      });\r\n    }\r\n  };\r\n  const enriched = useMemo(() => {\r\n    console.log(samples);\r\n    return toEnriched(samples);\r\n  }, [samples]);\r\n\r\n  return <Layer {...sampleLayerProps}>{drawSamples()}</Layer>;\r\n};\r\n\r\nexport default SampleLayer;\r\n\r\n// const SampleLayer = \"fff\";\r\n// export default SampleLayer;\r\n\r\nfunction intersect(r1: any, r2: any) {\r\n  return !(\r\n    r2.x > r1.x + r1.width ||\r\n    r2.x + r2.width < r1.x ||\r\n    r2.y > r1.y + r1.height ||\r\n    r2.y + r2.height < r1.y\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Circle, Group, Image, Layer, Rect } from \"react-konva\";\r\nimport Kosima from \"@classes/Kosima\";\r\nimport useImage from \"use-image\";\r\nimport theme from \"@static/theme\";\r\nimport { mapRange } from \"@utils\";\r\nimport { group } from \"console\";\r\nimport Konva from \"konva\";\r\nimport { ActionCreator, Actions } from \"easy-peasy\";\r\nimport { AppMode, CanvasModel } from \"../../Canvas\";\r\nimport canvasConfig from \"@static/canvasConfig\";\r\n\r\nconst WidgetsLayer = ({\r\n  widgetContainerRef,\r\n  appMode,\r\n}: {\r\n  appMode: AppMode;\r\n  widgetContainerRef: React.MutableRefObject<Konva.Group>;\r\n}): JSX.Element => {\r\n  const timeLineRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (widgetContainerRef.current) {\r\n      if (appMode === \"samples\" || appMode === \"viewer\") {\r\n        widgetContainerRef.current.to({\r\n          opacity: 0,\r\n          duration: 0.1,\r\n        });\r\n        timeLineRef.current.to({\r\n          opacity: 0,\r\n          duration: 0.1,\r\n        });\r\n      } else {\r\n        if (appMode === \"editor\") {\r\n          widgetContainerRef.current.to({\r\n            opacity: 1,\r\n            duration: 0.1,\r\n          });\r\n        }\r\n        if (appMode === \"editor\") {\r\n          timeLineRef.current.to({\r\n            opacity: 1,\r\n            duration: 0.1,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [appMode]);\r\n\r\n  const widgets = () => {\r\n    const widgCount = 4;\r\n    const arr = Array.from(Array(widgCount).keys());\r\n    const widgWidth = canvasConfig.widgetWidth;\r\n    const widgHeight = canvasConfig.widgetHeight;\r\n    const widgFill = theme.stroke;\r\n    // const widgFill = \"red\";\r\n    const groupX = (window.innerWidth - arr.length * widgWidth) / 2;\r\n    const groupY = (window.innerHeight - widgHeight) / 2;\r\n    const trackHeight = 80;\r\n    const trackGroupY = groupY - (50 + trackHeight);\r\n    const borderRectProps = {\r\n      fill: theme.secondary,\r\n      width: widgCount * widgWidth,\r\n      height: 2,\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Group x={groupX} y={trackGroupY} ref={timeLineRef}>\r\n          <Rect x={0} y={0} {...borderRectProps} />\r\n          <Rect x={0} y={trackHeight} {...borderRectProps} />\r\n        </Group>\r\n        <Group x={groupX} y={groupY} ref={widgetContainerRef}>\r\n          {arr.map((a, i) => {\r\n            const rectX = i * widgWidth;\r\n            return (\r\n              <Rect\r\n                key={i}\r\n                x={rectX}\r\n                fill={widgFill}\r\n                width={widgWidth}\r\n                height={widgHeight}\r\n                stroke={theme.secondary}\r\n                cornerRadius={theme.borderRadius}\r\n              ></Rect>\r\n            );\r\n          })}\r\n        </Group>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{widgets()}</>;\r\n};\r\n\r\nexport default WidgetsLayer;\r\n","import theme from \"@static/theme\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@css/DialogBox.scss\";\r\nimport classNames from \"classnames\";\r\nimport { useOnClickOutside } from \"@hooks\";\r\nimport { AppMode } from \"../Canvas\";\r\n\r\nconst Navigation = ({\r\n  appMode,\r\n  setAppMode,\r\n}: {\r\n  appMode: AppMode;\r\n  setAppMode: (mode: AppMode) => void;\r\n}): JSX.Element => {\r\n  const widthPercent = 25;\r\n  const leftPercent = 50 - widthPercent / 2;\r\n\r\n  const containerStyle = {\r\n    width: \"fit-content\",\r\n    height: \"1em\",\r\n    display: \"flex\",\r\n    // backgroundColor: theme.secondary,\r\n    // backgroundColor: theme.secondary,\r\n    borderRadius: theme.borderRadius,\r\n    position: \"absolute\",\r\n    // left: `${leftPercent}%`,\r\n    right: 0,\r\n    top: 0,\r\n    overflow: \"hidden\",\r\n    color: theme.textDark,\r\n    padding: \"1em\",\r\n    alignItems: \"center\",\r\n    margin: \"0.5em\",\r\n  } as React.CSSProperties;\r\n\r\n  return ReactDOM.createPortal(\r\n    <div style={containerStyle}>\r\n      {/* <div>nav1</div> */}\r\n      <NavItem setAppMode={setAppMode} appMode={appMode} />\r\n    </div>,\r\n    document.getElementById(\"navigation\") as HTMLDivElement\r\n  );\r\n};\r\n\r\nconst NavItem = ({\r\n  appMode,\r\n  setAppMode,\r\n}: {\r\n  appMode: AppMode;\r\n  setAppMode: (mode: AppMode) => void;\r\n}): JSX.Element => {\r\n  const navItemStyle = {\r\n    width: \"2em\",\r\n    height: \"2em\",\r\n    backgroundColor: theme.secondary,\r\n    borderRadius: \"50%\",\r\n  } as React.CSSProperties;\r\n  return (\r\n    <div\r\n      style={navItemStyle}\r\n      onClick={(e) => {\r\n        if (appMode !== \"viewer\") {\r\n          setAppMode(\"viewer\");\r\n        } else {\r\n          setAppMode(\"editor\");\r\n        }\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import appConfig from \"@static/appConfig\";\r\nimport CollectionContainer from \"./CanvasItems/CollectionContainer\";\r\nimport DialogBox from \"./DialogBox\";\r\nimport Konva from \"konva\";\r\nimport Kosima from \"@classes/Kosima\";\r\nimport KosimaRender from \"./CanvasItems/Layers/KosimaRender\";\r\nimport ReactPlayer from \"react-player\";\r\nimport SampleCollection from \"@classes/SampleCollection\";\r\nimport CollectionNav from \"./CanvasItems/CollectionNav\";\r\nimport SampleData from \"@classes/SampleData\";\r\nimport Tag from \"@classes/Tag\";\r\nimport tags from \"@static/tags\";\r\nimport theme from \"@static/theme\";\r\nimport { action, Action, computed, Computed, useLocalStore } from \"easy-peasy\";\r\nimport { Group, Layer, Rect, Stage } from \"react-konva\";\r\nimport { groupBy, mapRange } from \"@utils\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { packSamples } from \"./rects\";\r\n// import { useDraggable } from \"@dnd-kit/core\";\r\nimport { useStoreState } from \"@hooks\";\r\nimport React, {\r\n  MutableRefObject,\r\n  useRef,\r\n  useState,\r\n  useMemo,\r\n  useEffect,\r\n} from \"react\";\r\nimport TagsLayer from \"./CanvasItems/Layers/TagsLayer\";\r\nimport canvasConfig from \"@static/canvasConfig\";\r\nimport { useKeyboardShortcut } from \"crooks\";\r\nimport SampleLayer from \"./CanvasItems/Layers/SampleLayer\";\r\nimport WidgetsLayer from \"./CanvasItems/Layers/WidgetsLayer\";\r\nimport Navigation from \"./CanvasItems/Navigation\";\r\n\r\nexport type AppMode = \"editor\" | \"samples\" | \"viewer\";\r\n\r\nexport interface CanvasModel {\r\n  activeCollection: SampleCollection;\r\n  activeSamples: Computed<CanvasModel, SampleData[]>;\r\n  addTag: Action<CanvasModel, string>;\r\n  addToCurrentCollection: Action<CanvasModel, string>;\r\n  allTags: Tag[];\r\n  appMode: AppMode;\r\n  availableTags: Computed<CanvasModel, Tag[]>;\r\n  draggingId: string;\r\n  hoveredId: string;\r\n  isDragging: boolean;\r\n  kosima: Kosima;\r\n  packedSamples: SampleData[];\r\n  playingSample: SampleData | undefined;\r\n  popOverOpen: boolean;\r\n  removeTag: Action<CanvasModel, string>;\r\n  sampleCollections: SampleCollection[];\r\n  sampleToClone: Konva.Path | undefined;\r\n  // sampleToClone: Shape<PathConfig> | undefined;\r\n  selectedTags: string[];\r\n  setActiveCollection: Action<CanvasModel, string>;\r\n  setAppMode: Action<CanvasModel, AppMode>;\r\n  setDraggingId: Action<CanvasModel, string>;\r\n  setHoveredId: Action<CanvasModel, string>;\r\n  setIsDragging: Action<CanvasModel, boolean>;\r\n  setPlayingSample: Action<CanvasModel, SampleData>;\r\n  setPopOverOpen: Action<CanvasModel, boolean>;\r\n  setSampleToClone: Action<CanvasModel, Konva.Path>;\r\n  // setSampleToClone: Action<CanvasModel, Shape<PathConfig>>;\r\n  setStageHeight: Action<CanvasModel, number>;\r\n  setStageY: Action<CanvasModel, number>;\r\n  setViewHeight: Action<CanvasModel, number>;\r\n  stageHeight: number;\r\n  stageY: number;\r\n  viewHeight: number;\r\n}\r\n// type CanvasState = StateMapper<_Pick<CanvasModel, _FilterKeys<CanvasModel, ActionTypes, \"default\">>>\r\n\r\nconst Canvas = ({ activeTags }: { activeTags: string[] }): JSX.Element => {\r\n  const samples = useStoreState((state) => state.samplesModel.samples);\r\n  const stageContainerRef = useRef<HTMLDivElement>();\r\n\r\n  interface SampleFit {\r\n    packed: SampleData[] | undefined;\r\n    rows: number | undefined;\r\n  }\r\n  const sampleLayerWidth = window.innerWidth / 3;\r\n  const packedSamples: SampleFit = useMemo(() => {\r\n    let packedRects = samples;\r\n    if (activeTags.length > 0) {\r\n      packedRects = packedRects.filter((r) =>\r\n        activeTags.every((t) => r.tags.includes(t))\r\n      );\r\n      console.log(packedRects);\r\n    }\r\n    packedRects = packSamples(packedRects, sampleLayerWidth, 5000).filter(\r\n      (s) => s.fit\r\n    );\r\n    let rows = 0;\r\n    if (packedRects[0]?.fit) {\r\n      const fits = samples.map((s) => s.fit).filter((f) => f);\r\n      const rowMap = groupBy(fits, \"y\");\r\n      rows = rowMap.size;\r\n    }\r\n    return {\r\n      packed: packedRects as SampleData[],\r\n      rows: rows,\r\n    } as SampleFit;\r\n  }, [samples, activeTags]);\r\n\r\n  const allTags = useMemo(() => {\r\n    let allTags = packedSamples.packed.map((s) => s.tags);\r\n    let flatTags = allTags.reduce(function (prev, next) {\r\n      return prev.concat(next);\r\n    });\r\n    let map = new Map();\r\n\r\n    tags.map((tag) => {\r\n      if (!map.has(tag)) {\r\n        map.set(tag, getNumMatches(flatTags, tag));\r\n      }\r\n    });\r\n    const finalTags = tags.map((t) => {\r\n      // console.log(map.get(t));\r\n      return new Tag(t, map.get(t));\r\n    });\r\n    console.log(flatTags);\r\n    console.log(finalTags);\r\n    return finalTags;\r\n  }, [packedSamples]);\r\n  // const availableTags = tags.map()\r\n  const sampleCollections = Array.from(Array(10).keys()).map(\r\n    (n, i) => new SampleCollection([], `Sample_Collection_${i}`)\r\n  );\r\n\r\n  const defaultCollection1 = new SampleCollection(\r\n    samples.slice(1, 6),\r\n    \"collection 1\"\r\n  );\r\n  const defaultCollection2 = new SampleCollection(\r\n    samples.slice(13, 19),\r\n    \"collection 2\"\r\n  );\r\n  const defaultCollection3 = new SampleCollection([], \"collection 3\");\r\n  const defaultCollection4 = new SampleCollection([], \"collection 4\");\r\n  const defaultCollection5 = new SampleCollection([], \"collection 5\");\r\n\r\n  const [state, actions] = useLocalStore<CanvasModel>(\r\n    () => ({\r\n      allTags: allTags,\r\n      appMode: canvasConfig.startMode,\r\n      // defaultCollections: [defaultCollection1, defaultCollection2, defaultCollection3, defaultCollection4, defaultCollection5],\r\n      sampleCollections: [\r\n        defaultCollection1,\r\n        defaultCollection2,\r\n        defaultCollection3,\r\n        defaultCollection4,\r\n        defaultCollection5,\r\n      ],\r\n      // sampleCollections: sampleCollections,\r\n      activeCollection: sampleCollections[0],\r\n      addToCurrentCollection: action((state, toAddId) => {\r\n        console.log(`ADDING ${toAddId} TO CURRENT COLLECTION`);\r\n        const toAdd = state.activeSamples.filter((s) => s.id === toAddId)[0];\r\n        state.activeCollection.samples.push(\r\n          state.activeSamples.filter((s) => s.id === toAddId)[0]\r\n        );\r\n      }),\r\n      sampleToClone: undefined,\r\n      setSampleToClone: action((state, toClone) => {\r\n        state.sampleToClone = toClone;\r\n      }),\r\n      setActiveCollection: action((state, collectionName) => {\r\n        state.activeCollection = state.sampleCollections.filter(\r\n          (c) => c.name === collectionName\r\n        )[0];\r\n      }),\r\n      availableTags: computed(\r\n        [(state) => state.activeSamples],\r\n        (activeSamples) => {\r\n          let allTags = activeSamples.map((s) => s.tags);\r\n          let flatTags = allTags.reduce(function (prev, next) {\r\n            return prev.concat(next);\r\n          });\r\n          let map = new Map();\r\n\r\n          tags.map((tag) => {\r\n            if (!map.has(tag)) {\r\n              map.set(tag, getNumMatches(flatTags, tag));\r\n            }\r\n          });\r\n          const finalTags = tags.map((t) => {\r\n            return new Tag(t, map.get(t));\r\n          });\r\n          return finalTags;\r\n        }\r\n      ),\r\n      selectedTags: [],\r\n      addTag: action((state, tagToAdd) => {\r\n        state.selectedTags.push(tagToAdd);\r\n      }),\r\n      removeTag: action((state, tagToRemove) => {\r\n        state.selectedTags = state.selectedTags.filter(\r\n          (t) => t !== tagToRemove\r\n        );\r\n      }),\r\n      kosima: new Kosima(),\r\n      hoveredId: \"\",\r\n      playingSample: undefined,\r\n      isDragging: false,\r\n      draggingId: \"\",\r\n      packedSamples: packedSamples.packed,\r\n      popOverOpen: false,\r\n      setPopOverOpen: action((state, open) => {\r\n        state.popOverOpen = open;\r\n      }),\r\n      activeSamples: computed(\r\n        [(state) => state.packedSamples, (state) => state.selectedTags],\r\n        (packedSamples, activeTags) => {\r\n          const active = packedSamples.filter((sample) =>\r\n            activeTags.every((t) => sample.tags.includes(t))\r\n          );\r\n          return packSamples(active, sampleLayerWidth, 5000);\r\n        }\r\n      ),\r\n      stageY: 0,\r\n      viewHeight: stageContainerRef.current?.getBoundingClientRect().height,\r\n      stageHeight: packedSamples.rows * appConfig.sampleHeight,\r\n      setStageHeight: action((state, height) => {\r\n        state.stageHeight = height;\r\n      }),\r\n      setViewHeight: action((state, height) => {\r\n        state.viewHeight = height;\r\n      }),\r\n      setStageY: action((state, y) => {\r\n        // console.log(y);\r\n        console.log(`view height ${state.viewHeight}`);\r\n        console.log(state.stageY);\r\n        const max = 0 - (state.stageHeight - state.viewHeight);\r\n        if (y > 0) {\r\n          console.log(y);\r\n          if (state.stageY < 0) {\r\n            console.log(\"doing first\");\r\n            state.stageY = Math.min(state.stageY + y, 0);\r\n            console.log(state.stageY);\r\n          }\r\n        } else {\r\n          if (state.stageY > max) {\r\n            console.log(state.stageY);\r\n            state.stageY += y;\r\n          }\r\n        }\r\n        console.log(state.stageHeight);\r\n      }),\r\n      setAppMode: action((state, mode) => {\r\n        state.appMode = mode;\r\n      }),\r\n      setIsDragging: action((state, isDragging) => {\r\n        state.isDragging = isDragging;\r\n      }),\r\n      setDraggingId: action((state, draggingId) => {\r\n        state.draggingId = draggingId;\r\n      }),\r\n      setHoveredId: action((state, hoveredId) => {\r\n        state.hoveredId = hoveredId;\r\n      }),\r\n      setPlayingSample: action((state, playingId) => {\r\n        state.playingSample = playingId;\r\n      }),\r\n    }),\r\n    [packedSamples, samples],\r\n    () => ({ devTools: false })\r\n  );\r\n  // const test = state.sampleToClone\r\n  const stageProps = {\r\n    width: window.innerWidth,\r\n    height: state.viewHeight,\r\n    onWheel: (e: KonvaEventObject<WheelEvent>) => {\r\n      console.log(e);\r\n      e.evt.preventDefault();\r\n      actions.setStageY(e.evt.deltaY);\r\n    },\r\n  };\r\n\r\n  const test = {\r\n    one: \"yes\",\r\n    two: \"no\",\r\n  };\r\n  const [currentSample, setCurrentRect] = useState<Konva.Path | null>(null);\r\n\r\n  const stageNodeRef = useRef<Konva.Stage>(null);\r\n  useEffect(() => {\r\n    actions.setViewHeight(\r\n      stageContainerRef.current?.getBoundingClientRect().height\r\n    );\r\n    stageNodeRef.current.container().style.backgroundColor = theme.primary;\r\n  }, [currentSample]);\r\n\r\n  useKeyboardShortcut({\r\n    keyCode: 32, //f\r\n    action: () => {\r\n      if (state.appMode === \"editor\") {\r\n        actions.setAppMode(\"samples\");\r\n      } else {\r\n        actions.setAppMode(\"editor\");\r\n      }\r\n    },\r\n    disabled: false, // This key is not required\r\n  });\r\n\r\n  const draggingRef = useRef<Konva.Path>(null);\r\n  const sampleTrayGroupRef = useRef<Konva.Group>(null);\r\n  const dragLayerRef = useRef(null);\r\n  const widgetContainerRef = useRef(null);\r\n\r\n  const containerStyle = {\r\n    // border: \"1px solid red\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  } as React.CSSProperties;\r\n\r\n  const containerHeight = window.innerHeight - 100;\r\n  let sampleTrayGroupY = (window.innerHeight - containerHeight) / 2;\r\n\r\n  useEffect(() => {\r\n    console.log(state.appMode);\r\n    if (widgetContainerRef.current) {\r\n      if (widgetContainerRef.current && state.appMode === \"editor\") {\r\n        const targY = widgetContainerRef.current.y();\r\n        const targX = widgetContainerRef.current.x();\r\n        const targHeight = widgetContainerRef.current.height();\r\n        sampleTrayGroupRef.current.to({\r\n          x: targX,\r\n          y: targY,\r\n          opacity: 1,\r\n        });\r\n        sampleTrayGroupRef.current.children[0].to({\r\n          height: canvasConfig.widgetHeight,\r\n          width: canvasConfig.widgetWidth,\r\n        });\r\n      } else if (widgetContainerRef.current && state.appMode === \"viewer\") {\r\n        sampleTrayGroupRef.current.to({\r\n          opacity: 0,\r\n          duration: 0.1,\r\n        });\r\n      } else {\r\n        sampleTrayGroupY = (window.innerHeight - containerHeight) / 2;\r\n        sampleTrayGroupRef.current.to({\r\n          x: canvasConfig.sampleCollectionGroupX,\r\n          y: (window.innerHeight - containerHeight) / 2,\r\n          opacity: 1,\r\n        });\r\n        sampleTrayGroupRef.current.children[0].to({\r\n          height: canvasConfig.sampleCollectionRectHeight,\r\n          width: canvasConfig.widgetWidth,\r\n        });\r\n      }\r\n    }\r\n  }, [state.appMode]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={containerStyle}\r\n        ref={stageContainerRef}\r\n        className={\"outer-tray\"}\r\n      >\r\n        <DialogBox\r\n          open={state.popOverOpen}\r\n          setOpen={(val) => actions.setPopOverOpen(val)}\r\n        />\r\n        {state.playingSample ? (\r\n          <ReactPlayer\r\n            playing={true}\r\n            height={0}\r\n            width={0}\r\n            progressInterval={1}\r\n            onProgress={({ played, playedSeconds, loaded, loadedSeconds }) => {\r\n              currentSample?.fill(\"white\");\r\n              console.log(state.playingSample);\r\n            }}\r\n            url={state.playingSample?.src}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Navigation\r\n          setAppMode={(mode) => actions.setAppMode(mode)}\r\n          appMode={state.appMode}\r\n        />\r\n        <Stage {...stageProps} ref={stageNodeRef}>\r\n          <Layer\r\n            ref={dragLayerRef}\r\n            onDragStart={(e) => {\r\n              state.sampleToClone.moveTo(dragLayerRef.current);\r\n              // toClone.moveTo(dragLayerRef.current);\r\n            }}\r\n            onDragEnd={(e) => {\r\n              console.log(e.target);\r\n              console.log(sampleTrayGroupRef);\r\n              // console.log(toClone);\r\n            }}\r\n            onDragMove={(e) => {\r\n              if (state.sampleToClone && sampleTrayGroupRef.current) {\r\n                if (\r\n                  intersect(\r\n                    draggingRef.current.getClientRect(),\r\n                    sampleTrayGroupRef.current.getClientRect()\r\n                  )\r\n                ) {\r\n                  sampleTrayGroupRef.current.getChildren()[0].attrs.fill =\r\n                    theme.secondaryHover;\r\n                  console.log(\"INTERSECTED WITH TRAY\");\r\n                } else {\r\n                  sampleTrayGroupRef.current.getChildren()[0].attrs.fill =\r\n                    theme.primaryInactive;\r\n                  console.log(\"NO INTERSECTION\");\r\n                }\r\n              }\r\n            }}\r\n          ></Layer>\r\n          <Layer>\r\n            <WidgetsLayer\r\n              widgetContainerRef={widgetContainerRef}\r\n              appMode={state.appMode}\r\n            />\r\n            <CollectionNav\r\n              sampleCollections={state.sampleCollections}\r\n              onMouseUp={(e: KonvaEventObject<MouseEvent>) => {\r\n                actions.setActiveCollection(e.target.attrs.id);\r\n              }}\r\n              activeCollection={state.activeCollection.name}\r\n            />\r\n            <Group\r\n              ref={sampleTrayGroupRef}\r\n              height={containerHeight}\r\n              y={sampleTrayGroupY}\r\n              x={canvasConfig.sampleCollectionGroupX}\r\n            >\r\n              <CollectionContainer\r\n                sampleCollection={state.activeCollection}\r\n                appMode={state.appMode}\r\n              />\r\n            </Group>\r\n          </Layer>\r\n          <SampleLayer\r\n            appMode={state.appMode}\r\n            samples={state.activeSamples}\r\n            sampleTrayGroupRef={sampleTrayGroupRef}\r\n            setSampleToClone={actions.setSampleToClone}\r\n            addToCurrentCollection={actions.addToCurrentCollection}\r\n            setIsDragging={actions.setIsDragging}\r\n            dragLayerRef={dragLayerRef}\r\n            sampleToClone={state.sampleToClone as Konva.Path}\r\n            setHoveredId={actions.setHoveredId}\r\n            setPlayingSample={actions.setPlayingSample}\r\n            stageY={state.stageY}\r\n          />\r\n          <TagsLayer\r\n            appMode={state.appMode}\r\n            tags={state.availableTags}\r\n            selectedTags={state.selectedTags}\r\n            removeTag={actions.removeTag}\r\n            addTag={actions.addTag}\r\n          />\r\n          <KosimaRender\r\n            kosima={state.kosima}\r\n            setPopOverOpen={actions.setPopOverOpen}\r\n          />\r\n        </Stage>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n\r\nfunction getNumMatches(array: any[], valToFind: string): number {\r\n  let numMatches = 0;\r\n  for (let i = 0, j = array.length; i < j; i += 1) {\r\n    if (array[i] === valToFind) {\r\n      numMatches += 1;\r\n    }\r\n  }\r\n  return numMatches;\r\n}\r\n\r\nfunction intersect(r1: any, r2: any): boolean {\r\n  return !(\r\n    r2.x > r1.x + r1.width ||\r\n    r2.x + r2.width < r1.x ||\r\n    r2.y > r1.y + r1.height ||\r\n    r2.y + r2.height < r1.y\r\n  );\r\n}\r\n\r\n// const dIndex = (1 / tags.length) * i * 2 * Math.PI;\r\n// const radius = 300;\r\n// let xPos = window.innerWidth - radius - 100;\r\n// // let xPos = window.innerWidth / 2;\r\n// let yPos = window.innerHeight / 2;\r\n// const xSin = -0.5 + Math.sin(dIndex);\r\n// const yCos = -0.5 + Math.cos(dIndex);\r\n\r\n// xPos += xSin * radius;\r\n// yPos += yCos * radius;\r\n// xPos += radius / 2;\r\n// yPos += radius / 2;\r\n","import \"@css/SampleTray.scss\";\r\n\r\nimport {\r\n  Action,\r\n  Thunk,\r\n  ThunkOn,\r\n  action,\r\n  thunk,\r\n  thunkOn,\r\n  useLocalStore,\r\n} from \"easy-peasy\";\r\nimport React, { FC, useEffect, useRef, useState } from \"react\";\r\n\r\nimport CloseButton from \"./CloseButton/CloseButton\";\r\nimport Heading from \"@components/UI/Heading\";\r\nimport IconButton from \"@components/UI/IconButton\";\r\nimport OverlayScrollbars from \"overlayscrollbars\";\r\nimport { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\nimport { Pane } from \"evergreen-ui\";\r\nimport Section from \"../UI/Section\";\r\nimport TagBar from \"./TagBar/TagBar\";\r\nimport classNames from \"classnames\";\r\nimport Canvas from \"./NewSampleTray/Canvas\";\r\n\r\n// import {useToggle} from \"@withvoid/melting-pot\"\r\n\r\nexport interface SampleTrayModel {\r\n  tags: string[];\r\n  addTag: Action<SampleTrayModel, string>;\r\n  removeTag: Action<SampleTrayModel, string>;\r\n}\r\n\r\nconst SampleTray = ({ active }: { active: boolean }): JSX.Element => {\r\n  const [state, actions] = useLocalStore<SampleTrayModel>(() => ({\r\n    tags: [] as string[],\r\n    addTag: action((_state, tag) => {\r\n      _state.tags.push(tag);\r\n    }),\r\n    removeTag: action((_state, tag) => {\r\n      _state.tags = _state.tags.filter((t: string) => t !== tag);\r\n    }),\r\n  }));\r\n\r\n  // const osComponentRef1 = React.createRef<OverlayScrollbarsComponent>();\r\n\r\n  const sampleTrayClass = classNames(\"sample-tray-container\", {\r\n    \"sample-tray-hidden\": active,\r\n  });\r\n\r\n  const containerRef = useRef<HTMLDivElement | undefined>();\r\n  const [tagFilter, setTagFilter] = useState(\"none\");\r\n\r\n  useEffect(() => {\r\n    console.log(`setting tray filter to ${tagFilter}`);\r\n    // console.log(tagFilter);\r\n  }, [tagFilter]);\r\n\r\n  return (\r\n    <Section className={sampleTrayClass}>\r\n      <Section\r\n        column={true}\r\n        backgroundColor=\"white\"\r\n        className={\"sample-tray-inner-container\"}\r\n      >\r\n        <Canvas activeTags={state.tags} />\r\n      </Section>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default SampleTray;\r\n","import SampleTray from \"@components/SampleTray/SampleTray\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Instrument = (): JSX.Element => {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Editor isSampleTrayActive={isSampleTrayActive} /> */}\r\n      <SampleTray active={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Instrument;\r\n","import { Html, OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\r\nimport { useSpring } from \"framer-motion\";\r\nimport React, { forwardRef, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { Canvas, GroupProps, useFrame } from \"@react-three/fiber\";\r\nimport { Group, LineCurve3, TubeGeometry, Vector3 } from \"three\";\r\nconst lorem =\r\n  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam pulvinar lorem ipsum, at suscipit nibh finibus sed. Donec dignissim erat sed nunc consequat molestie. In arcu urna, eleifend vitae nisi vel, dignissim efficitur odio. Suspendisse hendrerit odio feugiat nulla suscipit posuere. Nulla scelerisque, urna in euismod dictum, mi elit fermentum nisi, et porttitor ipsum massa auctor tellus. Sed a sem vitae quam volutpat ultricies ac ac odio. Maecenas sit amet felis varius massa tempor porta. Quisque eu tristique massa.\";\r\n\r\nconst World = ({ trig }: { trig: number }): JSX.Element => {\r\n  const div1 = useRef<Group>();\r\n  const div2 = useRef<Group>();\r\n  const div3 = useRef<Group>();\r\n\r\n  const connectorRef1 = useRef<[Vector3, Vector3]>();\r\n  const connectorRef2 = useRef<[Vector3, Vector3]>();\r\n  const connectorRef3 = useRef<[Vector3, Vector3]>();\r\n\r\n  const l1: [Vector3, Vector3] = [\r\n    new Vector3(0, 0, 0),\r\n    new Vector3(10, 10, 10),\r\n  ];\r\n  const l2: [Vector3, Vector3] = [\r\n    new Vector3(0, 0, 0),\r\n    new Vector3(10, 10, 10),\r\n  ];\r\n  const l3: [Vector3, Vector3] = [\r\n    new Vector3(0, 0, 0),\r\n    new Vector3(10, 10, 10),\r\n  ];\r\n\r\n  useEffect(() => {\r\n    connectorRef1.current = l1;\r\n    connectorRef2.current = l2;\r\n    connectorRef3.current = l3;\r\n  }, []);\r\n\r\n  const [lines, setLines] = useState<[Vector3, Vector3][]>([\r\n    [new Vector3(0, 0, 0), new Vector3(10, 10, 10)],\r\n    [new Vector3(0, 0, 0), new Vector3(10, 10, 10)],\r\n    [new Vector3(0, 0, 0), new Vector3(10, 10, 10)],\r\n  ]);\r\n\r\n  const divItems = [div1, div2, div3];\r\n\r\n  const pos = useSpring(0, {\r\n    damping: 10,\r\n    stiffness: 10,\r\n    bounce: 0,\r\n    duration: 500,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const val = pos.get() + (2 * Math.PI) / 3;\r\n    pos.set(val);\r\n  }, [trig]);\r\n\r\n  const third = (2 * Math.PI) / 3;\r\n  const radius = 20;\r\n\r\n  //update the positions of the lines\r\n  useFrame((state) => {\r\n    const r = 20.5;\r\n    let val = 0;\r\n    val += pos.get();\r\n    const off = third / 2;\r\n    val += off;\r\n\r\n    const linescopy = [...lines];\r\n    divItems.forEach((item, i) => {\r\n      item.current.position.set(\r\n        0,\r\n        Math.cos(val + third * i) * r,\r\n        Math.sin(val + third * i) * r\r\n      );\r\n      const p1 = item.current.position;\r\n      linescopy[i][1].set(p1.x, p1.y, p1.z);\r\n    });\r\n    setLines(linescopy);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <group>\r\n        <gridHelper />\r\n        <Connector points={lines[0]} />\r\n        <Connector points={lines[1]} />\r\n        <Connector points={lines[2]} />\r\n        <DivBlock text={\"1\"} color=\"red\" ref={div1} />\r\n        <DivBlock text={\"2\"} color=\"green\" ref={div2} />\r\n        <DivBlock text={\"3\"} color=\"blue\" ref={div3} />\r\n        <Html transform>\r\n          <div\r\n            style={{ width: 1000, height: 200, backgroundColor: \"blue\" }}\r\n          ></div>\r\n        </Html>\r\n      </group>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface DivBlockProps extends GroupProps {\r\n  text: string;\r\n  color: string;\r\n}\r\nconst DivBlock = forwardRef<Group, DivBlockProps>(function DivBlock(\r\n  { color, text }: { color: string; text: string },\r\n  forwardRef\r\n) {\r\n  return (\r\n    <group ref={forwardRef}>\r\n      <Html transform position={[0, 0, 0]}>\r\n        <Text color={color}>{text}</Text>\r\n      </Html>\r\n    </group>\r\n  );\r\n});\r\n\r\nconst Text = ({\r\n  color,\r\n  children,\r\n}: {\r\n  color: string;\r\n  children: string;\r\n}): JSX.Element => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 500,\r\n        height: 500,\r\n        backgroundColor: color,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n        fontSize: 400,\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface LineProps {\r\n  points: [Vector3, Vector3];\r\n}\r\n\r\nconst Connector = forwardRef<TubeGeometry, LineProps>(function Connector(\r\n  { points },\r\n  forwardRef\r\n) {\r\n  const curve = new LineCurve3(points[0], points[1]);\r\n\r\n  return (\r\n    <mesh>\r\n      <tubeGeometry args={[curve, undefined, 0.1]} ref={forwardRef} />\r\n      <meshBasicMaterial color={\"red\"} />\r\n    </mesh>\r\n  );\r\n});\r\n\r\nconst CSS3DDemo = (): JSX.Element => {\r\n  const [trig, setTrig] = useState(0);\r\n\r\n  return (\r\n    <div\r\n      onClick={(e) => {\r\n        setTrig(trig + 1);\r\n      }}\r\n      style={{ width: \"100%\", height: 600 }}\r\n    >\r\n      <Canvas camera={{ position: [0, 10, 30], fov: 50 }}>\r\n        <PerspectiveCamera makeDefault position={[0, 10, 30]} />\r\n        <OrbitControls enableRotate={true} />\r\n        <spotLight position={[2, 1, 1]} intensity={10} penumbra={0.1} />\r\n        <World trig={trig} />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\nexport default CSS3DDemo;\r\n","import React, { useState, useEffect, useRef, Suspense } from \"react\";\r\nimport * as twgl from \"twgl.js\";\r\nimport glsl from \"babel-plugin-glsl/macro\";\r\nimport { useAsyncTask, useFetch } from \"@hooks\";\r\nimport data from \"@static/TRACKS_DATA.json\";\r\nimport BasicSdf from \"@components/Testing/BasicSdf\";\r\nimport audioFragShader from \"@components/Testing/audioFragShader\";\r\nimport SamplingTesting from \"./SamplingTesting/SamplingTesting\";\r\nimport CanvasGradient from \"../components/Testing/CanvasGradient\";\r\nimport BasicAudioSetup from \"./BasicAudioSetup\";\r\nimport SphereSDF from \"./SphereSDF\";\r\nimport CSS3DDemo from \"./Testing/CSS3DDemo\";\r\nimport TrackTesting from \"@components/Testing/TrackTesting\";\r\n\r\ninterface TrackData {\r\n  duration: number;\r\n  samplerate: number;\r\n  subsample: string;\r\n  data: number[];\r\n}\r\n\r\ninterface MyData {\r\n  [key: string]: TrackData;\r\n}\r\n\r\nconst Testing = (): JSX.Element => {\r\n  return (\r\n    <section>\r\n      <CSS3DDemo />\r\n      {/* <TrackTesting /> */}\r\n      {/* <SamplingTesting /> */}\r\n      {/* <BasicAudioSetup /> */}\r\n      {/* <SphereSDF /> */}\r\n      {/* <CanvasGradient /> */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Testing;\r\n\r\nconst vs = /*glsl*/ `\r\nattribute vec4 position;\r\nvoid main() {\r\n  gl_Position = position;\r\n}\r\n`;\r\n\r\nconst AATesting = (): JSX.Element => {\r\n  return <div>hello</div>;\r\n};\r\n","import { Layout } from \"react-grid-layout\";\r\n\r\nlet layoutBase = [\r\n  // { i: \"projectInfo\", x: 11, y: 0, w: 1, h: 1 },\r\n  { i: \"about\", x: 0, y: 5, w: 3, h: 6 },\r\n  { i: \"oneRecitalText\", x: 0, y: 0, w: 4, h: 1 },\r\n  { i: \"recitalTracks\", x: 0, y: 3, w: 5, h: 2 },\r\n  { i: \"threeRemixes\", x: 6, y: 0, w: 4, h: 1 },\r\n  { i: \"remixes\", x: 6, y: 3, w: 5, h: 2 },\r\n  // { i: \"title\", x: 0, y: 0, w: 9, h: 2 },\r\n  { i: \"trackInfo\", x: 3, y: 7, w: 5, h: 4 },\r\n  { i: \"waveform\", x: 3, y: 5, w: 5, h: 2 },\r\n  { i: \"violin\", x: 5, y: 2, w: 1, h: 3 },\r\n];\r\n\r\n// const layoutv2: Layout[] = [\r\n//   // { i: \"about\", x: 6, y: 5, w: 3, h: 6 },\r\n//   { i: \"oneRecitalText\", x: 0, y: 0, w: 6, h: 2, static: false },\r\n//   { i: \"recitalTracks\", x: 0, y: 3, w: 5, h: 4, static: true },\r\n//   { i: \"threeRemixes\", x: 0, y: 7, w: 6, h: 2, static: false },\r\n//   { i: \"remixes\", x: 0, y: 3, w: 6, h: 5, static: false },\r\n//   // { i: \"infoDisplay\", x: 6, y: 0, w: 6, h: 4, static: true },\r\n//   // \r\n\r\n//   // { i: \"trackInfo\", x: 6, y: 7, w: 5, h: 4 },\r\n//   // { i: \"waveform\", x: 6, y: 5, w: 5, h: 2 },\r\n//   // { i: \"violin\", x: 0, y: 2, w: 1, h: 6 },\r\n// ];\r\nconst layoutv2: Layout[] = [\r\n  // { i: \"about\", x: 6, y: 5, w: 3, h: 6 },\r\n  { i: \"oneRecitalText\", x: 0, y: 0, w: 6, h: 2, static: false },\r\n  { i: \"recitalTracks\", x: 0, y: 3, w: 5, h: 4, static: true },\r\n  { i: \"threeRemixes\", x: 6, y: 0, w: 6, h: 2, static: false },\r\n  { i: \"remixes\", x: 6, y: 3, w: 5, h: 5, static: false },\r\n  // { i: \"infoDisplay\", x: 6, y: 0, w: 6, h: 4, static: true },\r\n  // \r\n\r\n  // { i: \"trackInfo\", x: 6, y: 7, w: 5, h: 4 },\r\n  // { i: \"waveform\", x: 6, y: 5, w: 5, h: 2 },\r\n  // { i: \"violin\", x: 0, y: 2, w: 1, h: 6 },\r\n];\r\n\r\nconst modifyBase = (toReplace: Layout[]) => {\r\n  const copy = [...layoutv2];\r\n  const toReplaceIds = toReplace.map((t) => t.i);\r\n  const toReplaceIndexes = [];\r\n  const copyIds = copy.map((t) => t.i);\r\n  toReplaceIds.forEach((trid) => {\r\n    toReplaceIndexes.push(copyIds.indexOf(trid));\r\n  });\r\n  toReplaceIndexes.forEach((ind, i) => {\r\n    copy[ind] = toReplace[i];\r\n  });\r\n  return copy;\r\n};\r\n\r\nexport const layoutLg = modifyBase([\r\n  { i: \"recitalTracks\", x: 0, y: 2, w: 5, h: 4, static: true },\r\n  { i: \"remixes\", x: 6, y: 3, w: 6, h: 6, static: false },\r\n])\r\n\r\n\r\n\r\nlayoutBase = layoutv2;\r\n\r\n\r\nexport const remixLayout = modifyBase([]);\r\n\r\nexport const recitalLayout = modifyBase([\r\n  { i: \"waveform\", x: 6, y: 3, w: 4, h: 6 },\r\n  { i: \"violin\", x: 5, y: 2, w: 1, h: 3 },\r\n]);\r\n\r\nexport const defaultLayout = modifyBase([]);\r\n\r\n","import {\r\n  action,\r\n  Action,\r\n  computed,\r\n  Computed,\r\n  thunk,\r\n  Thunk,\r\n  thunkOn,\r\n  ThunkOn,\r\n} from \"easy-peasy\";\r\nimport History from \"@classes/History\";\r\nimport { Layout, Layouts } from \"react-grid-layout\";\r\nimport tracks from \"@static/tracks\";\r\nimport { Track } from \"@interfaces/Track\";\r\nimport { recitalLayout, remixLayout } from \"@static/gridLayouts\";\r\n\r\nexport type HomeLayout = \"about\" | \"remix\" | \"recital\" | \"projectInfo\";\r\nexport type SSAppMode = \"intro\" | \"view\" | \"create\" | \"projectInfo\";\r\nexport type InfoDisplayMode = \"notes\" | \"image\" | \"bio\" | undefined;\r\n\r\nexport interface HomeModel {\r\n  appMode: SSAppMode;\r\n  setAppMode: Action<HomeModel, SSAppMode>;\r\n  infoDisplayMode: InfoDisplayMode;\r\n  setInfoDisplayMode: Action<HomeModel, InfoDisplayMode>;\r\n  isPlaying: boolean;\r\n  setIsPlaying: Action<HomeModel, boolean>;\r\n  currentTrackId: string;\r\n  currentTrack: Computed<HomeModel, Track>;\r\n  currentAudioElement: Computed<HomeModel, HTMLAudioElement>;\r\n  setCurrentTrack: Action<HomeModel, string>;\r\n  currentLayout: Layout[];\r\n  // currentLayoutName: Computed<HomeModel, string>;\r\n  setCurrentLayout: Action<HomeModel, HomeLayout>;\r\n}\r\nconst homeModel: HomeModel = {\r\n  appMode: \"intro\",\r\n  setAppMode: action((state, mode) => {\r\n    state.appMode = mode;\r\n  }),\r\n  infoDisplayMode: undefined,\r\n  setInfoDisplayMode: action((state, mode) => {\r\n    state.infoDisplayMode = mode;\r\n  }),\r\n  isPlaying: false,\r\n  setCurrentTrack: action((state, payload) => {\r\n    console.log(\"SETTING CURRENT TRACK TO: \" + payload);\r\n    state.currentTrackId = payload;\r\n  }),\r\n  currentTrackId: tracks[0].title,\r\n  setIsPlaying: action((state, payload) => {\r\n    // console.log(\"SETTING CURRENT TRACK TO: \" + payload);\r\n    state.isPlaying = payload;\r\n  }),\r\n  currentTrack: computed(\r\n    (state) => tracks.filter((t) => t.title === state.currentTrackId)[0]\r\n  ),\r\n  currentAudioElement: computed((state) => {\r\n    const el = document.getElementById(\r\n      \"audio_\" + state.currentTrackId\r\n    ) as HTMLAudioElement;\r\n    // console.log(el);\r\n    return el;\r\n  }),\r\n  currentLayout: remixLayout,\r\n  setCurrentLayout: action((state, payload) => {\r\n    console.log(\"SETTING CURRENT TRACK TO: \" + payload);\r\n    let l: Layout[] = [];\r\n    if (payload === \"remix\") {\r\n      l = remixLayout;\r\n    } else if (payload === \"recital\") {\r\n      l = recitalLayout;\r\n    }\r\n    // state.currentLayout = payload;\r\n    state.currentLayout = l;\r\n  }),\r\n};\r\n\r\nexport default homeModel;\r\n","import homeModel from \"../model/homeModel\";\r\nimport { createStore, action } from \"easy-peasy\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst homeStore = createStore(homeModel, {\r\n  name: \"homeStore\",\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: [\r\n    // logger\r\n  ],\r\n  // initialState: { commentsModel: { comments }, postsModel: { posts } },\r\n});\r\n\r\n// if (process.env.NODE_ENV === \"development\") {\r\n//   if (module.hot) {\r\n//     module.hot.accept(\"../model/homeModel\", () => {\r\n//       homeStore.reconfigure(homeModel); // ðŸ‘ˆ Here is the magic\r\n//     });\r\n//   }\r\n// }\r\nexport default homeStore;\r\n","import React, { Component, useRef } from \"react\";\r\nimport { Shaders, Bus, Node, GLSL } from \"gl-react\";\r\nimport { Surface } from \"gl-react-dom\";\r\n\r\n// in gl-react you need to statically define \"shaders\":\r\nconst shaders = Shaders.create({\r\n  circle: {\r\n    frag: GLSL`\r\n    #version 300 es\r\n    precision highp float;\r\n    \r\n    in vec2 uv;\r\n    out vec4 fragColor;\r\n\r\n    precision highp float;\r\n    \r\n    const int MAX_MARCHING_STEPS = 255;\r\n    const float MIN_DIST = 0.0;\r\n    const float MAX_DIST = 100.0;\r\n    const float EPSILON = 0.0001;\r\n    uniform float u_time;\r\n    float sphereSDF(vec3 samplePoint) {\r\n        return length(samplePoint) - 1.0;\r\n    }\r\n    float sceneSDF(vec3 samplePoint) {\r\n        return sphereSDF(samplePoint);\r\n    }\r\n    \r\n    float shortestDistanceToSurface(vec3 eye, vec3 marchingDirection, float start, float end) {\r\n        float depth = start;\r\n        for (int i = 0; i < MAX_MARCHING_STEPS; i++) {\r\n            float dist = sceneSDF(eye + depth * marchingDirection);\r\n            if (dist < EPSILON) {\r\n                return depth;\r\n            }\r\n            depth += dist;\r\n            if (depth >= end) {\r\n                return end;\r\n            }\r\n        }\r\n        return end;\r\n    }\r\n    \r\n    vec3 rayDirection(float fieldOfView, vec2 size, vec2 fragCoord) {\r\n        vec2 xy = fragCoord - size / 2.0;\r\n        float z = size.y / tan(radians(fieldOfView) / 2.0);\r\n        return normalize(vec3(xy, -z));\r\n    }\r\n    \r\n    \r\n    void main()\r\n    {\r\n        vec2 res = vec2(300.);\r\n        vec3 dir = rayDirection(45.0, res, gl_FragCoord.xy);\r\n        vec3 eye = vec3(0.0, 0.0, 5.0);\r\n        float dist = shortestDistanceToSurface(eye, dir, MIN_DIST, MAX_DIST);\r\n        vec4 col = vec4(0.);\r\n        if (dist > MAX_DIST - EPSILON) {\r\n            // Didn't hit anything\r\n            col = vec4(0.0, 0.0, 0.0, 0.0);\r\n            return;\r\n        }\r\n        \r\n        col = vec4(1.0, 0.0, 0.0, 1.0);\r\n        fragColor = col;\r\n    }\r\n\r\n`,\r\n  },\r\n  FXAA: {\r\n    frag: GLSL`\r\n    #version 300 es\r\n    precision mediump float;\r\n      \r\n    in vec2 uv;\r\n    out vec4 fragColor;\r\n    //texture to apply FXAA to\r\n    uniform sampler2D inTexture;\r\n    \r\n    // https://github.com/mattdesl/glsl-fxaa/blob/master/fxaa.glsl\r\n    // #ifndef FXAA_REDUCE_MIN\r\n    // #define FXAA_REDUCE_MIN   (1.0/ 128.0)\r\n    // #endif\r\n    // #ifndef FXAA_REDUCE_MUL\r\n    // #define FXAA_REDUCE_MUL   (1.0 / 8.0)\r\n    // #endif\r\n    // #ifndef FXAA_SPAN_MAX\r\n    // #define FXAA_SPAN_MAX     1.0\r\n    // #endif\r\n    #ifndef FXAA_REDUCE_MIN\r\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\r\n    #endif\r\n    #ifndef FXAA_REDUCE_MUL\r\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\r\n    #endif\r\n    #ifndef FXAA_SPAN_MAX\r\n    #define FXAA_SPAN_MAX     8.0\r\n    #endif\r\n\r\n    vec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\r\n            vec2 v_rgbNW, vec2 v_rgbNE, \r\n            vec2 v_rgbSW, vec2 v_rgbSE, \r\n            vec2 v_rgbM) {\r\n            vec4 color;\r\n            mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\r\n            vec3 rgbNW = texture(tex, v_rgbNW).xyz;\r\n            vec3 rgbNE = texture(tex, v_rgbNE).xyz;\r\n            vec3 rgbSW = texture(tex, v_rgbSW).xyz;\r\n            vec3 rgbSE = texture(tex, v_rgbSE).xyz;\r\n            vec4 texColor = texture(tex, v_rgbM);\r\n            vec3 rgbM  = texColor.xyz;\r\n            vec3 luma = vec3(0.299, 0.587, 0.114);\r\n            float lumaNW = dot(rgbNW, luma);\r\n            float lumaNE = dot(rgbNE, luma);\r\n            float lumaSW = dot(rgbSW, luma);\r\n            float lumaSE = dot(rgbSE, luma);\r\n            float lumaM  = dot(rgbM,  luma);\r\n            float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\r\n            float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\r\n\r\n            mediump vec2 dir;\r\n            dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\r\n            dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\r\n\r\n            float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\r\n                                (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\r\n\r\n            float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\r\n            dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\r\n                    max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\r\n                    dir * rcpDirMin)) * inverseVP;\r\n\r\n            vec3 rgbA = 0.5 * (\r\n                texture(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\r\n                texture(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\r\n            vec3 rgbB = rgbA * 0.5 + 0.25 * (\r\n                texture(tex, fragCoord * inverseVP + dir * -0.5).xyz +\r\n                texture(tex, fragCoord * inverseVP + dir * 0.5).xyz);\r\n\r\n            float lumaB = dot(rgbB, luma);\r\n            if ((lumaB < lumaMin) || (lumaB > lumaMax))\r\n                color = vec4(rgbA, texColor.a);\r\n            else\r\n                color = vec4(rgbB, texColor.a);\r\n            return color;\r\n    }\r\n    void texcoords(vec2 fragCoord, vec2 resolution,\r\n        out vec2 v_rgbNW, out vec2 v_rgbNE,\r\n        out vec2 v_rgbSW, out vec2 v_rgbSE,\r\n        out vec2 v_rgbM) {\r\n            vec2 inverseVP = 1.0 / resolution.xy;\r\n            v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\r\n            v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\r\n            v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\r\n            v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\r\n            v_rgbM = vec2(fragCoord * inverseVP);\r\n    }\r\n    // https://github.com/mattdesl/glsl-fxaa/blob/master/index.glsl\r\n    vec4 apply(sampler2D tex, vec2 fragCoord, vec2 resolution) {\r\n        mediump vec2 v_rgbNW;\r\n        mediump vec2 v_rgbNE;\r\n        mediump vec2 v_rgbSW;\r\n        mediump vec2 v_rgbSE;\r\n        mediump vec2 v_rgbM;\r\n    \r\n        //compute the texture coords\r\n        texcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\r\n        \r\n        //compute FXAA\r\n        return fxaa(tex, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\r\n    }\r\n    // https://github.com/mattdesl/glsl-fxaa/blob/master/texcoords.glsl\r\n\r\n    void main(){\r\n        vec3 col = vec3(.0);\r\n        vec4 antiAliased = apply(inTexture, gl_FragCoord.xy, vec2(300.));\r\n        vec4 noAA = texture(inTexture, uv);\r\n        if (uv.x< .5){\r\n            col = noAA.rgb;\r\n        } else {\r\n            col = antiAliased.rgb;\r\n        }\r\n        if (uv.x < 0.5 && uv.x> 0.49) col = vec3(1.);\r\n        fragColor = vec4(col, 1.0);\r\n    }\r\n    `,\r\n  },\r\n});\r\n\r\nconst FXAADemo = (): JSX.Element => {\r\n  const circleRef = useRef<Node>();\r\n  return (\r\n    <Surface width={300} height={300} style={{ border: \"1px solid white\" }}>\r\n      <Bus ref={circleRef}>\r\n        <Node\r\n          shader={shaders.circle}\r\n          uniforms={{ text: \"http://i.imgur.com/tCatS2c.jp\" }}\r\n        />\r\n      </Bus>\r\n      <PostFXAA u_resolution={[300, 300]}>{() => circleRef.current}</PostFXAA>\r\n    </Surface>\r\n  );\r\n};\r\n\r\nexport default FXAADemo;\r\n\r\nclass PostFXAA extends Component {\r\n  props: {\r\n    children?: any;\r\n    u_resolution: [number, number];\r\n  };\r\n  render() {\r\n    const { u_resolution, children } = this.props;\r\n    return (\r\n      <Node\r\n        shader={shaders.FXAA}\r\n        uniforms={{\r\n          inTexture: children,\r\n          u_resolution: u_resolution,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import FXAADemo from \"@components/Misc/FXAADemo\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst FXAADemoPage = (): JSX.Element => {\r\n  return (\r\n    <section\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h1>\r\n        <a href=\"https://github.com/mattdesl/glsl-fxaa\">FXAA for WebGL </a>\r\n        in gl-react\r\n      </h1>\r\n      <span\r\n        style={{\r\n          width: 300,\r\n          display: \"flex\",\r\n          // flexDirection: \"column\",\r\n          justifyContent: \"space-around\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <i>FXAA Off</i>\r\n        <i>FXAA On</i>\r\n      </span>\r\n      <FXAADemo />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FXAADemoPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport theme from \"@static/theme\";\r\n\r\nconst ViewCard = ({\r\n  children,\r\n  border,\r\n  overflowHidden,\r\n  radius,\r\n}: {\r\n  children: JSX.Element | JSX.Element[];\r\n  border: boolean;\r\n  overflowHidden: boolean;\r\n  radius: number | undefined;\r\n}): JSX.Element => {\r\n  const noBorderArray = [\"arrow\"];\r\n\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    border: border ? \"2px solid black\" : \"\",\r\n    // backgroundColor: theme.primary,\r\n    overflow: overflowHidden ? \"hidden\" : \"visible\",\r\n    borderRadius: theme.borderRadius,\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <div id=\"view-card\" className={\"view-card\"} style={containerStyle}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewCard;\r\n","import { motion } from 'framer-motion';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport GridLayout, { Layout } from \"react-grid-layout\";\nimport ViewCard from \"@components/Home/Grid/GridLayoutTools/ViewCard\"\n\n// const samples = \n\nconst layout = [\n\n]\n\n\n\n\nconst DAWGridLayout = ({ children, layout }: { children: JSX.Element[], layout: Layout[] }): JSX.Element => {\n    const wrappedWidgets = useMemo(\n        () =>\n            layout.map((c, i) => {\n                const id = c.i;\n                return (\n                    <div key={id} id={id}>\n                        <motion.div\n                            id={id}\n                        //   style={cardContainerStyle}\n                        >\n                            <ViewCard\n                                border={true}\n                                overflowHidden={true}\n                                radius={undefined}\n                            >\n                                {children[i]}\n                            </ViewCard>\n                        </motion.div>\n                    </div>\n                );\n            }),\n        [layout]\n    );\n\n    return (\n        <GridLayout className=\"layout\" cols={12} rowHeight={30} width={1200}>\n            {wrappedWidgets}\n        </GridLayout>\n    );\n}\nexport default DAWGridLayout\n\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { Layout } from 'react-grid-layout';\nimport DAWGridLayout from './DAWGridLayout';\n\n\nconst defaultLayout: Layout[] = [\n    { i: \"a\", x: 0, y: 0, w: 1, h: 1, static: false },\n    { i: \"b\", x: 1, y: 3, w: 1, h: 1, static: false },\n    { i: \"c\", x: 2, y: 3, w: 1, h: 1, static: false },\n];\n\nconst DAWApp = ({ }: {}): JSX.Element => {\n\n\n    return (\n        <section style={{\n            width: \"100vw\",\n            height: \"100vh\", backgroundColor: \"red\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        }}>\n            <div\n                style={{\n                    width: \"80vw\",\n                    height: \"80vh\",\n                    padding: \"2em\",\n                    border: \"1px solid blue\"\n                }}\n            >\n                <DAWGridLayout layout={[...defaultLayout]}>\n                    <Block key={\"a\"} />\n                    <Block key={\"b\"} />\n                    <Block key={\"c\"} />\n                </DAWGridLayout>\n            </div>\n        </section>\n    );\n}\n\nconst Block = ({ }: {}): JSX.Element => {\n\n    const dbgStyle = {\n        backgroundColor: \"red\",\n    }\n    return (\n        <div style={{\n            backgroundColor: \"blue\", width: \"100%\",\n            height: \"100%\"\n        }}>\n\n        </div>\n    )\n}\n\nexport default DAWApp","import DAWApp from '@components/DAW/DAWApp';\nimport React, { useState, useEffect, useMemo } from 'react';\n\nconst DAWPage = ({ }: {}): JSX.Element => {\n    return (\n        <div>\n            <DAWApp />\n        </div>\n    );\n}\nexport default DAWPage","import React, { Suspense, useEffect, useRef } from \"react\";\r\nimport { Canvas, useThree, useFrame, useLoader } from \"@react-three/fiber\";\r\n// import { useGLTF } from \"drei\";\r\nimport {\r\n  CubeTextureLoader,\r\n  CubeCamera,\r\n  WebGLCubeRenderTarget,\r\n  RGBFormat,\r\n  LinearMipmapLinearFilter,\r\n  Mesh,\r\n  Material,\r\n  Group,\r\n  Color,\r\n  TextureLoader,\r\n} from \"three\";\r\nimport {\r\n  OrbitControls,\r\n  OrthographicCamera,\r\n  useGLTF,\r\n  useProgress,\r\n} from \"@react-three/drei\";\r\nimport { GLTF as GLTFThree } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { Track } from \"@interfaces/Track\";\r\nimport { useSpring } from \"framer-motion\";\r\ndeclare module \"three-stdlib\" {\r\n  export interface GLTF extends GLTFThree {\r\n    nodes: Record<string, Mesh>;\r\n    materials: Record<string, Material>;\r\n  }\r\n}\r\n\r\nconst Violin = ({ track }: { track: Track }) => {\r\n  const { nodes } = useGLTF(\r\n    `${process.env.PUBLIC_URL}/Models/realistic-violin.glb`\r\n  );\r\n  const matcapTexture = useLoader(\r\n    TextureLoader,\r\n    // `${process.env.PUBLIC_URL}/Textures/pinkMatcap.png`\r\n    // `${process.env.PUBLIC_URL}/Textures/mats/Warmth5.png`\r\n    // `${process.env.PUBLIC_URL}/Textures/mats/Warmth5.png`\r\n    // `${process.env.PUBLIC_URL}/Textures/mats/BluePearl3.png`\r\n    `${process.env.PUBLIC_URL}/Textures/mats/Warmth5.png`\r\n    // `${process.env.PUBLIC_URL}/Textures/mats/BluePearl.png`\r\n    // `${process.env.PUBLIC_URL}/Textures/matcapred.jpg`\r\n  );\r\n\r\n  const group = useRef<Group>();\r\n  const target = nodes.V as unknown as Group;\r\n  const children = target.children as Mesh[];\r\n\r\n  const xPos = useSpring(0, { damping: 10, stiffness: 10 });\r\n\r\n  useEffect(() => {\r\n    if (group.current) {\r\n      if (track.category === \"remix\") {\r\n        xPos.set(0);\r\n      } else {\r\n        xPos.set(0);\r\n      }\r\n    }\r\n  }, [track.category]);\r\n\r\n  xPos.onChange((last) => {\r\n    group.current.position.x = last;\r\n  });\r\n\r\n  // useTrackCategory(\r\n  //   () => {\r\n  //     if (group.current) {\r\n  //       // group.current.position.x = 0;\r\n  //     }\r\n  //   },\r\n  //   () => {\r\n  //     if (group.current) {\r\n  //       group.current.position.x = 100;\r\n  //     }\r\n  //   }\r\n  // );\r\n\r\n  useFrame(() => {\r\n    group.current.rotation.y += 0.01;\r\n  });\r\n\r\n  return (\r\n    <group ref={group}>\r\n      {children.map((c, i) => {\r\n        return (\r\n          <mesh key={i} geometry={c.geometry} material={c.material}>\r\n            <meshMatcapMaterial\r\n              attach=\"material\"\r\n              opacity={.6}\r\n              // color=\"yellow\"\r\n              matcap={matcapTexture}\r\n            />\r\n          </mesh>\r\n        );\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n\r\n// Loads the skybox texture and applies it to the scene.\r\n\r\n// Lights\r\nconst ViolinWidget = ({ track }: { track: Track }): JSX.Element => {\r\n  return (\r\n    <Suspense fallback={<div></div>}>\r\n      <Canvas className=\"canvas\">\r\n        <OrthographicCamera makeDefault zoom={20.1} position={[0, 0, 20]} />\r\n        <OrbitControls />\r\n        {/* <Sphere /> */}\r\n        <Violin track={track} />\r\n        {/* <SkyBox /> */}\r\n      </Canvas>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default React.memo(ViolinWidget);\r\n\r\nfunction Loader() {\r\n  const { active, progress, errors, item, loaded, total } = useProgress();\r\n  return <section>{progress} % loaded</section>;\r\n}\r\n","export enum DropCategory {\r\n  SampleTraySample,\r\n  EDITOR,\r\n  PLACEHOLDER,\r\n  IFRAME,\r\n}\r\n\r\nexport enum DragSource {\r\n  SAMPLE_TRAY,\r\n}\r\n\r\nexport enum InteractionType {\r\n  ACTIVE = \"ACTIVE\",\r\n  STATIC = \"STATIC\",\r\n}\r\nexport enum AppMode {\r\n  DISPLAY = \"DISPLAY\",\r\n  EDIT = \"EDIT\",\r\n  CYCLE = \"CYCLE\",\r\n}\r\n\r\nexport enum Composition {\r\n  BACH_MOVEMENT_1 = \"BACH_MOVEMENT_1\",\r\n  BACH_MOVEMENT_2 = \"BACH_MOVEMENT_2\",\r\n  BACH_MOVEMENT_3 = \"BACH_MOVEMENT_3A\",\r\n  BACH_MOVEMENT_4 = \"BACH_MOVEMENT_4\",\r\n  BARTOK_MOVEMENT_1 = \"BARTOK_MOVEMENT_1\",\r\n  BARTOK_MOVEMENT_2 = \"BARTOK_MOVEMENT_2\",\r\n  YSAE_MOVEMENT_1 = \"YSAE_MOVEMENT_1\",\r\n}\r\n\r\nexport type HomeMode = \"player\" | \"notes\" | \"about\";\r\n","enum IFrameLoadError {\r\n  CROSS_ORIGIN = \"CROSS_ORIGIN\",\r\n}\r\n\r\nenum IFrameLoadWarning {\r\n  MALFORMED_URL = \"MALFORMED_URL\",\r\n}\r\n\r\nclass IFrameValidator {\r\n  url!: string;\r\n  errors!: IFrameLoadError[];\r\n  warnings!: IFrameLoadWarning[];\r\n  constructor(url: string) {\r\n    this.errors = [];\r\n    this.warnings = [];\r\n    this.url = url;\r\n  }\r\n  validate(event: React.SyntheticEvent<HTMLIFrameElement, Event>): void {\r\n    const xoCheckArray = checkForXO(event);\r\n    console.log(xoCheckArray);\r\n    this.errors.push(...xoCheckArray);\r\n    console.log(this.errors);\r\n    const malformedUrlCheckArray = validURL(this.url);\r\n    this.warnings.push(...malformedUrlCheckArray);\r\n    console.log(malformedUrlCheckArray);\r\n  }\r\n  isValid(): boolean {\r\n    return this.errors.length == 0;\r\n  }\r\n  errorMessages(): string[] {\r\n    let errors: string[] = [];\r\n    this.errors.map((e) => {\r\n      switch (e) {\r\n        case IFrameLoadError.CROSS_ORIGIN:\r\n          errors.push(\r\n            `Blocked a frame with origin ${this.url}; from accessing a cross-origin frame.`\r\n          );\r\n          break;\r\n        default:\r\n          console.log(\"error did not match an error enum\");\r\n      }\r\n    });\r\n    return errors;\r\n  }\r\n}\r\n\r\nexport default IFrameValidator;\r\n\r\nfunction checkForXO(\r\n  event: React.SyntheticEvent<HTMLIFrameElement, Event>\r\n): IFrameLoadError[] {\r\n  let errorsArray: IFrameLoadError[] = [];\r\n  const test = event.target as HTMLIFrameElement;\r\n//   console.log(test.contentDocument);\r\n//   console.log(test.contentWindow);\r\n  try { \r\n      \r\n    test.contentWindow?.name;\r\n  } catch (e) {\r\n    if (e.message.includes(\"cross-origin\")) {\r\n      console.log(e.message);\r\n      errorsArray.push(IFrameLoadError.CROSS_ORIGIN);\r\n    } else return [];\r\n  }\r\n  return errorsArray;\r\n}\r\n\r\nfunction validURL(str: string): IFrameLoadWarning[] {\r\n  let warningsArray = [];\r\n  const pattern = new RegExp(\r\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\r\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\r\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\r\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n    \"i\"\r\n  ); // fragment locator\r\n  if (!pattern.test(str)) {\r\n    warningsArray.push(IFrameLoadWarning.MALFORMED_URL);\r\n  }\r\n  return warningsArray;\r\n}\r\n","import ViolinWidget from '@components/Home/Grid/GridWidgets/ViolinWidget';\nimport theme from '@static/theme';\nimport tracks from '@static/tracks';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport Countdown from \"react-countdown\";\nimport { borderRadius } from 'ui-box';\n\n\nimport \"@css/Body.scss\";\nconst TempSiteApp = ({ }: {}): JSX.Element => {\n    return (\n        <div\n            className=\"dot-fill\"\n            style={{\n                height: \"100vh\",\n                width: \"100vw\",\n\n                // backgroundColor: \"red\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n            }}>\n\n            <div style={{\n                // backgroundColor: \"blue\",\n                height: \"60%\",\n                width: \"50%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                position: \"relative\",\n                border: `1px solid ${theme.secondary}`,\n                borderRadius: theme.borderRadius,\n\n            }}>\n                <TopBar />\n                <div style={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    // backgroundColor: \"yellow\",\n                    height: \"60%\",\n                    width: \"50%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    zIndex: 1,\n                    fontSize: \"8vw\",\n                    textAlign: \"center\",\n                    color: \"black\",\n                }}>\n                    <Countdown date={new Date(\"1/31/2022\")} />\n                </div>\n                <div style={{\n                    // backgroundColor: \"green\",\n                    height: \"100%\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}>\n                    <ViolinWidget track={tracks[0]} />\n                </div>\n            </div>\n\n\n\n        </div>\n    );\n}\nexport default TempSiteApp\n\nconst TopBar = (): JSX.Element => {\n    const buttons = Array.from(Array(3).keys());\n\n    return (\n        <div\n            style={{\n                position: \"absolute\",\n                // top: 0,\n                // left: 0,\n                padding: \".5rem\",\n                height: \"fit-content\",\n                width: \"fit-content\",\n                // fontWeight: \"bold\",\n                textAlign: \"center\",\n                paddingLeft: \"1em\",\n                margin: \"auto\",\n                display: \"flex\",\n                alignItems: \"center\",\n                // width: \"100%\",\n                transform: \"translate(-50%, -50%)\",\n                borderRadius: 20,\n                left: \"50%\",\n                top: \"-10%\",\n                // textAlign: \"left\",\n                border: `1px solid ${theme.secondary}`,\n                // borderRadius: 10,\n                fontFamily: theme.titleFontFamily,\n                color: \"black\",\n                backgroundColor: theme.secondary,\n                // fontSize: 100,\n                fontSize: \"1rem\",\n                zIndex: 100,\n                // backgroundColor: theme.secondary,\n            }}\n        >\n            {/* <Logo />  */}\n\n            Seisolo.io: Remixing the Recital\n        </div>\n    );\n};\n\n\n","import \"@css/App.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useStoreActions, useToggle } from \"@hooks\";\nimport { useKeyboardShortcut } from \"crooks\";\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport Instrument from \"./pages/Instrument\";\nimport Home from \"./pages/Home\";\nimport Testing from \"./pages/Testing\";\nimport { StoreProvider } from \"easy-peasy\";\nimport homeStore from \"./stores/homeStore\";\nimport FXAADemoPage from \"./pages/FXAADemoPage\";\nimport DAWPage from \"./pages/DAWPage\";\nimport TempSiteApp from \"./pages/TempSite/TempSiteApp\";\n\nconst App = (): JSX.Element => {\n  const fetchCardDataGoogleSheetThunk = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchAppGoogleSheet\n  );\n  const processCompositions = useStoreActions(\n    (actions) => actions.compositionsModel.processCompositions\n  );\n  const fetchCompositionSheet = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchCompositionsSheet\n  );\n  const fetchSamples = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchSamplesSheet\n  );\n  const [isSampleTrayActive, toggleSampleTrayIsActive] = useToggle(false);\n\n  useKeyboardShortcut({\n    keyCode: 70, //f\n    action: () => {\n      toggleSampleTrayIsActive();\n    },\n    disabled: false, // This key is not required\n  });\n\n  useEffect(() => {\n    fetchCardDataGoogleSheetThunk();\n    processCompositions();\n    fetchCompositionSheet();\n    fetchSamples();\n  }, [fetchCardDataGoogleSheetThunk]);\n\n  return (\n    <Router>\n      <Route path=\"/app\" component={Instrument} />\n      {/* <Route path=\"/daw\" component={DAWApp}/> */}\n      <StoreProvider store={homeStore}>\n        <Route path=\"/\" exact component={TempSiteApp} />\n        {/* <Route path=\"/\" exact component={Home} /> */}\n      </StoreProvider>\n      <Route path=\"/testing\" component={Testing} />\n      <Route path=\"/fxaa\" component={FXAADemoPage} />\n      <Route path=\"/daw\" component={DAWPage} />\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import type RawCardRow from \"@interfaces/RawCardRow\";\r\nimport { InteractionType } from \"@enums\";\r\nimport IFrameValidator from \"../IFrameValidator\";\r\n\r\nexport default class CardData {\r\n  src: string;\r\n  title: string;\r\n  added?: Date;\r\n  sourceId: string;\r\n  author: string;\r\n  interaction: InteractionType;\r\n  validator!: IFrameValidator;\r\n  isActive!: boolean;\r\n  failed!: boolean;\r\n\r\n  constructor(row: RawCardRow) {\r\n    this.src = row.src;\r\n    this.title = row.title;\r\n    this.added = new Date(row.added);\r\n    this.sourceId = row.src;\r\n    this.author = row.author;\r\n    this.interaction =\r\n      InteractionType[row.interaction as keyof typeof InteractionType];\r\n    this.isActive = false;\r\n    this.validator = new IFrameValidator(this.src);\r\n    this.failed = false;\r\n    // this.error = undefined;\r\n  }\r\n  setActive(b: boolean): void {\r\n    this.isActive = b;\r\n  }\r\n  fail() {\r\n    this.failed = true;\r\n  }\r\n}\r\n","import { Layout, Layouts } from \"react-grid-layout\";\r\n// const availableHandles: ResizeHandle[] = [\r\n//   \"s\",\r\n//   \"w\",\r\n//   \"e\",\r\n//   \"n\",\r\n//   \"sw\",\r\n//   \"nw\",\r\n//   \"se\",\r\n//   \"ne\",\r\n// ];\r\nconst defaultGridLayoutArray: Layout[] = [\r\n  {\r\n    i: \"https://seisolo.io\",\r\n    x: 0,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n  {\r\n    i: \"https://seisolo2.io\",\r\n    x: 1,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n  {\r\n    i: \"https://seisolo3.io\",\r\n    x: 2,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n  {\r\n    i: \"https://seisolo4.io\",\r\n    x: 3,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n];\r\n\r\n// const defaultGridLayoutArr: Layout[] = [\r\n//   { i: \"clock\", x: 0, y: 0, w: 2, h: 1, static: true },\r\n//   {\r\n//     i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_1\",\r\n//     x: 0,\r\n//     y: 1,\r\n//     w: 1,\r\n//     h: 1,\r\n//     static: true,\r\n//   },\r\n//   {\r\n//     i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_3\",\r\n//     x: 2,\r\n//     y: 0,\r\n//     w: 1,\r\n//     h: 1,\r\n//     minW: 2,\r\n//     maxW: 4,\r\n//   },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_3\", x: 2, y: 0, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_3\", x: 3, y: 0, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_5\", x: 0, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_6\", x: 1, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_7\", x: 2, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_8\", x: 3, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_9\", x: 0, y: 3, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_10\", x: 1, y: 3, w: 1, h: 1 },\r\n// ];\r\n\r\nconst defaultLayouts: Layouts = {\r\n  lg: defaultGridLayoutArray,\r\n  md: defaultGridLayoutArray,\r\n  sm: defaultGridLayoutArray,\r\n  xs: defaultGridLayoutArray,\r\n  xxs: defaultGridLayoutArray,\r\n};\r\n\r\nconsole.log(JSON.stringify(defaultLayouts));\r\nexport default defaultLayouts;\r\n","import { Layouts } from \"react-grid-layout\";\r\n/**\r\n *\r\n */\r\nexport default class History {\r\n  events!: Layouts[];\r\n  currentStep!: number;\r\n\r\n  constructor() {\r\n    const emptyLayoutsArray: Layouts[] = [];\r\n    this.events = emptyLayoutsArray;\r\n    this.currentStep = 0;\r\n  }\r\n  addEditEvent(event: Layouts) {\r\n    this.currentStep += 1;\r\n    this.events.push(event);\r\n  }\r\n  undo(): Layouts {\r\n    console.log(this.currentStep);\r\n    this.currentStep -= 1;\r\n    return this.events[this.currentStep];\r\n  }\r\n  redo(): Layouts {\r\n    console.log(this.currentStep);\r\n    this.currentStep += 1;\r\n    return this.events[this.currentStep];\r\n  }\r\n}\r\n","import {\r\n  action,\r\n  thunk,\r\n  Thunk,\r\n  Action,\r\n  ActionOn,\r\n  thunkOn,\r\n  ThunkOn,\r\n  debug,\r\n  actionOn,\r\n} from \"easy-peasy\";\r\nimport CardData from \"@classes/CardData\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport { Layouts } from \"react-grid-layout\";\r\nimport defaultGridLayout from \"../static/defaultLayouts\";\r\nimport { AppMode } from \"../enums\";\r\nimport History from \"@classes/History\";\r\nimport { StoreModel } from \"./index\";\r\n/**\r\n * Core app model\r\n * @param\r\n */\r\nexport interface AppDataModel {\r\n  //state\r\n  availableCards: CardData[];\r\n  activeCards: CardData[];\r\n  currentLayout: Layouts;\r\n  appMode: AppMode;\r\n  history: History;\r\n  // localStorageLayouts: any[];\r\n\r\n  //requests\r\n  // fetchGoogleSheet: Thunk<AppDataModel>;\r\n\r\n  //loaders\r\n  // loadLocalLayouts: Action<AppDataModel>;\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: ActionOn<AppDataModel, StoreModel>;\r\n  onSwapCardContent: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onSetActiveLayout: ThunkOn<AppDataModel, never, StoreModel>;\r\n  //managers\r\n  manageViewModeChange: Thunk<AppDataModel, AppMode>;\r\n  toggleViewMode: Thunk<AppDataModel, never>;\r\n  //simple setters\r\n  setAppMode: Action<AppDataModel, AppMode>;\r\n  setCurrentLayout: Action<AppDataModel, Layouts>;\r\n  setActiveCards: Action<AppDataModel, CardData[]>;\r\n  setAvailableCards: Action<AppDataModel, CardData[]>;\r\n  registerCardLoadFailure: Thunk<AppDataModel, CardData, never, StoreModel>;\r\n  //listeners\r\n  onUndoHistory: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onRedoHistory: ThunkOn<AppDataModel, never, StoreModel>;\r\n\r\n  //clear\r\n  // clearLocalLayouts: Action<AppDataModel>;\r\n\r\n  //local storage\r\n  // saveLayoutLocal: Thunk<AppDataModel>;\r\n}\r\n\r\nconst appModel: AppDataModel = {\r\n  //state\r\n  availableCards: [],\r\n  activeCards: [],\r\n  currentLayout: defaultGridLayout,\r\n  appMode: AppMode.DISPLAY,\r\n  history: new History(),\r\n  // localStorageLayouts: [],\r\n\r\n  //managers\r\n  /**Control side effects for altering the view state of the app, and dispatch a setter for the state */\r\n  manageViewModeChange: thunk((actions, viewModeEnum) => {\r\n    // console.log(viewModeEnum);\r\n    actions.setAppMode(viewModeEnum);\r\n    switch (viewModeEnum) {\r\n      case AppMode.EDIT:\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n      // console.log(\"reached default in set view mode thunk\");\r\n    }\r\n  }),\r\n  toggleViewMode: thunk((actions, _, { getState }) => {\r\n    console.log(\"toggling view mod \");\r\n\r\n    switch (getState().appMode) {\r\n      case AppMode.EDIT:\r\n        actions.setAppMode(AppMode.DISPLAY);\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        actions.setAppMode(AppMode.EDIT);\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n      // console.log(\"reached default in set view mode thunk\");\r\n    }\r\n    // console.log(getState().appMode);\r\n  }),\r\n  setCurrentLayout: action((state, layoutArray) => {\r\n    state.currentLayout = layoutArray;\r\n  }),\r\n  setAvailableCards: action((state, cardDataArray) => {\r\n    console.log(\"setting available cards\");\r\n    state.availableCards = cardDataArray;\r\n  }),\r\n  setActiveCards: action((state, cardDataArray) => {\r\n    console.log(\"setting active cards\");\r\n    console.log(cardDataArray);\r\n    state.activeCards = cardDataArray;\r\n  }),\r\n  setAppMode: action((state, viewModeEnum) => {\r\n    console.log(\"setting view mode\");\r\n    state.appMode = viewModeEnum;\r\n  }),\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: actionOn(\r\n    // targetResolver:\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    // handler:\r\n    (state, target) => {\r\n      // console.log(\"got on card sheet load success\");\r\n      const cardRowsArray = target.payload.getSheetRows(0);\r\n      const rawCardRowsArray = cardRowsArray.map((row) => {\r\n        return {\r\n          src: row.src,\r\n          title: row.title,\r\n          added: row.added,\r\n          sourceid: row.sourceid,\r\n          author: row.author,\r\n          interaction: row.interaction,\r\n        } as RawCardRow;\r\n      });\r\n      const cards = rawCardRowsArray.map((c: RawCardRow) => new CardData(c));\r\n      // console.log(cards);\r\n      state.availableCards = cards;\r\n      // console.log(debug(state.availableCards));\r\n    }\r\n  ),\r\n\r\n  onSetActiveLayout: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.setActiveLayout,\r\n    async (actions, layout, { getState }) => {\r\n      // console.log(\"listened for setActiveLayout at app_model\");\r\n      //if a card source is in the active layout, then it must be active\r\n      // const sources = layout.payload.sources();\r\n      // console.log(sources);\r\n      const activeSources = layout.payload\r\n        .sources()\r\n        .filter((s) => s !== \"clock\");\r\n\r\n      const availableCardsUpdated = getState().availableCards.map((card) => {\r\n        if (activeSources.includes(card.sourceId)) {\r\n          card.setActive(true);\r\n        } else {\r\n          card.setActive(false);\r\n        }\r\n        return card;\r\n      });\r\n      const activeCards = getState().availableCards.filter((card) => {\r\n        return activeSources.includes(card.sourceId);\r\n      });\r\n      // console.log(availableCardsUpdated);\r\n      actions.setAvailableCards(availableCardsUpdated);\r\n      actions.setActiveCards(activeCards);\r\n      // console.log(activeCards);\r\n    }\r\n  ),\r\n  registerCardLoadFailure: thunk(\r\n    (actions, failedCard, { getState, getStoreState }) => {\r\n      console.log(\"Got card Register Load Failure at Layouts Model\");\r\n      console.log(failedCard);\r\n      const { activeCards } = getState();\r\n      const failedId = failedCard.sourceId;\r\n      let newCards = activeCards.map((c) => {\r\n        if (c.sourceId === failedId) {\r\n          console.log(\"found failed\");\r\n          c.fail();\r\n        }\r\n        return c;\r\n      });\r\n      actions.setActiveCards(newCards);\r\n    }\r\n  ),\r\n  onSwapCardContent: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.swapCardContent,\r\n    async (actions, payload, { getState }) => {\r\n      console.log(\"got swap card content\");\r\n      console.log(payload.payload);\r\n      console.log(getState().activeCards);\r\n      const newCards = getState().activeCards.map((c) => {\r\n        if (c.sourceId === payload.payload.targetId) {\r\n          const newSource = getState().availableCards.find(\r\n            (c) => c.sourceId === payload.payload.sourceId\r\n          );\r\n          console.log(newSource);\r\n          return newSource;\r\n        } else {\r\n          return c;\r\n        }\r\n      });\r\n      if (newCards) {\r\n        actions.setActiveCards(newCards as CardData[]);\r\n      }\r\n      console.log(debug(payload));\r\n    }\r\n  ),\r\n\r\n  onUndoHistory: thunkOn(\r\n    (actions, storeActions) => storeActions.historyModel.setCurrentHistory,\r\n    async (actions, payload) => {\r\n      console.log(\"got undo\");\r\n      console.log(payload.payload);\r\n      actions.setCurrentLayout(payload.payload);\r\n      console.log(debug(payload));\r\n    }\r\n  ),\r\n  onRedoHistory: thunkOn(\r\n    (actions, storeActions) => storeActions.historyModel.setCurrentHistory,\r\n    async (actions, payload) => {\r\n      console.log(\"got redo\");\r\n      console.log(payload.payload);\r\n      actions.setCurrentLayout(payload.payload);\r\n      console.log(debug(payload));\r\n    }\r\n  ),\r\n  //local storage\r\n  // clearLocalLayouts: action((state) => {\r\n  //   localStorage.clear();\r\n  //   state.localStorageLayouts = [];\r\n  // }),\r\n  // loadLocalLayouts: action((state) => {\r\n  //   const layouts: any = Object.keys(localStorage)\r\n  //     .filter((k) => k.startsWith(\"curLayout\"))\r\n  //     .map((k) => ({\r\n  //       name: k,\r\n  //       layout: JSON.parse(localStorage[k]) as Layout[],\r\n  //     }));\r\n  //   state.localStorageLayouts = layouts;\r\n  // }),\r\n  // saveLayoutLocal: thunk((actions, _, { getState }) => {\r\n  //   localStorage.setItem(\r\n  //     `curLayout_${localStorage.length}`,\r\n  //     JSON.stringify(getState().currentLayout)\r\n  //   );\r\n  //   actions.loadLocalLayouts();\r\n  // }),\r\n};\r\n\r\nexport default appModel;\r\n","import WaveformData from \"waveform-data\";\nimport SampleData from \"./SampleData\";\nimport SVGCatmullRomSpline from \"svg-catmull-rom-spline\";\nimport { mapRange } from \"@utils\";\n\nexport default class WaveFormBuilder {\n  generateSVG(original: SampleData): Promise<SampleData> {\n    console.log(original.src);\n    return this.getAudio(original.src)\n      .then((a) => {\n        // console.log(a);\n        // original.calculateDimensions(document.window.innerWidth)\n        const pathData = this.collectSamplePoints(a, original);\n        original.setPath(pathData);\n        // console.log(original.path);\n        return original;\n      })\n      .catch((e) => {\n        return original;\n      });\n  }\n  collectSamplePoints = (data: WaveformData, sample: SampleData) => {\n    const numberOfPoints = 10;\n    const duration = data.duration;\n    const trueWidth = 0;\n    const yOffset = 10;\n    const mapToMax = 40;\n    const mapToMin = 0;\n    const maxSampleLengthSeconds = 2.5;\n    const minSampleLengthSeconds = 0;\n    const minSvgViewBoxWidth = 100;\n    const maxSvgViewBoxWidth = 400;\n    const sampleDuration = data.duration;\n    const svgViewBoxWidth = mapRange(\n      sampleDuration,\n      minSampleLengthSeconds,\n      maxSampleLengthSeconds,\n      minSvgViewBoxWidth,\n      maxSvgViewBoxWidth\n      // maxSvgViewBoxWidth\n    );\n    console.log(sampleDuration);\n\n    const points: DataPoint[] = [];\n    for (let index = 0; index < numberOfPoints; index++) {\n      const currentTime = index * (1 / numberOfPoints) * duration;\n      const channel1 = data.channel(0);\n      const valueAtTime = data.at_time(currentTime);\n      const maxSampleVal = channel1.max_sample(valueAtTime);\n      // console.log(maxSampleVal);\n      const percentageComplete = index / numberOfPoints;\n      const xValue = percentageComplete * svgViewBoxWidth;\n\n      console.log(percentageComplete);\n\n      let yValue = mapRange(maxSampleVal, 0, 100, mapToMin, mapToMax);\n      yValue += yOffset;\n      // console.log(yValue);\n      // const xValue = Math.round(currentTime*200);\n      const timePointValue = { x: xValue, y: Math.round(yValue) };\n      points.push(timePointValue);\n      // console.log(`audio point value ${index} is ${timePointValue.x}, ${timePointValue.y}`)\n    }\n    // const testpoints = [[0, 0], [200, -200], [200, 0], [0, 200]];\n    const tolerance = 4;\n    const highestQuality = true;\n    // const attribute = SVGCatmullRomSpline.toPath(testpoints, tolerance, highestQuality);\n\n    //top line\n    const topPoints = points.map((p) => [p.x, p.y]);\n    //add a point between the top and bottom\n    topPoints.push([topPoints[topPoints.length - 1][0], 0]);\n\n    //reverse points to conenct\n\n    const reversePoints = points.map((p) => [p.x, trueWidth - p.y]).reverse();\n\n    const nextPointX = reversePoints[reversePoints.length - 1][0];\n    const nextPointY = topPoints[0][1];\n    const newPoint = [nextPointX, nextPointY];\n    reversePoints.push(newPoint);\n\n    const allPoints = [...topPoints, ...reversePoints];\n    const newTestedPoints = SVGCatmullRomSpline.toPath(\n      allPoints,\n      tolerance,\n      highestQuality\n    );\n\n    // console.log(newTestedPoints);\n    return newTestedPoints;\n    // return svgPath\n  };\n  data!: any[];\n  audioContext!: AudioContext;\n\n  constructor() {\n    this.data = [];\n    this.audioContext = new AudioContext();\n  }\n\n  getAudio = (url: string): Promise<WaveformData> => {\n    // const audioContext = new AudioContext();\n    return fetch(url)\n      .then((response) => response.arrayBuffer())\n      .then((buffer) => {\n        const options = {\n          audio_context: this.audioContext,\n          array_buffer: buffer,\n          scale: 128,\n        };\n\n        return new Promise((resolve, reject) => {\n          WaveformData.createFromAudio(options, (err, waveform) => {\n            if (err) {\n              console.error(`FAILED TO CREATE AUDIO FROM URL ${url}`);\n              reject(err);\n            } else {\n              resolve(waveform);\n            }\n          });\n        });\n      });\n  };\n}\n\ninterface DataPoint {\n  x: number;\n  y: number;\n}\n\nfunction catmullRom2bezier(points: DataPoint[]): DataPoint[] {\n  var result = [];\n  for (var i = 0; i < points.length - 1; i++) {\n    var p = [];\n\n    p.push({\n      x: points[Math.max(i - 1, 0)].x,\n      y: points[Math.max(i - 1, 0)].y,\n    });\n    p.push({\n      x: points[i].x,\n      y: points[i].y,\n    });\n    p.push({\n      x: points[i + 1].x,\n      y: points[i + 1].y,\n    });\n    p.push({\n      x: points[Math.min(i + 2, points.length - 1)].x,\n      y: points[Math.min(i + 2, points.length - 1)].y,\n    });\n\n    // Catmull-Rom to Cubic Bezier conversion matrix\n    //    0       1       0       0\n    //  -1/6      1      1/6      0\n    //    0      1/6      1     -1/6\n    //    0       0       1       0\n\n    var bp = [];\n    bp.push({\n      x: (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n      y: (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n    });\n    bp.push({\n      x: (p[1].x + 6 * p[2].x - p[3].x) / 6,\n      y: (p[1].y + 6 * p[2].y - p[3].y) / 6,\n    });\n    bp.push({\n      x: p[2].x,\n      y: p[2].y,\n    });\n    result.push(bp);\n  }\n\n  return result;\n}\n\nfunction makePath(points: DataPoint[]): string {\n  let result = \"M\" + points[0].x + \",\" + points[0].y + \" \";\n  const catmull = catmullRom2bezier(points);\n  for (const element of catmull) {\n    result +=\n      \"C\" +\n      element[0].x +\n      \",\" +\n      element[0].y +\n      \" \" +\n      element[1].x +\n      \",\" +\n      element[1].y +\n      \" \" +\n      element[2].x +\n      \",\" +\n      element[2].y +\n      \" \";\n  }\n  return result;\n}\n\nfunction generateSVG() {\n  var graph = [2, 2, 5, 8, 5, 4, 3, 9];\n  var points = [];\n  for (var i = 0; i < graph.length; i++) {\n    let newPoint = { x: i * 50 + 20, y: graph[i] * 40 * -1 + 400 };\n    console.log(newPoint);\n    points.push({ x: i * 50 + 20, y: graph[i] * 40 * -1 + 400 });\n  }\n  document.querySelector(\"#svg path\").setAttribute(\"d\", makePath(points));\n  for (var i = 0; i < points.length; i++) {\n    var circle = points[i];\n    var c = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    c.setAttribute(\"cx\", circle.x);\n    c.setAttribute(\"cy\", circle.y);\n    c.setAttribute(\"r\", \"3\");\n    document.querySelector(\"#svg\").appendChild(c);\n  }\n}\n\n// window.onload = function () {\n//     var graph = [2, 2, 5, 8, 5, 4, 3, 9];\n//     var points = [];\n//     for (var i = 0; i < graph.length; i++) {\n//         let newPoint = {x: i * 50 + 20, y: graph[i] * 40 * -1 + 400};\n//         console.log(newPoint);\n//         points.push({x: i * 50 + 20, y: graph[i] * 40 * -1 + 400});\n//     }\n//     document.querySelector('#svg path').setAttribute('d', makePath(points));\n//     for (var i = 0; i < points.length; i++) {\n//         var circle = points[i];\n//         var c = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n//         c.setAttribute(\"cx\", circle.x);\n//         c.setAttribute(\"cy\", circle.y);\n//         c.setAttribute(\"r\", \"3\");\n//         document.querySelector('#svg').appendChild(c);\n//     }\n// };\n","import WaveformData from \"waveform-data\"\n\nexport type CompositionTitle = \"Bartok Movement 1\" | \"Bach Movement 1\" | \"Bach Movement 2\"\n\n\nclass CompositionData{\n    title!: CompositionTitle\n    url!: string;\n    waveFormData: WaveformData | undefined\n    constructor(title: CompositionTitle, url: string) {\n        this.title = title\n        this.waveFormData\n        this.url = url\n    }\n\n    buildWaveform(): Promise<WaveformData>{\n        return getAudio(this.url).then(d=>{\n          this.waveFormData = d\n          return new Promise((resolve, reject)=>{\n            resolve(d)\n          })\n        })\n    }\n\n}\n\nexport default CompositionData\n\n\nconst getAudio = (url: string): Promise<WaveformData>=>{\n    // const audioContext = new AudioContext();\n    const audioContext = new AudioContext();\n    return fetch(url)\n    .then(response => response.arrayBuffer())\n    .then(buffer => {\n      const options = {\n        audio_context: audioContext,\n        array_buffer: buffer,\n        scale: 128\n      };\n  \n      return new Promise((resolve, reject) => {\n        WaveformData.createFromAudio(options, (err, waveform) => {\n          if (err) {\n            reject(err);\n          }\n          else {\n            resolve(waveform);\n          }\n        });\n      });\n    })\n  }","import CompositionData from \"@classes/ðŸŽ»CompositionData\";\n\nconst genearteDefaultCompositions = (): CompositionData =>{\n    // const url = `${process.env.PUBLIC_URL}/`+\"RECORDINGS/Bach Mov 2 v2.wav\"\n    const url = `${process.env.PUBLIC_URL}/`+\"BACH2.mp3\"\n    const bachMovement1 = new CompositionData(\"Bach Movement 2\", url)\n    console.log(bachMovement1);\n    return bachMovement1\n}\n\nconst defaultCompositions: CompositionData[] = [genearteDefaultCompositions()]\n\nexport default defaultCompositions","\n\n\nimport { action, Action, thunk, Thunk, thunkOn, ThunkOn } from \"easy-peasy\";\nimport History from \"@classes/History\";\nimport { Layouts } from \"react-grid-layout\";\nimport WaveFormBuilder from \"@classes/WaveFormBuilder\";\nimport SampleData from \"@classes/SampleData\";\nimport placeHolderSamples from \"@static/placeHolderSamples\"\nimport { StoreModel } from \"model\";\nimport WaveformData from \"waveform-data\";\nimport CompositionData from \"@classes/ðŸŽ»CompositionData\";\nimport defaultCompositions from \"@static/defaultCompositions\";\nimport FileSaver from \"file-saver\"\nimport Papa from \"papaparse\"\nimport { RawCompositionRow } from \"@interfaces/RawCompositionRow\";\n\nexport interface CompositionsModel{\n    //state\n    compositions: CompositionData[],\n    //thunks\n    //simple setters\n    setCompositions: Action<CompositionsModel, CompositionData[]>\n    //proccessing\n    processCompositions: Thunk<CompositionsModel, never, StoreModel>\n    downloadAnalysis: Action<CompositionsModel>\n}\n\n\nconst compositionsModel: CompositionsModel = {\n    //state\n    compositions: defaultCompositions,\n    //processing\n    processCompositions: thunk((actions, _, {getState})=>{\n        console.log(\"processing compositions\")\n        const state = getState()\n        const { compositions: compositions }  = {...state}\n\n        console.log(compositions)\n        const processor = new WaveFormBuilder()\n\n        //TODO: ERROR HANDLING\n        const analysisResults = compositions.map(c=>processor.getAudio(c.url))\n        \n        // const waveformData = processor.getAudio()\n        // const processedCompositions = compositions.map(composition=>composition.buildWaveform());\n        Promise.allSettled(analysisResults).then(results=>{\n            const succesfulAnalaysisCompositions: CompositionData[] = [];\n            for (let index = 0; index < results.length; index++) {\n                const result = results[index];\n                const compClone = [...compositions]\n                const comp = compClone[index]   \n                console.log(result);\n                if (result.status == \"fulfilled\"){\n                    comp.waveFormData = result.value \n                    succesfulAnalaysisCompositions.push(comp)\n                }\n            }\n            console.log(\"SETTINGS COMPOSITOINS\");\n            console.log(succesfulAnalaysisCompositions);\n            actions.setCompositions(succesfulAnalaysisCompositions)\n            actions.downloadAnalysis()\n        })\n        // console.log(processedCompositions);\n    }),\n    //simple setters\n    setCompositions: action((state, samplesArray) => {\n        console.log(\"setting samples\")\n        state.compositions = samplesArray;\n        // state.tempLayout = layouts;\n      }),\n    downloadAnalysis: action((state)=>{\n        console.log(state.compositions[0].waveFormData.toJSON().data);\n        const rows: RawCompositionRow[] = state.compositions.map(c=>({title: c.title, url: c.url , data: JSON.stringify(c.waveFormData)}))\n        const csv = Papa.unparse(rows)\n        console.log(rows[0].data.length);\n        \n        var csvData = new Blob([csv], {type: 'text/csv;charset=utf-8;'});\n        // FileSaver.saveAs(csvData, \"test.csv\")\n    })\n}\n\nexport default compositionsModel\n\n","import type SheetId from \"../interfaces/SheetId\";\r\n\r\nconst cardDataSheetKey: SheetId = {\r\n  key: \"1eq33_1yJS6EZjqBvxWgL7nDP0OxC8bMdJJqU7Akp_3E\",\r\n  // key: \"1o-R04VC8cIbcmqM68q4ESguaaNYb-0jhoPNgEuKa0i4\",\r\n  sheet_number: 1,\r\n};\r\nexport default cardDataSheetKey;\r\n\r\n// 1o-R04VC8cIbcmqM68q4ESguaaNYb-0jhoPNgEuKa0i4\r\n// key: \"181P-SDszUOj_xn1HJ1DRrO8pG-LXyXNmINcznHeoK8k\",\r\n","import { ConsoleIcon } from \"evergreen-ui\";\r\nimport {\r\n  GoogleSpreadsheet,\r\n  GoogleSpreadsheetRow,\r\n  GoogleSpreadsheetWorksheet,\r\n} from \"google-spreadsheet\";\r\n\r\nexport default class GoogleSheetData {\r\n  title!: string;\r\n  sheetId!: string;\r\n  sheets!: GoogleSpreadsheetRow[][];\r\n\r\n  constructor(\r\n    title: string,\r\n    sheetId: string,\r\n    sheets: GoogleSpreadsheetRow[][]\r\n  ) {\r\n    this.title = title;\r\n    this.sheetId = sheetId;\r\n    this.sheets = sheets;\r\n  }\r\n  getSheetRows(sheetIndex: number): GoogleSpreadsheetRow[] {\r\n    return this.sheets[sheetIndex];\r\n  }\r\n  loadSheets(\r\n    sheetId: string,\r\n    apikey: string\r\n  ): Promise<Promise<GoogleSpreadsheetRow[]>[]> {\r\n    const document = new GoogleSpreadsheet(sheetId);\r\n    document.useApiKey(apikey);\r\n    const sheetPromiseArray: Promise<GoogleSpreadsheetRow[]>[] = [];\r\n    return document.loadInfo().then(() => {\r\n      document.sheetsByIndex.forEach((element) => {\r\n        const myTest = element.getRows();\r\n        // console.log(myTest);\r\n        sheetPromiseArray.push(myTest);\r\n      });\r\n      return sheetPromiseArray;\r\n    });\r\n  }\r\n}\r\n","import { action, Action, thunk, Thunk } from \"easy-peasy\";\r\nimport type GoogleSheet from \"../interfaces/GoogleSheet\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport cardDataSheetKey from \"@static/cardDataSheetKey\";\r\nimport layoutsGoogleSheetKey from \"@static/layoutsGoogleSheetKey\";\r\nimport GoogleSheetData from \"@classes/ðŸ“‹GoogleSheetData\";\r\nimport Papa, { ParseConfig } from \"papaparse\";\r\nimport { RawCompositionRow } from \"@interfaces/RawCompositionRow\";\r\nimport { ParagraphProps } from \"evergreen-ui\";\r\nimport RawSampleRow from \"@interfaces/RawSampleRow\";\r\nimport analyzeClips from \"@static/analyzeClips\";\r\n\r\ntype Result =\r\n  | { success: true; value: unknown }\r\n  | { success: false; error: Error };\r\n\r\nexport interface GoogleSheetsModel {\r\n  //state\r\n  compositionsSheet: GoogleSheetData | undefined;\r\n  appGoogleSheet: GoogleSheetData | undefined;\r\n  cardDataGoogleSheet: RawCardRow[] | null;\r\n  samplesSheet: RawSampleRow[];\r\n  // cardDataGoogleSheet: GoogleSheet<RawCardRow> | null;\r\n  layoutDataGoogleSheet: GoogleSheet<RawLayoutRow> | null;\r\n\r\n  //requests\r\n  fetchAppGoogleSheet: Thunk<GoogleSheetsModel>;\r\n  fetchCompositionsSheet: Thunk<GoogleSheetsModel>;\r\n  fetchSamplesSheet: Thunk<GoogleSheetsModel>;\r\n  // fetchLayoutDataGoogleSheet: Thunk<GoogleSheetsModel>;\r\n\r\n  //setters\r\n  setAppGoogleSheetData: Action<GoogleSheetsModel, GoogleSheetData>;\r\n  setCardDataGoogleSheet: Action<GoogleSheetsModel, RawCardRow[]>;\r\n  setCompositionsSheet: Action<GoogleSheetsModel, Papa.ParseResult<unknown>>;\r\n  setSamplesSheet: Action<GoogleSheetsModel, unknown[]>;\r\n  // setCardDataGoogleSheet: Action<GoogleSheetsModel, GoogleSheet<RawCardRow>>;\r\n  setLayoutDataGoogleSheet: Action<\r\n    GoogleSheetsModel,\r\n    GoogleSheet<RawLayoutRow>\r\n  >;\r\n}\r\n/**\r\n * Responsible for making requestst to google sheets. Other models must listen this model to intercept the sheet payload.\r\n * Also stores the fetch data purely for debugging purposes.\r\n */\r\n\r\nconst googleSheetsModel: GoogleSheetsModel = {\r\n  //state\r\n  layoutDataGoogleSheet: null,\r\n  cardDataGoogleSheet: null,\r\n  appGoogleSheet: undefined,\r\n  samplesSheet: [],\r\n  compositionsSheet: undefined,\r\n\r\n  //request\r\n  fetchCompositionsSheet: thunk(async (actions) => {\r\n    // console.log(\"FETCHING COMPOSITIONS SHEET\");\r\n    const url = publicSheetUrl(\"/TEST_ANALYSIS.csv\");\r\n    parseSheet(url, (r) => {\r\n      actions.setCompositionsSheet(r);\r\n    });\r\n  }),\r\n  fetchSamplesSheet: thunk(async (actions) => {\r\n    console.log(\"Fetching Samples\");\r\n    if (analyzeClips) {\r\n      console.log(\"USING UNPROCESSED SAMPLE SHEET\");\r\n      const url = publicSheetUrl(\"/out_csv.csv\");\r\n      parseSheet(url, (r) => {\r\n        actions.setSamplesSheet(r.data);\r\n      });\r\n    } else {\r\n      console.log(\"USING PREPROCESSED SAMPLE SHEET\");\r\n      const url = publicSheetUrl(\"/CLIPS_4.csv\");\r\n      parseSheet(url, (r) => {\r\n        actions.setSamplesSheet(r.data);\r\n      });\r\n    }\r\n  }),\r\n  fetchAppGoogleSheet: thunk(async (actions) => {\r\n    GoogleSheetData.prototype\r\n      .loadSheets(\r\n        cardDataSheetKey.key,\r\n        process.env.REACT_APP_GCP_TOKEN as string\r\n      )\r\n      .then((response) => {\r\n        Promise.all(response).then((responseData) => {\r\n          const studentsGoogleSheet = new GoogleSheetData(\r\n            \"DSC App\",\r\n            cardDataSheetKey.key,\r\n            responseData\r\n          );\r\n          // console.log(studentsGoogleSheet);\r\n          actions.setAppGoogleSheetData(studentsGoogleSheet);\r\n        });\r\n      });\r\n  }),\r\n  //Simple Setters\r\n  setAppGoogleSheetData: action((state, googleSheet) => {\r\n    state.appGoogleSheet = googleSheet;\r\n  }),\r\n  setCardDataGoogleSheet: action((state, sheet) => {\r\n    state.cardDataGoogleSheet = sheet;\r\n  }),\r\n  setLayoutDataGoogleSheet: action((state, sheet) => {\r\n    state.layoutDataGoogleSheet = sheet;\r\n  }),\r\n  setCompositionsSheet: action((state, compositionSheet) => {\r\n    compositionSheet.data = compositionSheet.data as RawCompositionRow[];\r\n  }),\r\n  setSamplesSheet: action((state, samplesSheet) => {\r\n    state.samplesSheet = samplesSheet as RawSampleRow[];\r\n  }),\r\n};\r\n\r\nexport default googleSheetsModel;\r\n\r\n// console.log(url);\r\n// Papa.parse(url, {\r\n//     download: true,\r\n//     header: true,\r\n//     complete: function(results) {\r\n//       console.log(results);\r\n//       actions.setSamplesSheet(results.data)\r\n//     }\r\n// });\r\n\r\nconst parseSheet = (\r\n  url: string,\r\n  complete: (results: Papa.ParseResult<unknown>) => void\r\n) => {\r\n  Papa.parse(url, {\r\n    download: true,\r\n    header: true,\r\n    complete: function (results) {\r\n      // console.log(results);\r\n      complete(results);\r\n    },\r\n  });\r\n};\r\n\r\nconst publicSheetUrl = (file: string) => {\r\n  if (!file.endsWith(\".csv\")) {\r\n    console.error(\"Failed to load csv, wrong extension (not .csv)\");\r\n  }\r\n  return process.env.PUBLIC_URL + file;\r\n};\r\n","import { action, Action, thunk, Thunk, thunkOn, ThunkOn } from \"easy-peasy\";\r\nimport History from \"@classes/History\";\r\nimport { Layouts } from \"react-grid-layout\";\r\n\r\nexport interface HistoryModel {\r\n  history: History;\r\n  addEditHistory: Action<HistoryModel, Layouts>;\r\n  undoIt: Action<HistoryModel>;\r\n  redoIt: Action<HistoryModel>;\r\n  undoHistory: Thunk<HistoryModel>;\r\n  setCurrentHistory: Action<HistoryModel, Layouts>;\r\n  // onAddTodo: ThunkOn<HistoryModel, any, StoreModel>;\r\n}\r\nconst historyModel: HistoryModel = {\r\n  history: new History(),\r\n  undoHistory: thunk((actions, _, { getState }) => {\r\n    // console.log(payload);\r\n    actions.undoIt();\r\n    actions.setCurrentHistory(getState().history.undo());\r\n    // const newLayouts = state.history.undo();\r\n    // console.log(newLayouts);\r\n  }),\r\n  undoIt: action((state) => {\r\n    state.history.undo();\r\n    console.log(state.history.currentStep);\r\n    // console.log(payload);\r\n  }),\r\n  redoIt: action((state) => {\r\n    state.history.redo();\r\n    console.log(state.history.currentStep);\r\n    // console.log(payload);\r\n  }),\r\n  setCurrentHistory: action((state, payload) => {\r\n    console.log(payload);\r\n  }),\r\n  // undoHistory: action((state, layouts) => {\r\n  //   console.log(layouts);\r\n  //   const newLayouts = state.history.undo();\r\n  //   console.log(newLayouts);\r\n  // }),\r\n\r\n  // undoHistory: action((state, layouts) => {\r\n  //   console.log(layouts);\r\n  //   const newLayouts = state.history.undo();\r\n  //   console.log(newLayouts);\r\n  // }),\r\n  addEditHistory: action((state, layouts) => {\r\n    console.log(\"adding edit history\");\r\n    console.log(layouts);\r\n    const test = JSON.stringify(layouts);\r\n    console.log(test);\r\n    state.history.addEditEvent(layouts);\r\n  }),\r\n};\r\n\r\nexport default historyModel;\r\n","import { Layout, Layouts } from \"react-grid-layout\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport type { CardSwapEvent, CardAddEvent } from \"../interfaces/CardEvents\";\r\nimport CardData from \"./CardData\";\r\n// import { Ok, Err, Result } from \"ts-results\";\r\nimport defaultLayouts from \"../static/defaultLayouts\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport type { GridPosition } from \"../interfaces/GridPosition\";\r\n\r\n//TODO: Google form columns and layoutData fields should have the same capitilization\r\nexport default class LayoutData {\r\n  readonly title: string;\r\n  readonly author: string;\r\n  readonly added: Date;\r\n  readonly id: string;\r\n  layout: Layouts;\r\n  constructor(row: RawLayoutRow) {\r\n    this.id = row.title + \"_\" + row.timestamp;\r\n    this.title = row.title;\r\n    this.author = row.author;\r\n    //7/26/2021 14:38:57\r\n    //7/26/2021\r\n    this.added = new Date(row.timestamp.split(\" \")[0]);\r\n    const startLayout: Layouts = JSON.parse(row.layout);\r\n    this.layout = startLayout;\r\n  }\r\n  swapCard(swapInfo: CardSwapEvent): void {\r\n    for (const [k, v] of Object.entries(this.layout)) {\r\n      for (const [index, layoutValue] of v.entries()) {\r\n        if (layoutValue.i == swapInfo.targetId) {\r\n          v[index].i = swapInfo.sourceId;\r\n        }\r\n      }\r\n      this.layout[k] = v;\r\n    }\r\n  }\r\n  removeCard(toRemove: CardData): void {\r\n    console.log(this.layout);\r\n    for (const [k, v] of Object.entries(this.layout)) {\r\n      for (const [index, layoutValue] of v.entries()) {\r\n        // console.log(layoutVal);\r\n        this.layout[k] = v.filter((l) => l.i !== toRemove.sourceId);\r\n        // if (layoutVal.i == toRemove.sourceId) {\r\n        //   console.log(layoutVal);\r\n        // }\r\n      }\r\n    }\r\n  }\r\n  addCard(toAdd: CardData, pos: GridPosition): void {\r\n    console.log(\"ADDING CARD AT LAYOUT DATA\");\r\n    console.log(this.layout);\r\n    for (const [k, v] of Object.entries(this.layout)) {\r\n      const newItem: Layout = {\r\n        x: pos.x,\r\n        y: pos.y,\r\n        w: 1,\r\n        h: 1,\r\n        i: toAdd.sourceId,\r\n      };\r\n      this.layout[k].push(newItem);\r\n    }\r\n  }\r\n  failCard(toFail: CardData){\r\n    console.log(\"FAILING CARD AT LAYOUT DATA\");\r\n    // console.log()\r\n  }\r\n  setGridLayout(newGridLayout: Layouts): void {\r\n    console.log(newGridLayout);\r\n    this.layout = newGridLayout;\r\n  }\r\n  sources(): string[] {\r\n    const lg = Object.entries(this.layout)[0][1];\r\n    return lg.map((l: any) => l.i);\r\n  }\r\n}\r\n\r\nfunction findEmptyGridPositions(\r\n  layouts: Layout[],\r\n  rows: number,\r\n  cols: number\r\n): GridPosition[] {\r\n  const allGridSpots: GridPosition[] = [];\r\n  for (let y = 0; y < rows; y++) {\r\n    for (let x = 0; x < cols; x++) {\r\n      allGridSpots.push({ x: x, y: y });\r\n    }\r\n  }\r\n  const filledSpots = findFilledPositions(layouts);\r\n  const stringFilledSpots = new Set(\r\n    filledSpots.map((fs) => [fs.x, fs.y].toString())\r\n  );\r\n\r\n  return allGridSpots.filter(\r\n    (gs) => !stringFilledSpots.has([gs.x, gs.y].toString())\r\n  );\r\n}\r\n\r\nfunction findFilledPositions(layouts: Layout[]): GridPosition[] {\r\n  const takenSpots: GridPosition[] = [];\r\n  for (const l of layouts) {\r\n    takenSpots.push({ x: l.x, y: l.y });\r\n    for (let index = 1; index < l.w; index++) {\r\n      const fullSpotX: GridPosition = {\r\n        x: l.x + index,\r\n        y: l.y,\r\n      };\r\n      takenSpots.push(fullSpotX);\r\n    }\r\n    for (let index = 1; index < l.h; index++) {\r\n      const fullSpotY: GridPosition = {\r\n        x: l.x,\r\n        y: l.y + index,\r\n      };\r\n      takenSpots.push(fullSpotY);\r\n    }\r\n  }\r\n  return takenSpots;\r\n}\r\n\r\n// function parseLayout(\r\n//   data: string\r\n// ): Result<Layouts, \"failed to parse layoutJSON\"> {\r\n//   try {\r\n//     const layouts = JSON.parse(data);\r\n//     return Ok(layouts);\r\n//   } catch {\r\n//     return Err(\"failed to parse layoutJSON\");\r\n//   }\r\n// }\r\n\r\nfunction generateFilledLayout(\r\n  layout: Layout[],\r\n  emptyPosArray: GridPosition[]\r\n): Layouts {\r\n  const emptyCards = emptyPosArray.map((rr) => {\r\n    return {\r\n      x: rr.x,\r\n      y: rr.y,\r\n      w: 1,\r\n      h: 1,\r\n      i: `empty_card_${uuidv4()}`,\r\n      minW: 1,\r\n      maxW: 1,\r\n      minH: 1,\r\n      maxH: 1,\r\n      static: true,\r\n      isDraggable: false,\r\n      isResizable: false,\r\n      resizeHandles: [],\r\n    } as Layout;\r\n  });\r\n  const filled = layout.concat(emptyCards);\r\n  return {\r\n    lg: filled,\r\n    md: filled,\r\n    sm: filled,\r\n    xs: filled,\r\n    xxs: filled,\r\n  };\r\n}\r\n// function getCount(): Promise<Result<number, Error>> {\r\n//   return fetch(\"/index-count\")\r\n//     .then((res) => res.json())\r\n//     .then((body): Ok<number, Error> => ok(body[\"count\"]))\r\n//     .catch(() => err(new Error(\"Something when wrong while fetching count\")));\r\n// }\r\n\r\n// // To access the count, we'll first have to check if the calculation succeeded.\r\n// if (res.isOk()) {\r\n//   // Now we can access the value.\r\n//   console.log(\"Count is:\", res.value);\r\n// }\r\n\r\n// if (res.isErr()) {\r\n//   // Now we can access the error.\r\n//   console.error(\"Oh no, there was an error:\", res.error);\r\n// }\r\n\r\n// // https://dev.to/duunitori/mimicing-rust-s-result-type-in-typescript-3pn1\r\n// // type Result =\r\n// //   | { success: true; value: unknown }\r\n// //   | { success: false; error: Error };\r\n\r\n// export type Result<T, E> = Ok<T, E> | Err<T, E>;\r\n\r\n// export class Ok<T, E> {\r\n//   public constructor(public readonly value: T) {}\r\n\r\n//   public isOk(): this is Ok<T, E> {\r\n//     return true;\r\n//   }\r\n\r\n//   public isErr(): this is Err<T, E> {\r\n//     return false;\r\n//   }\r\n// }\r\n\r\n// export class Err<T, E> {\r\n//   public constructor(public readonly error: E) {}\r\n\r\n//   public isOk(): this is Ok<T, E> {\r\n//     return false;\r\n//   }\r\n\r\n//   public isErr(): this is Err<T, E> {\r\n//     return true;\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * Construct a new Ok result value.\r\n//  */\r\n// export const ok = <T, E>(value: T): Ok<T, E> => new Ok(value);\r\n\r\n// /**\r\n//  * Construct a new Err result value.\r\n//  */\r\n// export const err = <T, E>(error: E): Err<T, E> => new Err(error);\r\n","import {\r\n  action,\r\n  thunk,\r\n  Thunk,\r\n  Action,\r\n  thunkOn,\r\n  ThunkOn,\r\n  debug,\r\n} from \"easy-peasy\";\r\nimport CardData from \"@classes/CardData\";\r\nimport LayoutData from \"@classes/LayoutData\";\r\nimport { StoreModel } from \"./index\";\r\nimport { Layout, Layouts } from \"react-grid-layout\";\r\nimport { CardAddEvent, CardSwapEvent } from \"../interfaces/CardEvents\";\r\nimport defaultLayouts from \"../static/defaultLayouts\";\r\nimport { AppMode } from \"../enums\";\r\nimport RawCardRow from \"../interfaces/RawCardRow\";\r\nimport RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport IFrameValidator from \"../IFrameValidator\";\r\nimport defaultLayout from \"@static/defaultLayouts\";\r\nexport interface LayoutsModel {\r\n  //state\r\n  activeLayout: LayoutData | undefined;\r\n  externalLayouts: LayoutData[];\r\n  bufferLayout: Layouts;\r\n  tempLayout: Layouts;\r\n  //listeners\r\n  onSetAppGoogleSheetData: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  onToggleViewModeListener: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  //requests\r\n\r\n  //simple setters\r\n  setActiveLayout: Action<LayoutsModel, LayoutData>;\r\n  setExternalLayouts: Action<LayoutsModel, LayoutData[]>;\r\n  setBufferLayout: Action<LayoutsModel, Layouts>;\r\n  setTempLayout: Action<LayoutsModel, Layouts>;\r\n  updateLayout: Action<LayoutsModel, CardSwapEvent>;\r\n\r\n  // storeBufferLayout: Action<LayoutsModel>;\r\n\r\n  //update\r\n  swapCardContent: Thunk<LayoutsModel, CardSwapEvent, StoreModel>;\r\n  deleteCard: Thunk<LayoutsModel, CardData, StoreModel>;\r\n  addCard: Thunk<LayoutsModel, CardAddEvent, never, StoreModel>;\r\n  registerCardLoadFailure: Thunk<LayoutsModel, CardData, never, StoreModel>;\r\n}\r\n\r\nconst layoutsModel: LayoutsModel = {\r\n  //state\r\n  activeLayout: undefined,\r\n  externalLayouts: [],\r\n  bufferLayout: defaultLayouts,\r\n  tempLayout: defaultLayouts,\r\n\r\n  //listeners\r\n  /**On setAppGoogleSheetData, create an array of LayoutData objects from the provided rows */\r\n  onSetAppGoogleSheetData: thunkOn(\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    (actions, target) => {\r\n      //extract only the needed properties from the GoogleSheetRow\r\n      const rawLayoutRows = target.payload.getSheetRows(1).map((l) => {\r\n        return {\r\n          title: l.title,\r\n          author: l.author,\r\n          timestamp: l.timestamp,\r\n          layout: l.layout,\r\n          interaction: l.interaction,\r\n        } as RawLayoutRow;\r\n      });\r\n      const layouts = rawLayoutRows.map((l) => new LayoutData(l));\r\n      // const defaultLayout = layouts[0];\r\n      // const defaultLayout = defa\r\n      // layouts.\r\n      const dLayout = layouts[0];\r\n      dLayout.layout = defaultLayout;\r\n      actions.setActiveLayout(dLayout);\r\n      // const bufferLayout = layouts[0]\r\n      // if (defaultLayout) {\r\n      //   actions.setActiveLayout(defaultLayout);\r\n      // }\r\n      actions.setExternalLayouts(layouts);\r\n      actions.setBufferLayout(layouts[0].layout);\r\n    }\r\n  ),\r\n  onToggleViewModeListener: thunkOn(\r\n    // targetResolver:\r\n    (actions, storeActions) => storeActions.appModel.toggleViewMode,\r\n    // handler:\r\n    (actions, target, { getState, getStoreState }) => {\r\n      // console.log(\r\n      //   \"listened to on toggle view mode in layout model, setting layout from buffer\"\r\n      // );\r\n      const { activeLayout } = getState();\r\n      const buf = getState().bufferLayout;\r\n      if (getStoreState().appModel.appMode === AppMode.DISPLAY) {\r\n        // console.log(\"IT WAS IN DISPLAY MODE\");\r\n        if (activeLayout?.layout) {\r\n          activeLayout.layout = buf;\r\n          actions.setActiveLayout(activeLayout);\r\n        }\r\n      }\r\n    }\r\n  ),\r\n  //simple setters\r\n  setActiveLayout: action((state, newActiveLayout) => {\r\n    // console.log(\"setting active layout\");\r\n    // console.log(newActiveLayout);\r\n    state.activeLayout = newActiveLayout;\r\n  }),\r\n  setExternalLayouts: action((state, newLayoutArray) => {\r\n    // console.log(\"setting external layouts\");\r\n    state.externalLayouts = newLayoutArray;\r\n  }),\r\n  //mutators\r\n  swapCardContent: thunk(\r\n    (actions, swapInfo, { getState, getStoreState, getStoreActions }) => {\r\n      const currentModel = getStoreState() as StoreModel;\r\n      // const activeCards = curModel.appModel.activeCards;\r\n      const { activeLayout } = getState();\r\n      if (activeLayout) {\r\n        const buf = getState().bufferLayout;\r\n        activeLayout.layout = buf;\r\n        activeLayout.swapCard(swapInfo);\r\n        actions.setActiveLayout(activeLayout);\r\n        // actions.setBufferLayout(activeLayout.layout);\r\n      }\r\n    }\r\n  ),\r\n  deleteCard: thunk(\r\n    (actions, cardToDelete, { getState, getStoreState, getStoreActions }) => {\r\n      // console.log(\"deleting card at layotus model\");\r\n      // // console.log(cardToDelete);\r\n      // let buf = getState().bufferLayout;\r\n      const previousLayout = getState().activeLayout;\r\n      console.log(\"got here\");\r\n      const { activeLayout } = getState();\r\n      if (activeLayout) {\r\n        const buf = getState().bufferLayout;\r\n        activeLayout.layout = buf;\r\n        activeLayout.removeCard(cardToDelete);\r\n        actions.setActiveLayout(activeLayout);\r\n      }\r\n    }\r\n  ),\r\n  addCard: thunk((actions, cardAddEvent, { getState, getStoreState }) => {\r\n    console.log(\"adding card\");\r\n    console.log(cardAddEvent);\r\n    const { availableCards } = getStoreState().appModel;\r\n    const { sourceId, targetPosition } = cardAddEvent;\r\n    const cardToAdd = availableCards.find((c) => c.sourceId == sourceId);\r\n    const { activeLayout } = getState();\r\n    if (activeLayout && cardToAdd) {\r\n      const buf = getState().bufferLayout;\r\n      console.log(debug(buf));\r\n      activeLayout.setGridLayout(buf);\r\n      activeLayout?.addCard(cardToAdd, targetPosition);\r\n      actions.setActiveLayout(activeLayout);\r\n      // actions.setBufferLayout(activeLayout.layout);\r\n      console.log(cardToAdd);\r\n    }\r\n  }),\r\n  registerCardLoadFailure: thunk(\r\n    (actions, failedCard, { getState, getStoreState }) => {\r\n      console.log(\"Got card Register Load Failure at Layouts Model\");\r\n      console.log(failedCard);\r\n      const { activeLayout } = getState();\r\n      if (activeLayout) {\r\n        activeLayout.failCard(failedCard);\r\n      }\r\n      // if (activeLayout && cardToAdd) {\r\n      //   const buf = getState().bufferLayout;\r\n      //   console.log(debug(buf));\r\n      //   activeLayout.setGridLayout(buf);\r\n      //   activeLayout?.addCard(cardToAdd, targetPosition);\r\n      //   actions.setActiveLayout(activeLayout);\r\n      //   // actions.setBufferLayout(activeLayout.layout);\r\n      //   console.log(cardToAdd);\r\n      // }\r\n    }\r\n  ),\r\n  setBufferLayout: action((state, layouts) => {\r\n    console.log(\"setting buffer layout\");\r\n    console.log(layouts);\r\n    state.bufferLayout = layouts;\r\n    // state.tempLayout = layouts;\r\n  }),\r\n  setTempLayout: action((state, layouts) => {\r\n    console.log(\"setting buffer layout\");\r\n    console.log(layouts);\r\n    state.tempLayout = layouts;\r\n  }),\r\n  updateLayout: action((state, swap) => {\r\n    const old = state.activeLayout;\r\n    if (old) {\r\n      old.swapCard(swap);\r\n      console.log(old.layout);\r\n      state.activeLayout = old;\r\n    }\r\n  }),\r\n};\r\n\r\nexport default layoutsModel;\r\n","import { action, Action, ActionOn, actionOn, thunkOn, ThunkOn, thunk, Thunk } from \"easy-peasy\";\r\nimport { StoreModel } from \"./index\";\r\n\r\nexport interface LogModel{\r\n  //state\r\n  data: string[]\r\n\r\n  //requests\r\n    // onUpdate: ThunkOn<LogModel, never, StoreModel>\r\n  //setter\r\n  setData: Action<LogModel, string[]>\r\n\r\n}\r\n\r\nconst logModel: LogModel= {\r\n    //state\r\n    data: [],\r\n    \r\n    //requests\r\n\r\n    //setters\r\n    setData: action((state, data) => {\r\n    state.data = data\r\n    }),\r\n    //listeners\r\n    // onUpdate: thunkOn(\r\n    //     (actions, storeActions) =>\r\n    //         [\r\n\t// \t\t storeActions.samplesModel.loadSamples,\r\n\t// \t\t storeActions.samplesModel.setSamples\r\n    //         ],\r\n    //     (actions, target) => {\r\n\r\n\r\n    //     }\r\n    //   ),\r\n};\r\n\r\nexport default logModel;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let log = {\r\n// \tinfo: function info(message) {\r\n// \t\tconst callerInfo = getFileName(info.caller.name);\r\n// \t\tconsole.log(\r\n// \t\t\tnew Date() +\r\n// \t\t\t\t' ' +\r\n// \t\t\t\targuments.callee.name.toUpperCase() +\r\n// \t\t\t\t' ' +\r\n// \t\t\t\tcallerInfo.filename +\r\n// \t\t\t\t':' +\r\n// \t\t\t\tcallerInfo.line +\r\n// \t\t\t\t':' +\r\n// \t\t\t\tcallerInfo.column +\r\n// \t\t\t\t' ' +\r\n// \t\t\t\tinfo.caller.name +\r\n// \t\t\t\t'() ' +\r\n// \t\t\t\tmessage\r\n// \t\t);\r\n// \t},\r\n// };\r\n\r\n// function getFileName(caller) {\r\n//   const STACK_FUNC_NAME = new RegExp(/at\\s+((\\S+)\\s)?\\((\\S+):(\\d+):(\\d+)\\)/);\r\n// \tlet err = new Error();\r\n// \tError.captureStackTrace(err);\r\n// \tlet stacks = err.stack.split('\\n').slice(1);\r\n\r\n// \tlet callerInfo = null;\r\n// \tfor (let i = 0; i < stacks.length; i++) {\r\n// \t\tcallerInfo = STACK_FUNC_NAME.exec(stacks[i]);\r\n    \r\n// \t\tif (callerInfo[2] === caller) {\r\n// \t\t\treturn {\r\n// \t\t\t\tfilename: callerInfo[3],\r\n// \t\t\t\tline: callerInfo[4],\r\n// \t\t\t\tcolumn: callerInfo[5],\r\n// \t\t\t};\r\n// \t\t}\r\n// \t}\r\n\r\n// \treturn null;\r\n// }\r\n\r\n// function iWantToLog() {\r\n// \tlog.info('Testing my log');\r\n// }\r\n\r\n// iWantToLog();","import { PackNode } from \"@components/SampleTray/NewSampleTray/Packer\";\r\nimport RawSampleRow from \"@interfaces/RawSampleRow\";\r\nimport { mapRange } from \"@utils\";\r\nimport Konva from \"konva\";\r\n\r\nclass SampleData {\r\n  id!: string;\r\n  src!: string;\r\n  tags!: string[];\r\n  svgPath!: string;\r\n  filename!: string;\r\n  length!: number;\r\n  composition: string;\r\n  startTime: Date;\r\n  endTime: Date;\r\n  w: number;\r\n  h: number;\r\n  konvaObject: Konva.Path | undefined;\r\n  // node: PackNode | undefined;\r\n  fit: PackNode | undefined;\r\n\r\n  constructor(sampleDataRow: RawSampleRow) {\r\n    const {\r\n      filename,\r\n      tags,\r\n      composition,\r\n      starTime: start,\r\n      endTime: end,\r\n      hour,\r\n      svgPath,\r\n      length,\r\n    } = sampleDataRow;\r\n\r\n    const url = `${process.env.PUBLIC_URL}/Clips/` + filename;\r\n    const defaultStartTime = new Date(\"1995-12-17T03:24:00\");\r\n    const defaultEndTime = new Date(\"1995-12-17T03:24:01\");\r\n    this.id = filename;\r\n    this.src = url;\r\n    this.tags = tags.split(\",\");\r\n    this.startTime = defaultStartTime;\r\n    this.endTime = defaultEndTime;\r\n    this.composition = composition;\r\n    this.filename = filename;\r\n    this.svgPath = svgPath;\r\n    this.length = length;\r\n    this.konvaObject = undefined;\r\n    this.w = undefined;\r\n    this.h = undefined;\r\n    // this.node = undefined;\r\n    this.fit = undefined;\r\n  }\r\n\r\n  setPath = (path: string): void => {\r\n    this.svgPath = path;\r\n  };\r\n  calculateDimensions(containerWidth: number, rowHeight: number): void {\r\n    const margin = 0;\r\n    this.w = mapRange(this.length, 0, 6.5, 0 + margin, containerWidth - margin);\r\n    this.h = rowHeight;\r\n  }\r\n  // createKonvaObject() {\r\n  //   this.konvaObject = new Konva.Path({\r\n  //     x: this.fit.x,\r\n  //     y: this.fit.y,\r\n  //     data: this.svgPath,\r\n  //     fill: \"green\",\r\n  //     scale: {\r\n  //       x: 2,\r\n  //       y: 2,\r\n  //     },\r\n  //   });\r\n  // }\r\n}\r\nexport default SampleData;\r\n","import SampleData from \"@classes/SampleData\"\nimport RawSampleRow from \"@interfaces/RawSampleRow\";\nimport {randomElements} from \"@utils\"\nimport tags from \"./tags\";\n\nconst placeHolderSamplePaths = [\"DNB_BREAK_134-1.wav\", \"Samples/s1.wav\"]\nconst recitalrecordings = [\"RECORDINGS/Bach Move 2 v2.wav\", \"RECORDINGS/Bach Move 3 v2.wav\"]\n\n\nconst makeDefaultSamples = (count: number): SampleData[] =>{\n    const defaultSamples: SampleData[] = [];\n    // const defaultUrl = `${process.env.PUBLIC_URL}/Samples/s1.wav`\n    // const defaultUrl = `${process.env.PUBLIC_URL}/DNB_BREAK_134-1.wav`\n    const defaultStartTime = new Date(\"1995-12-17T03:24:00\")\n    const defaultEndTime = new Date(\"1995-12-17T03:24:01\")\n\n\n    for (let i = 0; i < count; i++) {\n        const sampleUrl = `${process.env.PUBLIC_URL}/`+randomElements(placeHolderSamplePaths, 1)[0]\n        const basicRow: RawSampleRow = {\n            composition:`placeHolderSample_${i}`,\n            starTime: \"1995-12-17T03:24:00\",\n            endTime: \"1995-12-17T03:24:01\",\n            tags: \"MR, FD\",\n            date: \"2021-09-24\",\n            hour: \"222332\",\n            svgPath: \"\",\n            length: 1.0,\n            filename: sampleUrl\n        }\n        const tagNames = randomElements(tags, 3)\n\n        const sampleD = new SampleData(basicRow)\n        defaultSamples.push(sampleD)\n    }\n    return defaultSamples\n}\n\nconst placeHolderSamples = makeDefaultSamples(30)\n\nexport default placeHolderSamples","import { action, Action, thunk, Thunk, thunkOn, ThunkOn } from \"easy-peasy\";\nimport History from \"@classes/History\";\nimport { Layouts } from \"react-grid-layout\";\nimport WaveFormBuilder from \"@classes/WaveFormBuilder\";\nimport SampleData from \"@classes/SampleData\";\nimport placeHolderSamples from \"@static/placeHolderSamples\";\nimport { StoreModel } from \"model\";\nimport WaveformData from \"waveform-data\";\nimport { actions } from \"react-table\";\nimport RawSampleRow from \"@interfaces/RawSampleRow\";\nimport Papa from \"papaparse\";\nimport { downloadBlob } from \"@utils\";\nimport analyzeClips from \"@static/analyzeClips\";\nexport interface SamplesModel {\n  //state\n  samples: SampleData[];\n  draggingSample: string;\n  //listeners\n\n  //thunks\n\n  //simple setters\n  setSamples: Action<SamplesModel, SampleData[]>;\n  setDraggingSample: Action<SamplesModel, string>;\n\n  onSetSamplesSheets: ThunkOn<SamplesModel, never, StoreModel>;\n  //proccessing\n  processSamples: Thunk<SamplesModel, never, StoreModel>;\n  loadSamples: Thunk<SamplesModel>;\n}\n\nconst samplesModel: SamplesModel = {\n  //state\n  samples: placeHolderSamples,\n  draggingSample: placeHolderSamples[0].id,\n  //listeners\n  onSetSamplesSheets: thunkOn(\n    (actions, storeActions) => storeActions.googleSheetsModel.setSamplesSheet,\n    (actions, target) => {\n      // console.log(target.payload);\n      const rawSampleRows = target.payload as RawSampleRow[];\n      if (analyzeClips) {\n        processSamples(rawSampleRows).then((samples) => {\n          actions.setSamples(samples);\n          const csv = Papa.unparse(samples);\n          downloadBlob(csv, \"test.csv\", \"text/csv;charset=utf-8;\");\n        });\n      } else {\n        const sampleDataArray = rawSampleRows.map((r) => new SampleData(r));\n        actions.setSamples(sampleDataArray);\n      }\n    }\n  ),\n  //processing\n  processSamples: thunk((actions, _, { getState }) => {\n    console.log(\"processing samples\");\n    const state = getState();\n    const { samples } = { ...state };\n    console.log(samples);\n    const processor = new WaveFormBuilder();\n    const processedSamples = samples.map((s) => processor.generateSVG(s));\n    Promise.allSettled(processedSamples).then((results) => {\n      const succesfulAnalaysisSamples: SampleData[] = [];\n      for (const result of results) {\n        if (result.status === \"fulfilled\") {\n          succesfulAnalaysisSamples.push(result.value);\n        }\n      }\n      actions.setSamples(succesfulAnalaysisSamples);\n    });\n    console.log(processedSamples);\n  }),\n  loadSamples: thunk((actions) => {\n    console.log(\"processing samples\");\n  }),\n  setSamples: action((state, samplesArray) => {\n    // console.log(\"setting samples\");\n    state.samples = samplesArray;\n  }),\n  setDraggingSample: action((state, id) => {\n    console.log(\"setting samples\");\n    state.draggingSample = id;\n  }),\n};\n\nexport default samplesModel;\n\nconst processSamples = (\n  sampleRows: RawSampleRow[],\n  max?: number\n): Promise<SampleData[]> => {\n  if (max) {\n    sampleRows = sampleRows.filter((r) => r.tags !== undefined).slice(max);\n  } else {\n    sampleRows = sampleRows.filter((r) => r.tags !== undefined);\n  }\n  const sampleDataArray = sampleRows.map((s) => new SampleData(s));\n  const processor = new WaveFormBuilder();\n  const processedSamples = sampleDataArray.map((s) => processor.generateSVG(s));\n  return Promise.allSettled(processedSamples).then((results) => {\n    const succesfulAnalaysisSamples: SampleData[] = [];\n    for (const result of results) {\n      if (result.status === \"fulfilled\") {\n        succesfulAnalaysisSamples.push(result.value);\n      }\n    }\n    return succesfulAnalaysisSamples;\n  });\n};\n","import appData, { AppDataModel } from \"./appModel\";\r\nimport compositonsModel, {CompositionsModel} from \"./ðŸŽ»compositionsModel\";\r\nimport googleSheetsModel, { GoogleSheetsModel } from \"./googleSheetsModel\";\r\nimport historyData, { HistoryModel } from \"./historyModel\";\r\nimport layoutsModel, { LayoutsModel } from \"./layoutsModel\";\r\nimport logModel, {LogModel} from \"./logModel\";\r\nimport samplesModel, { SamplesModel } from \"./samplesModel\";\r\n\r\n// https://codesandbox.io/s/easy-peasy-typescript-v3-riqbl?file=/src/model/todos.ts\r\n\r\nexport interface StoreModel {\r\n  appModel: AppDataModel;\r\n  historyModel: HistoryModel;\r\n  layoutsModel: LayoutsModel;\r\n  googleSheetsModel: GoogleSheetsModel;\r\n  samplesModel: SamplesModel; \r\n  compositionsModel: CompositionsModel;\r\n  logModel: LogModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  appModel: appData,\r\n  historyModel: historyData,\r\n  layoutsModel: layoutsModel,\r\n  googleSheetsModel: googleSheetsModel,\r\n  samplesModel: samplesModel,\r\n  compositionsModel: compositonsModel,\r\n  logModel: logModel, \r\n};\r\n\r\nexport default model;\r\n","import { createStore, action } from \"easy-peasy\";\r\nimport model from \"./model\";\r\nimport logger from \"redux-logger\";\r\n// const store = createStore(model);\r\n\r\nconst store = createStore(model, {\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: [\r\n    // logger\r\n  ],\r\n  // initialState: { commentsModel: { comments }, postsModel: { posts } },\r\n});\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  if (module.hot) {\r\n    module.hot.accept(\"./model\", () => {\r\n      store.reconfigure(model); // ðŸ‘ˆ Here is the magic\r\n    });\r\n  }\r\n}\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { StoreProvider } from \"easy-peasy\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}