{"version":3,"sources":["static/tracks.ts","hooks.tsx","components/UI/Section.tsx","static/appConfig.ts","static/canvasConfig.ts","static/theme.ts","components/SampleTray/NewSampleTray/CanvasItems/BasicSamplePath.tsx","components/SampleTray/NewSampleTray/CanvasItems/CollectionContainer.tsx","components/SampleTray/NewSampleTray/DialogBox.tsx","classes/Kosima.ts","utils.ts","components/SampleTray/NewSampleTray/CanvasItems/Layers/KosimaRender.tsx","classes/SampleCollection.ts","components/SampleTray/NewSampleTray/CanvasItems/CollectionNav.tsx","classes/Tag.ts","static/tags.ts","components/SampleTray/NewSampleTray/Packer.ts","components/SampleTray/NewSampleTray/rects.ts","components/SampleTray/NewSampleTray/CanvasItems/TagSelector.tsx","components/SampleTray/NewSampleTray/CanvasItems/Layers/TagsLayer.tsx","components/SampleTray/NewSampleTray/CanvasItems/SamplePath.tsx","components/SampleTray/NewSampleTray/CanvasItems/Layers/SampleLayer.tsx","components/SampleTray/NewSampleTray/CanvasItems/Layers/WidgetsLayer.tsx","components/SampleTray/NewSampleTray/CanvasItems/Navigation.tsx","components/SampleTray/NewSampleTray/Canvas.tsx","components/SampleTray/SampleTray.tsx","pages/Instrument.tsx","static/gridLayouts.ts","model/homeModel.ts","stores/homeStore.ts","components/FlexColumn.tsx","components/IntroModal.tsx","components/Home/ViewCard.tsx","components/Home/GridLayout.tsx","components/Home/Graphics/Video.tsx","components/Home/Widgets/TrackInfoWidget.tsx","components/Home/Widgets/ViolinWidget.tsx","components/Home/Widgets/WaveformWidget/SDFTest.ts","components/Home/Widgets/WaveformWidget/AudioForm.tsx","components/Home/Waveform3d.tsx","components/Home/Widgets/WaveformWidget.tsx","components/Home/Widgets/TitleWidget.tsx","components/Home/Player/Song.tsx","components/FlexRow.tsx","components/Home/Widgets/TrackItem/PlayPauseControls.tsx","components/Home/Player/Audio.tsx","components/Home/Widgets/TrackItem.tsx","components/Home/Widgets/RecitalWidgets.tsx","components/Home/Widgets/BigText.tsx","components/Home/Widgets/ThreeRemixes.tsx","components/Home/Widgets/ArrowWidget.tsx","components/Home/Widgets/OneRecitalTextWidget.tsx","components/Home/Widgets/RemixesWidget.tsx","components/Home/Widgets/ProjectInfo.tsx","components/Home/HomeWidgetGrid.tsx","components/AboutModal.tsx","components/ReturnButton.tsx","pages/Home.tsx","pages/SamplingTesting/RenderLoop.ts","pages/SamplingTesting/shaders.ts","pages/SamplingTesting/SamplingTesting.tsx","pages/CanvasGradient.tsx","enums.ts","IFrameValidator.ts","pages/Testing.tsx","App.tsx","reportWebVitals.ts","classes/CardData.ts","static/defaultLayouts.ts","classes/History.ts","model/appModel.ts","classes/WaveFormBuilder.ts","classes/ðŸŽ»CompositionData.ts","static/defaultCompositions.ts","model/ðŸŽ»compositionsModel.ts","static/cardDataSheetKey.ts","classes/ðŸ“‹GoogleSheetData.ts","model/googleSheetsModel.ts","model/historyModel.ts","classes/LayoutData.ts","model/layoutsModel.ts","model/logModel.ts","classes/SampleData.ts","static/placeHolderSamples.ts","model/samplesModel.ts","model/index.ts","store.ts","index.tsx"],"names":["anjaliImage","process","pacificImage","contourImage","anjaliTrack","pacificTrack","contourTrack","ysaeTrack","vVideo","tracks","artist","title","link","src","about","visualType","visual","playing","connections","target","description","category","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","playListHooks","useHomeActions","useHomeState","useApp","setAppMode","actions","appModeState","state","appMode","useState","setAppModeLocal","useEffect","console","log","usePlaylist","currentTrackState","currentTrack","setCurrentTrack","allAudioElems","useRef","setIsPlayingAction","setIsPlaying","isPlayingState","isPlaying","currentAudioRef","handleEnd","e","id","split","endedIndex","indexOf","filter","t","playTrack","elems","map","document","getElementById","current","forEach","audio","addEventListener","getTrackAudio","removeEventListener","track","element","play","pause","setCurrentTrackLocal","trackCategory","setTrackCategory","isRecital","setIsRecital","currentAudio","setCurrentAudio","currentDuration","setCurrentDuration","useCallback","node","duration","startingTrack","pauseTrack","useIsPlaying","useToggle","initialValue","value","setValue","useEventListener","eventName","handler","savedHandler","targetElement","window","eventListener","event","Section","React","forwardRef","ref","children","className","backgroundColor","column","padding","width","height","flexStatus","style","borderRadius","backdropFilter","backgroundBlur","appConfig","sampleHeight","longestSample","gridUnit","innerWidth","canvasConfig","startMode","sampleContainerWidth","sampleListWidth","sampleTagWidth","widgetWidth","widgetHeight","sampleCollectionGroupX","sampleCollectionRectHeight","innerHeight","theme","primary","primaryDark","primaryMedium","secondary","secondaryHover","primaryInactive","transparent","stroke","border","textDark","text","shadow","primaryFont","titleFont","bigFont","mediumFont","BasicSamplePath","memo","props","isHovered","x","y","sampleRef","h","w","draggable","fill","onMouseDown","onDragStart","onDragEnd","onMouseEnter","onDragMove","onMouseUp","svgPath","sample","scaleX","getGradient","tags","data","scaleY","strokeWidth","stop1","stop2","includes","CollectionContainer","sampleCollection","cornerRadius","name","samples","s","i","samplePath","key","DialogBox","open","setOpen","containerStyle","display","position","left","bottom","overflow","color","listener","el","contains","useOnClickOutside","dialogClass","classNames","hidden","ReactDOM","createPortal","Kosima","reaction","this","KosimaFolder","randomElements","arr","count","len","length","lookup","tmp","index","Math","random","push","mapRange","inMin","inMax","outMin","outMax","KosimaRender","kosima","setPopOverOpen","useImage","baseImage","setReaction","reactionImage","expressionImage","xPos","yPos","hUnit","eyeHeight","eyePos","groupRef","eyeOffset","setEyeOffset","circRef","onMouseLeave","to","easing","Konva","Easings","EaseOut","onMouseMove","bBox","getClientRect","newX","evt","pageX","newY","pageY","image","radius","SampleCollection","CollectionNav","numSamples","sampleCollections","containerGroupRef","c","groupProps","rectProps","activeCollection","Tag","Packer","gutter","root","used","blocks","n","block","findNode","splitNode","fit","right","down","packSamples","calculateDimensions","TagSelector","activeTags","tag","setCircleFill","circleProps","hovered","setHovered","EaseInOut","align","TagsLayer","removeTag","addTag","selectedTags","layerRef","opacity","withRadiusTags","allRadii","bigRadius","tagCircles","posX","cos","findPlace","posY","sin","asin","SamplePath","setRef","setisHovered","setabsolutePosition","isDragging","setIsDragging","gradient","fillPriority","absolutePosition","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","renderGhost","SampleLayer","sampleTrayGroupRef","setSampleToClone","addToCurrentCollection","dragLayerRef","sampleToClone","setHoveredId","setPlayingSample","stageY","sampleLayerRef","sampleLayerProps","onRectMouseDown","onRectMouseUp","filename","attrs","enriched","useMemo","intersect","setAttr","moveTo","toEnriched","drawSamples","r1","r2","WidgetsLayer","widgetContainerRef","timeLineRef","Array","from","keys","widgWidth","widgHeight","widgFill","groupX","groupY","trackGroupY","borderRectProps","a","rectX","widgets","NavItem","navItemStyle","onClick","Navigation","top","alignItems","margin","Canvas","samplesModel","stageContainerRef","sampleLayerWidth","packedSamples","packedRects","r","every","rows","list","Map","val","has","set","groupBy","f","size","packed","allTags","flatTags","reduce","prev","next","concat","getNumMatches","finalTags","get","defaultCollection1","slice","defaultCollection2","defaultCollection3","defaultCollection4","defaultCollection5","useLocalStore","action","toAddId","activeSamples","undefined","toClone","setActiveCollection","collectionName","availableTags","computed","tagToAdd","tagToRemove","hoveredId","playingSample","draggingId","popOverOpen","active","viewHeight","getBoundingClientRect","stageHeight","setStageHeight","setViewHeight","setStageY","max","min","mode","setDraggingId","playingId","devTools","stageProps","onWheel","preventDefault","deltaY","currentSample","stageNodeRef","container","useKeyboardShortcut","keyCode","disabled","draggingRef","containerHeight","sampleTrayGroupY","targY","targX","progressInterval","onProgress","played","playedSeconds","loaded","loadedSeconds","url","getChildren","array","valToFind","numMatches","j","SampleTray","_state","sampleTrayClass","tagFilter","Instrument","defaultLayout","remixLayout","aboutLayout","recitalLayout","homeModel","payload","currentTrackId","currentAudioElement","currentLayout","setCurrentLayout","l","homeStore","createStore","middleware","FlexColumn","justifyContent","flexDirection","Intro","zIndex","motion","div","variants","visible","transition","pointerEvents","animate","MenuItem","hoverRef","isHover","elementRef","useHover","fontSize","whileHover","scale","textShadow","textAlign","ViewCard","ResponsiveGridLayout","WidthProvider","Responsive","GridLayout","layout","cardContainerStyle","wrapped","layouts","lg","md","sm","xxs","trueRowHeight","minWidth","minHeight","onWidthChange","isDraggable","useCSSTransforms","compactType","rowHeight","cols","containerPadding","verticalCompact","Video","containerRef","videoRef","scene","THREE","background","camera","renderer","alpha","setClearColor","setSize","body","appendChild","domElement","controls","OrbitControls","gridHelper","add","z","updateProjectionMatrix","render","geometry","videoTexture","format","setAttribute","material","uniforms","keyColor","similarity","smoothness","vertexShader","fragmentShader","cube","stats","Stats","dom","gui","GUI","addColor","onChange","v","OBJLoader","load","obj","curch","getObjectByName","requestAnimationFrame","update","muted","TrackInfoWidget","showVideo","setShowVideo","Info","InfoContainerStyle","marginTop","ArtistImage","normal","highlight","transform","setImage","inTransition","img","objectFit","objectPosition","Violin","nodes","useGLTF","matcapTexture","useLoader","TextureLoader","group","V","useFrame","rotation","attach","matcap","ViolinWidget","fallback","Loader","OrthographicCamera","makeDefault","zoom","useProgress","progress","errors","item","total","opts","shaderArgs","uTime","uColor","Vector3","uShade","ColorMaterial","time","Color","ShaderMaterial","extend","AudioForm","pathRef","points","ceil","floor","Vector2","useAsset","fetch","res","json","latheGeo","LatheGeometry","subSurf","SubsurfaceScatteringShader","UniformsUtils","clone","imgTexture","thicknessTexture","onPointerDown","args","tempObject","Object3D","Grid","meshRef","audioElem","currentTime","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","Waveform3d","cameraRef","shadows","dpr","intensity","Geo","clock","getElapsedTime","paused","WaveformWidget","items","dashStyle","TitleWidget","fontWeight","Song","songName","songArtist","FlexRow","PlayPauseControls","handleClick","PlayButton","xmlns","viewBox","d","PauseButton","Audio","songContainerClass","padMin","padMax","paddingLeft","paddingRight","paddingTop","paddingBottom","TrackItem","ease","repeat","Infinity","repeatType","fontFamily","marginRight","RecitalWidgets","recitalParts","BigText","delayChildren","ThreeRemixes","Arrow","Scene","ArrowWidget","enableRotate","OneRecitalTextWidget","RemixesWidget","remixParts","ProjectInfo","toggle","AboutInfo","HomeWidgetGrid","AudioContext","activeTrack","curLayout","setCurLayout","AboutModal","borderBottom","ReturnButton","translateY","Home","store","RenderLoop","cb","fps","currentFps","isActive","msLastFrame","totalTime","msFpsLimit","run","performance","now","Number","isNaN","msDt","dt","vs","GLSL","fs","SamplingTesting","wrapperRef","canvasRef","buttonRef","htmlImages","setImages","urls","callback","images","imagesToLoad","onImageLoad","ii","loadImage2","loadImages","textureCanvas","getElementsByClassName","firstChild","getContext","cvs","initGl","gl","program","programInfo","twgl","bufferInfo","initVBO","textCanv","canvContext","texture","createTexture","bindTexture","TEXTURE_2D","level","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","createCanvasTexture","textures","makeTexture","unit","getUniforms","iResolution","iTime","matCap","cloudNoise","canvas","uniform2f","uniform1i","activeTexture","TEXTURE0","TEXTURE1","TEXTURE2","RL","tInMs","uniform1f","updateTexture","start","Image","onload","vertexShaderSrc","fragShaderSrc","clearColor","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","trim","compileShader","getShaderParameter","COMPILE_STATUS","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","error","getShaderInfoLog","write","enable","DEPTH_TEST","numComponents","names","us","getUniformLocation","Object","fromEntries","generateMipmap","_","toString","DropCategory","DragSource","InteractionType","AppMode","Composition","IFrameLoadError","IFrameLoadWarning","CanvasGradient","setAnchorPoints","secondRectRef","rectRef","rect","anchorsPos","stops","rectWidth","col","numPoints","innerRadius","outerRadius","shadowColor","shadowBlur","shadowOpacity","Testing","App","fetchCardDataGoogleSheetThunk","googleSheetsModel","fetchAppGoogleSheet","processCompositions","compositionsModel","fetchCompositionSheet","fetchCompositionsSheet","fetchSamples","fetchSamplesSheet","toggleSampleTrayIsActive","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","IFrameValidator","warnings","xoCheckArray","errorsArray","test","contentWindow","message","CROSS_ORIGIN","checkForXO","malformedUrlCheckArray","str","warningsArray","RegExp","MALFORMED_URL","validURL","CardData","row","added","sourceId","author","interaction","validator","failed","Date","b","defaultGridLayoutArray","static","defaultLayouts","xs","JSON","stringify","History","events","currentStep","appModel","availableCards","activeCards","defaultGridLayout","DISPLAY","history","manageViewModeChange","thunk","viewModeEnum","EDIT","CYCLE","toggleViewMode","getState","layoutArray","setAvailableCards","cardDataArray","setActiveCards","onCardSheetLoadSuccess","actionOn","storeActions","setAppGoogleSheetData","cards","getSheetRows","sourceid","onSetActiveLayout","thunkOn","layoutsModel","setActiveLayout","activeSources","sources","availableCardsUpdated","card","setActive","registerCardLoadFailure","failedCard","getStoreState","failedId","newCards","fail","onSwapCardContent","swapCardContent","targetId","newSource","find","debug","onUndoHistory","historyModel","setCurrentHistory","onRedoHistory","WaveFormBuilder","collectSamplePoints","sampleDuration","svgViewBoxWidth","channel1","channel","valueAtTime","at_time","maxSampleVal","max_sample","percentageComplete","xValue","yValue","timePointValue","round","topPoints","p","reversePoints","reverse","newPoint","allPoints","SVGCatmullRomSpline","toPath","audioContext","getAudio","response","arrayBuffer","buffer","options","audio_context","array_buffer","Promise","resolve","reject","WaveformData","createFromAudio","err","waveform","original","pathData","setPath","catch","CompositionData","waveFormData","defaultCompositions","bachMovement1","genearteDefaultCompositions","compositions","processor","analysisResults","allSettled","results","succesfulAnalaysisCompositions","result","comp","status","setCompositions","downloadAnalysis","samplesArray","toJSON","csv","Papa","unparse","Blob","type","cardDataSheetKey","sheet_number","GoogleSheetData","sheetId","sheets","sheetIndex","apikey","GoogleSpreadsheet","useApiKey","sheetPromiseArray","loadInfo","sheetsByIndex","myTest","getRows","layoutDataGoogleSheet","cardDataGoogleSheet","appGoogleSheet","samplesSheet","compositionsSheet","publicSheetUrl","parseSheet","setCompositionsSheet","setSamplesSheet","prototype","loadSheets","all","responseData","studentsGoogleSheet","googleSheet","setCardDataGoogleSheet","sheet","setLayoutDataGoogleSheet","compositionSheet","complete","parse","download","header","file","endsWith","undoHistory","undoIt","undo","redoIt","redo","addEditHistory","addEditEvent","LayoutData","timestamp","startLayout","swapInfo","entries","k","toRemove","toAdd","pos","newItem","toFail","newGridLayout","activeLayout","externalLayouts","bufferLayout","tempLayout","onSetAppGoogleSheetData","dLayout","setExternalLayouts","setBufferLayout","onToggleViewModeListener","buf","newActiveLayout","newLayoutArray","getStoreActions","swapCard","deleteCard","cardToDelete","removeCard","addCard","cardAddEvent","targetPosition","cardToAdd","setGridLayout","failCard","setTempLayout","updateLayout","swap","old","logModel","setData","SampleData","sampleDataRow","composition","startTime","endTime","konvaObject","starTime","hour","defaultStartTime","defaultEndTime","containerWidth","placeHolderSamplePaths","placeHolderSamples","defaultSamples","sampleUrl","basicRow","date","sampleD","makeDefaultSamples","draggingSample","onSetSamplesSheets","rawSampleRows","sampleDataArray","setSamples","processSamples","processedSamples","generateSVG","succesfulAnalaysisSamples","loadSamples","setDraggingSample","model","appData","historyData","compositonsModel"],"mappings":"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","file":"static/js/main.0aa6d25e.chunk.js","sourcesContent":["import { Track } from \"@interfaces/Track\";\r\n\r\nconst src = `${process.env.PUBLIC_URL}/overandunder (infinity).wav`;\r\n\r\nconst anjaliImage = `${process.env.PUBLIC_URL}/Headshots/Diaspoura.jpg`;\r\nconst pacificImage = `${process.env.PUBLIC_URL}/Headshots/Pacific.jpg`;\r\nconst contourImage = `${process.env.PUBLIC_URL}/Headshots/Contour.jpg`;\r\n\r\nconst anjaliTrack = `${process.env.PUBLIC_URL}/Tracks/1.wav`;\r\nconst pacificTrack = `${process.env.PUBLIC_URL}/Tracks/overandunder (infinity).mp3`;\r\nconst contourTrack = `${process.env.PUBLIC_URL}/Tracks/Kontour_Remix_16.mp3`;\r\nconst bachTrack = `${process.env.PUBLIC_URL}/Tracks/Bach Mov 2.wav`;\r\nconst bartokTrack = `${process.env.PUBLIC_URL}/Tracks/Bartok Mov 1.wav`;\r\nconst ysaeTrack = `${process.env.PUBLIC_URL}/Tracks/Ysaye_AUDIO.mp3`;\r\n\r\n// const pacificAbout = `It's been a while since I've had a chance to experiment with sampling, and to be honest my sound as of late has been geared to more of an analog/live nature, so it was very interesting getting back into the more electronic sound. I'm finding my new setup is a lot more equipped for the task than I was aware of. I feel like I landed on a nice balance of electronic and live/acoustic with this one. Going through the files I found myself wanting to keep their integrity as much as possible, and as a result found myself playing with very subtle pitch corrections, and spending time finding phrases and bits that felt organic in reference to a melody I wrote on rhodes piano. Pulling samples from two completely different pieces was a really interesting experiment. I found YsaÃ©'s \"Ballade\" and BartÃ³k's \"Presto\" to have the most favorable parts for the comp. Their usage of such abstract melody and the players spotless technique made them resonate in a way that gave me all the inspiration I needed to write the progression. Towards the end I tried my hand at a solo using only phrasing from the violin audio. Although the overall placement of the violin alongside the other instruments in the piece throughout tends to be a more supportive role, I wanted to give it a way to stand out. It never fails to blow my mind when creating circumstances around the musical process produces such beautiful and bizarre results. I feel I may have never attempted such a thing, had this opportunity not been present. This will most certainly have lasting effects on my creative process.`;\r\nconst pacificAbout = `Going through the files I found myself wanting to keep their integrity as much as possible, and as a result found myself playing with very subtle pitch corrections, and spending time finding phrases and bits that felt organic in reference to a melody I wrote on rhodes piano. Pulling samples from two completely different pieces was a really interesting experiment. I found YsaÃ©'s \"Ballade\" and BartÃ³k's \"Presto\" to have the most favorable parts for the comp. Their usage of such abstract melody and the players spotless technique made them resonate in a way that gave me all the inspiration I needed to write the progression. Towards the end I tried my hand at a solo using only phrasing from the violin audio. Although the overall placement of the violin alongside the other instruments in the piece throughout tends to be a more supportive role, I wanted to give it a way to stand out. It never fails to blow my mind when creating circumstances around the musical process produces such beautiful and bizarre results. I feel I may have never attempted such a thing, had this opportunity not been present. This will most certainly have lasting effects on my creative process.`;\r\n\r\nconst vVideo = `${process.env.PUBLIC_URL}/Headshots/ROTOSCOPE_TEST_1.mp4`;\r\nconst about =\r\n  \"*A young Jeronimo gets a fly caught in his eye and spends the week at home. Each morning he wakes, left eye patched and crusted shut with pus, to the sound of parents knocking at the door with a fresh set of tweezers, towels, and medic grade eye solution. He lies in bed struggling to open his left eye as he dreads the coming pry of the lid for removal of yet another fly limb. These songs track Jeronimo's journey back to dual-eyed sight*\";\r\n\r\nconst tracks: Track[] = [\r\n  {\r\n    artist: \"Diaspoura\",\r\n    title: \"Diaspoura Track\",\r\n    link: \"https://diaspoura.bandcamp.com/\",\r\n    src: anjaliTrack,\r\n    about: about,\r\n    visualType: \"image\",\r\n    visual: anjaliImage,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"YsaÃ©\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"remix\",\r\n  },\r\n  {\r\n    artist: \"Pacific Yew\",\r\n    title: \"overandunder (infinity)\",\r\n    link: \"https://nomad1.bandcamp.com/\",\r\n    src: pacificTrack,\r\n    about: pacificAbout,\r\n    visualType: \"image\",\r\n    visual: pacificImage,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"YsaÃ©\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"remix\",\r\n  },\r\n  {\r\n    artist: \"Contour\",\r\n    title: \"Revolving Melody\",\r\n    link: \"https://diaspoura.bandcamp.com/\",\r\n    src: contourTrack,\r\n    about:\r\n      \"The way i approached the track was finding a melodic section of one of the pieces to build around to create a full piece that plays with repetition as a vehicle of composition while also facilitating space for improvisation. I chose the melodia movement of the BartÃ³k piece because the balance of dissonance/harmony in that particular one stood out to me. I used delay and looping to kind of simulate the idea of an ensemble playing the section i chose and play with the intersection of production/affectation and composing in the traditional sense and then worked from there.\",\r\n    visualType: \"image\",\r\n    visual: contourImage,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"YsaÃ©\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"remix\",\r\n  },\r\n  {\r\n    artist: \"Vivek Menon\",\r\n    title: \"BartÃ³k\",\r\n    // src: bartokTrack,\r\n    src: ysaeTrack,\r\n    about: \"about BartÃ³k\",\r\n    visualType: \"video\",\r\n    visual: vVideo,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"YsaÃ©\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"recital\",\r\n  },\r\n  {\r\n    artist: \"Vivek Menon\",\r\n    title: \"Bach\",\r\n    src: ysaeTrack,\r\n    // src: bachTrack,\r\n    about: \"about Bach\",\r\n    visualType: \"video\",\r\n    visual: vVideo,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"YsaÃ©\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"recital\",\r\n  },\r\n  {\r\n    artist: \"Vivek Menon\",\r\n    title: \"YsaÃ©\",\r\n    src: ysaeTrack,\r\n    about: \"about YsaÃ©\",\r\n    visualType: \"video\",\r\n    visual: vVideo,\r\n    playing: false,\r\n    connections: [\r\n      {\r\n        target: \"Bach\",\r\n        description: \"Connects in this way\",\r\n      },\r\n    ],\r\n    category: \"recital\",\r\n    // movements: {}\r\n  },\r\n];\r\n\r\nexport default tracks;\r\n","// eslint-disable-next-line filenames/match-exported\r\nimport React, {\r\n  EffectCallback,\r\n  useCallback,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport { StoreModel } from \"./model\";\r\nimport { ActionCreator, createTypedHooks } from \"easy-peasy\";\r\nimport { useArray } from \"react-hanger\";\r\n\r\nconst typedHooks = createTypedHooks<StoreModel>();\r\n\r\n// We export the hooks from our store as they will contain the\r\n// type information on them\r\n// see https://easy-peasy.vercel.app/docs/api/use-store-actions.html for more on store hooks\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\n\r\nconst playListHooks = createTypedHooks<HomeModel>();\r\nexport const useHomeActions = playListHooks.useStoreActions;\r\nexport const useHomeDispatch = playListHooks.useStoreDispatch;\r\nexport const useHomeState = playListHooks.useStoreState;\r\n\r\ninterface useAppProps {\r\n  setAppMode: ActionCreator<SSAppMode>;\r\n  appMode: SSAppMode;\r\n}\r\nexport function useApp(): useAppProps {\r\n  const setAppMode = useHomeActions((actions) => actions.setAppMode);\r\n  const appModeState = useHomeState((state) => state.appMode);\r\n  const [appMode, setAppModeLocal] = useState(appModeState);\r\n  useEffect(() => {\r\n    console.log(appModeState);\r\n    setAppModeLocal(appModeState);\r\n  }, [appModeState]);\r\n  return {\r\n    setAppMode,\r\n    appMode,\r\n  };\r\n}\r\n//USE PLAYLIST\r\n\r\ninterface UsePlaylistProps {\r\n  currentTrack: Track;\r\n  setCurrentTrack: ActionCreator<string>;\r\n  playTrack: (Track) => void;\r\n  pauseTrack: (Track) => void;\r\n  isPlaying: boolean;\r\n  currentAudioRef: React.MutableRefObject<HTMLAudioElement>;\r\n  currentAudio: HTMLAudioElement;\r\n  currentDuration: number;\r\n  trackCategory: TrackCategory;\r\n  isRecital: boolean;\r\n  startingTrack: Track;\r\n}\r\n\r\nexport function usePlaylist(): UsePlaylistProps {\r\n  const currentTrackState = useHomeState((state) => state.currentTrack);\r\n  const setCurrentTrack = useHomeActions((actions) => actions.setCurrentTrack);\r\n  const allAudioElems = useRef<HTMLAudioElement[]>();\r\n  const setIsPlayingAction = useHomeActions((actions) => actions.setIsPlaying);\r\n  const isPlayingState = useHomeState((state) => state.isPlaying);\r\n  const currentAudioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  const handleEnd = (e: Event) => {\r\n    console.log(e.target);\r\n    const targ = e.target as HTMLAudioElement;\r\n    const title = targ.id.split(\"_\")[1];\r\n    const endedIndex = tracks.indexOf(\r\n      tracks.filter((t) => t.title === title)[0]\r\n    );\r\n    playTrack(tracks[endedIndex + 1]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const elems = tracks\r\n      .map((t) => \"audio_\" + t.title)\r\n      .map((id) => document.getElementById(id) as HTMLAudioElement)\r\n      .filter((e) => e !== null);\r\n\r\n    allAudioElems.current = elems;\r\n    allAudioElems.current.forEach((audio) => {\r\n      audio.addEventListener(\"ended\", handleEnd);\r\n    });\r\n    currentAudioRef.current = getTrackAudio(currentTrackState);\r\n    return () => {\r\n      allAudioElems.current.forEach((audio) => {\r\n        audio.removeEventListener(\"ended\", handleEnd);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const playTrack = (track: Track) => {\r\n    if (allAudioElems.current) {\r\n      allAudioElems.current.forEach((element) => {\r\n        if (element.id === \"audio_\" + track.title) {\r\n          // if (track.)\r\n          element.play();\r\n        } else {\r\n          element.pause();\r\n        }\r\n      });\r\n    }\r\n    setCurrentTrack(track.title);\r\n    setIsPlayingAction(true);\r\n  };\r\n\r\n  const pauseTrack = (track: Track) => {\r\n    if (allAudioElems.current) {\r\n      allAudioElems.current.forEach((element) => {\r\n        if (element.id === \"audio_\" + track.title) {\r\n          element.pause();\r\n        }\r\n      });\r\n    }\r\n    // setCurrentTrack(track.title);\r\n    setIsPlayingAction(false);\r\n  };\r\n\r\n  const [currentTrack, setCurrentTrackLocal] = useState(currentTrackState);\r\n  const [trackCategory, setTrackCategory] = useState(\r\n    currentTrackState.category\r\n  );\r\n  const [isRecital, setIsRecital] = useState(\r\n    currentTrackState.category === \"recital\"\r\n  );\r\n  const [currentAudio, setCurrentAudio] = useState(\r\n    getTrackAudio(currentTrackState)\r\n  );\r\n  // const currentTrackCategory = currentTrackState.category;\r\n  const [currentDuration, setCurrentDuration] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const onRefChange = useCallback((node) => {\r\n    if (node === null) {\r\n      // DOM node referenced by ref has been unmounted\r\n    } else {\r\n      // DOM node referenced by ref has changed and exists\r\n    }\r\n  }, []); // adjust deps\r\n  // const curentAudioRef = () =>{getTrackAudio()}\r\n\r\n  useEffect(() => {\r\n    // console.log(currentTrackState);\r\n    setCurrentTrackLocal(currentTrackState);\r\n    setTrackCategory(currentTrackState.category);\r\n    setIsRecital(currentTrack.category === \"recital\");\r\n    // setCurrentAudio(getTrackAudio(currentTrackState));\r\n    setCurrentAudio(getTrackAudio(currentTrack));\r\n    // setCurrentDuration(currentAudio.duration);\r\n    currentAudioRef.current = getTrackAudio(currentTrack);\r\n    if (currentAudioRef.current) {\r\n      setCurrentDuration(currentAudioRef.current.duration);\r\n    }\r\n  }, [currentTrackState]);\r\n\r\n  useEffect(() => {\r\n    // console.log(currentTrackState);\r\n    setIsPlaying(isPlayingState);\r\n  }, [isPlayingState]);\r\n\r\n  const startingTrack = tracks[0];\r\n  return {\r\n    currentTrack,\r\n    setCurrentTrack,\r\n    playTrack,\r\n    pauseTrack,\r\n    isPlaying,\r\n    currentAudioRef,\r\n    currentAudio,\r\n    currentDuration,\r\n    trackCategory,\r\n    isRecital,\r\n    startingTrack,\r\n  };\r\n}\r\n\r\nexport const useIsPlaying = (track: Track) => {\r\n  const currentTrackState = useHomeState((state) => state.currentTrack);\r\n  const [isPlaying, setIsPlaying] = useState(\r\n    currentTrackState.title === track.title\r\n  );\r\n  useEffect(() => {\r\n    if (track.title === currentTrackState.title) {\r\n      setIsPlaying(true);\r\n    } else {\r\n      setIsPlaying(false);\r\n    }\r\n  }, [currentTrackState]);\r\n  return isPlaying;\r\n};\r\n\r\nconst getTrackAudio = (track: Track): HTMLMediaElement => {\r\n  return document.getElementById(\"audio_\" + track.title) as HTMLMediaElement;\r\n};\r\n\r\nexport function useToggle(initialValue: boolean): [boolean, () => void] {\r\n  const [value, setValue] = useState<boolean>(initialValue);\r\n\r\n  const toggleValue = () => setValue(!value);\r\n\r\n  return [value, toggleValue];\r\n}\r\n\r\nexport { useArray };\r\n\r\nconst test = \"test\";\r\n\r\nimport { RefObject, useEffect } from \"react\";\r\nimport { HomeModel, SSAppMode } from \"model/homeModel\";\r\nimport { Track, TrackCategory } from \"@interfaces/Track\";\r\nimport tracks from \"@static/tracks\";\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent;\r\n\r\nexport function useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current;\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(`mousedown`, listener);\r\n    document.addEventListener(`touchstart`, listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener);\r\n      document.removeEventListener(`touchstart`, listener);\r\n    };\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler]);\r\n}\r\n\r\n// export function useAppMode()\r\n\r\ntype TStatus = \"IDLE\" | \"PROCESSING\" | \"ERROR\" | \"SUCCESS\";\r\n\r\nexport function useAsyncTask<T extends any[], R = any>(\r\n  task: (...args: T) => Promise<R>\r\n) {\r\n  const [status, setStatus] = useState<TStatus>(\"IDLE\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const run = useCallback(async (...arg: T) => {\r\n    setStatus(\"PROCESSING\");\r\n    try {\r\n      const resp: R = await task(...arg);\r\n      setStatus(\"SUCCESS\");\r\n      return resp;\r\n    } catch (error) {\r\n      let message = error?.response?.data?.error?.message || error.message;\r\n      setMessage(message);\r\n      setStatus(\"ERROR\");\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  const reset = useCallback(() => {\r\n    setMessage(\"\");\r\n    setStatus(\"IDLE\");\r\n  }, []);\r\n\r\n  return {\r\n    run,\r\n    status,\r\n    message,\r\n    reset,\r\n  };\r\n}\r\n\r\n// import { useEffect, useReducer, useRef } from \"react\";\r\n\r\ninterface State<T> {\r\n  data?: T;\r\n  error?: Error;\r\n}\r\n\r\ntype Cache<T> = { [url: string]: T };\r\n\r\n// discriminated union type\r\ntype Action<T> =\r\n  | { type: \"loading\" }\r\n  | { type: \"fetched\"; payload: T }\r\n  | { type: \"error\"; payload: Error };\r\n\r\nexport function useFetch<T = unknown>(\r\n  url?: string,\r\n  options?: RequestInit\r\n): State<T> {\r\n  const cache = useRef<Cache<T>>({});\r\n\r\n  // Used to prevent state update if the component is unmounted\r\n  const cancelRequest = useRef<boolean>(false);\r\n\r\n  const initialState: State<T> = {\r\n    error: undefined,\r\n    data: undefined,\r\n  };\r\n\r\n  // Keep state logic separated\r\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\r\n    switch (action.type) {\r\n      case \"loading\":\r\n        return { ...initialState };\r\n      case \"fetched\":\r\n        return { ...initialState, data: action.payload };\r\n      case \"error\":\r\n        return { ...initialState, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    // Do nothing if the url is not given\r\n    if (!url) return;\r\n\r\n    const fetchData = async () => {\r\n      dispatch({ type: \"loading\" });\r\n\r\n      // If a cache exists for this url, return it\r\n      if (cache.current[url]) {\r\n        dispatch({ type: \"fetched\", payload: cache.current[url] });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(url, options);\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n\r\n        const data = (await response.json()) as T;\r\n        cache.current[url] = data;\r\n        if (cancelRequest.current) return;\r\n\r\n        dispatch({ type: \"fetched\", payload: data });\r\n      } catch (error) {\r\n        if (cancelRequest.current) return;\r\n\r\n        dispatch({ type: \"error\", payload: error as Error });\r\n      }\r\n    };\r\n\r\n    void fetchData();\r\n\r\n    // Use the cleanup function for avoiding a possibly...\r\n    // ...state update after the component was unmounted\r\n    return () => {\r\n      cancelRequest.current = true;\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [url]);\r\n\r\n  return state;\r\n}\r\n\r\nexport default useFetch;\r\n\r\n/**\r\n * Hook to get the width of a container\r\n */\r\nexport function useSize() {\r\n  const [rect, setRect] = useState(null);\r\n  const resizer = new ResizeObserver((entries) => {\r\n    entries && setRect(entries[0].contentRect);\r\n  });\r\n  const ref = useCallback((node) => {\r\n    if (node !== null) {\r\n      resizer.observe(node);\r\n      setRect(node.getBoundingClientRect());\r\n    }\r\n  }, []);\r\n  return [rect, ref];\r\n}\r\n\r\nfunction useEffectOnce(effect: EffectCallback) {\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(effect, []);\r\n}\r\n\r\nexport function useHover<T extends HTMLElement = HTMLElement>(\r\n  elementRef: RefObject<T>\r\n): boolean {\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  const handleMouseEnter = () => setValue(true);\r\n  const handleMouseLeave = () => setValue(false);\r\n\r\n  useEventListener(\"mouseenter\", handleMouseEnter, elementRef);\r\n  useEventListener(\"mouseleave\", handleMouseLeave, elementRef);\r\n\r\n  return value;\r\n}\r\n\r\nfunction useEventListener<T extends HTMLElement = HTMLDivElement>(\r\n  eventName: keyof WindowEventMap | string, // string to allow custom event\r\n  handler: (event: Event) => void,\r\n  element?: RefObject<T>\r\n) {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef<(event: Event) => void>();\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window;\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return;\r\n    }\r\n\r\n    // Update saved handler if necessary\r\n    if (savedHandler.current !== handler) {\r\n      savedHandler.current = handler;\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener = (event: Event) => {\r\n      // eslint-disable-next-line no-extra-boolean-cast\r\n      if (!!savedHandler?.current) {\r\n        savedHandler.current(event);\r\n      }\r\n    };\r\n\r\n    targetElement.addEventListener(eventName, eventListener);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element, handler]);\r\n}\r\n\r\n\r\ninterface WindowSize {\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport function useWindowSize(): WindowSize {\r\n  const [windowSize, setWindowSize] = useState<WindowSize>({\r\n    width: 0,\r\n    height: 0,\r\n  })\r\n\r\n  const handleSize = () => {\r\n    setWindowSize({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    })\r\n  }\r\n\r\n  useEventListener('resize', handleSize)\r\n\r\n  // Set size at the first client-side load\r\n  useLayoutEffect(() => {\r\n    handleSize()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return windowSize\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport {Pane} from \"evergreen-ui\";\r\nimport \"@css/Section.scss\";\r\n\r\ninterface SectionProperties{\r\n  children: JSX.Element | JSX.Element[];\r\n  className?: string;\r\n  backgroundColor?: string\r\n  column?: boolean; \r\n  padding?: string;\r\n  width?: string | number;\r\n  height?: string | number;\r\n  backgroundBlur?: boolean;\r\n}\r\n// const Component = React.forwardRef<RefType, PropsType>((props, ref) => {\r\n// eslint-disable-next-line react/display-name\r\nconst Section = React.forwardRef<HTMLDivElement, SectionProperties>(({children, className, backgroundColor, column, padding, width, height, backgroundBlur}, ref) => {\r\n  const flexStatus = column?\"flex-column \":\"flex-row \"\r\n  const style = {\r\n    backgroundColor: backgroundColor??\"rgba(0,0,0,0)\",\r\n    padding: padding,\r\n    borderRadius: \"1em\",\r\n    width: width??\"100%\", \r\n    height: height??\"100%\",\r\n    backdropFilter: backgroundBlur?\"blur(10px)\":\"\",\r\n  }\r\n  return(\r\n    <div className = {\"ui-section \" + flexStatus + className??\"\"}style = {style} ref = {ref}>\r\n    {/* <Pane ref = {ref} className = {\"ui-section \" + flexStatus + className??\"\"}width = {\"100%\"} height = {\"100%\"} backgroundColor = {backgroundColor??\"lightgrey\"} padding = {padding??\"1em\"} borderRadius = {\"1em\"}> */}\r\n        {children} \r\n    {/* </Pane> */}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Section\r\n","export interface AppConfig {\r\n  sampleHeight: number;\r\n  longestSample: number;\r\n}\r\n\r\nconst appConfig = {\r\n  sampleHeight: 40,\r\n  longestSample: 5,\r\n};\r\n\r\nexport default appConfig;\r\n","import { AppMode } from \"@components/SampleTray/NewSampleTray/Canvas\";\r\n\r\ninterface CanvasConfig {\r\n  startMode: AppMode;\r\n  sampleContainerWidth: number;\r\n  sampleListWidth: number;\r\n  sampleTagWidth: number;\r\n  widgetWidth: number;\r\n  widgetHeight: number;\r\n  sampleCollectionGroupX: number;\r\n  sampleCollectionRectHeight: number;\r\n}\r\n\r\nconst gridUnit = window.innerWidth / 12;\r\nconst canvasConfig: CanvasConfig = {\r\n  startMode: \"samples\",\r\n  sampleContainerWidth: gridUnit * 2,\r\n  sampleListWidth: gridUnit * 5,\r\n  sampleTagWidth: gridUnit * 4,\r\n  widgetWidth: 300,\r\n  widgetHeight: 300,\r\n  sampleCollectionGroupX: 50,\r\n  sampleCollectionRectHeight: window.innerHeight - 100,\r\n};\r\n\r\nexport default canvasConfig;\r\n","export interface Theme {\r\n  primary: string;\r\n  primaryInactive: string;\r\n  primaryMedium: string;\r\n  secondary: string;\r\n  secondaryHover: string;\r\n  stroke: string;\r\n  transparent: string;\r\n  borderRadius: number;\r\n  textDark: string;\r\n  shadow: string;\r\n  primaryFont: string;\r\n  bigFont: string;\r\n  mediumFont: string;\r\n  titleFont: string;\r\n}\r\n\r\nconst theme = {\r\n  primary: \"#9e9e9e\",\r\n  primaryDark: \"#1f1f1f\",\r\n  primaryMedium: \"rgba(100, 100, 100, 255)\",\r\n  secondary: \"#fff200\",\r\n  secondaryHover: \"#b38900\",\r\n  primaryInactive: \"#4c4c4c\",\r\n  transparent: \"#0000\",\r\n  stroke: \"rgba(0,0,0,0)\",\r\n  border: \"2px solid black\",\r\n  borderRadius: 10,\r\n  textDark: \"black\",\r\n  text: \"white\",\r\n  shadow: \"5px 5px 15px 5px #000000\",\r\n\r\n  // primaryFont: \"Nunito\",\r\n  primaryFont: \"NeueMetana-Bold\",\r\n  titleFont: \"16rem\",\r\n  bigFont: \"3.5vw\",\r\n\r\n  mediumFont: \"2.5vw\",\r\n};\r\n\r\nexport default theme;\r\n","import Konva from \"konva\";\r\nimport SampleData from \"@classes/SampleData\";\r\nimport { Group, Layer, Path, Rect, Stage, Text, Circle } from \"react-konva\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { groupBy, mapRange } from \"@utils\";\r\nimport React, { MutableRefObject, RefObject, useRef, useState } from \"react\";\r\nimport { PathConfig } from \"konva/lib/shapes/Path\";\r\n\r\nexport interface BasicSample extends PathConfig {\r\n  sample: SampleData;\r\n  setRef?: (ref: RefObject<Konva.Path>) => void;\r\n  // onDragMove: (e: KonvaEventObject<DragEvent>) => void;\r\n  // onDragStart: (e: KonvaEventObject<DragEvent>) => void;\r\n  // onDragEnd: (e: KonvaEventObject<DragEvent>) => void;\r\n  // onMouseEnter: (e: KonvaEventObject<MouseEvent>) => void;\r\n  // onMouseDown: (e: KonvaEventObject<MouseEvent>) => void;\r\n  // onMouseUp: (e: KonvaEventObject<MouseEvent>) => void;\r\n  // draggable: boolean;\r\n  // fill: string;\r\n}\r\n\r\n// packedSamples: computed((state)=>{\r\n//   return packedSamples.packed.map((sample) => {\r\n//     state.activeTags.every(t=>sample.tags.includes(t))\r\n//   })\r\n// }),\r\n\r\nconst BasicSamplePath = React.memo((props: BasicSample): JSX.Element => {\r\n  const [isHovered, setisHovered] = useState(false);\r\n  const [absolutePosition, setabsolutePosition] = useState({ x: 0, y: 0 });\r\n  const sampleRef = useRef<Konva.Path>(null);\r\n\r\n  const {\r\n    w,\r\n    h,\r\n    width,\r\n    fill,\r\n    onMouseDown,\r\n    onDragStart,\r\n    onDragEnd,\r\n    onMouseEnter,\r\n    onDragMove,\r\n    onMouseUp,\r\n    draggable,\r\n    id,\r\n    svgPath,\r\n    sample,\r\n    x,\r\n    y,\r\n    scaleX,\r\n    // isHovered,\r\n  } = props;\r\n\r\n  const startPoint = { x: x, y: y };\r\n  // const startPoint = { x: 0, y: 0 };\r\n  const endPoint = { x: x + w, y: y + h };\r\n  const gradient = getGradient(sample.tags);\r\n  console.log(svgPath);\r\n  return (\r\n    <Path\r\n      x={x}\r\n      y={y}\r\n      ref={sampleRef}\r\n      width={width}\r\n      height={h}\r\n      id={id}\r\n      // y={h / 2}\r\n      data={sample.svgPath}\r\n      scaleX={scaleX}\r\n      scaleY={isHovered ? 1.1 : 1}\r\n      // fillPriority={\"linear-gradient\"}\r\n      // fill={fill}\r\n      fill={\"red\"}\r\n      // onMouseUp={onMouseUp}\r\n      // onMouseDown={(e) => {\r\n      //   console.log(e.target.absolutePosition());\r\n      //   setabsolutePosition(e.target.absolutePosition());\r\n      //   onMouseDown(e);\r\n      // }}\r\n      // onDragStart={onDragStart}\r\n      // onDragEnd={onDragEnd}\r\n      // onMouseEnter={(e) => {\r\n      //   onMouseEnter(e);\r\n      //   setisHovered(true);\r\n      // }}\r\n      // onMouseLeave={(e) => {\r\n      //   onMouseEnter(e);\r\n      //   setisHovered(false);\r\n      // }}\r\n      // dragBoundFunc={(e) => {\r\n      //   // console.log(e);\r\n      //   // return { x: x, y: y };\r\n      //   // return null;\r\n      //   return absolutePosition;\r\n      //   // return { x: 0, y: 0 };\r\n      // }}\r\n      // fillLinearGradientStartPoint={{ x: 0, y: 0 }}\r\n      // fillLinearGradientEndPoint={{ x: w, y: h }}\r\n      // fillLinearGradientColorStops={gradient}\r\n      // onDragMove={(e) => {\r\n      //   onDragMove(e);\r\n      // }}\r\n      draggable={draggable}\r\n      stroke={isHovered ? \"white\" : \"black\"}\r\n      strokeWidth={isHovered ? 2 : 2}\r\n    />\r\n  );\r\n});\r\nconst getGradient = (tags: string[]): (string | number)[] => {\r\n  let stop1 = \"blue\";\r\n  let stop2 = \"yellow\";\r\n\r\n  if (tags.includes(\"MR\")) {\r\n    stop1 = \"#3023AE\";\r\n    stop2 = \"#53A0FD\";\r\n    // console.log(\"HAD AN MR\");\r\n  }\r\n  if (tags.includes(\"LR\")) {\r\n    stop1 = \"#8c34eb\";\r\n    stop2 = \"#d034eb\";\r\n  }\r\n  if (tags.includes(\"LR\")) {\r\n    stop1 = \"#ebd510\";\r\n    stop2 = \"#eb8110\";\r\n  }\r\n  if (tags.includes(\"MIX\")) {\r\n    stop1 = \"#60eb10\";\r\n    stop2 = \"#2a10eb\";\r\n  }\r\n\r\n  return [0, stop1, 0.5, stop2, 1, stop1];\r\n};\r\nexport default BasicSamplePath;\r\n","import SampleCollection from \"@classes/SampleCollection\";\r\nimport appConfig from \"@static/appConfig\";\r\nimport canvasConfig from \"@static/canvasConfig\";\r\nimport theme from \"@static/theme\";\r\nimport React, { MutableRefObject } from \"react\";\r\nimport { Group, Rect, Text } from \"react-konva\";\r\nimport { AppMode } from \"../Canvas\";\r\nimport BasicSamplePath from \"./BasicSamplePath\";\r\n\r\nconst CollectionContainer = ({\r\n  sampleCollection,\r\n  appMode,\r\n}: {\r\n  sampleCollection: SampleCollection;\r\n  appMode: AppMode;\r\n}): JSX.Element => {\r\n  console.log(\"RENDERING COLLECTION CONTAINER\");\r\n\r\n  return (\r\n    <>\r\n      <Rect\r\n        fill={theme.stroke}\r\n        height={window.innerHeight - 100}\r\n        width={canvasConfig.sampleContainerWidth}\r\n        stroke={theme.primaryInactive}\r\n        strokeWidth={2}\r\n        cornerRadius={5}\r\n      />\r\n      <Text text={sampleCollection.name} />\r\n      {sampleCollection.samples.map((s, i) => {\r\n        const padding = 20;\r\n        const samplePath = {\r\n          x: 20,\r\n          y: appConfig.sampleHeight * i + appConfig.sampleHeight / 2 + padding,\r\n          sample: s,\r\n          h: appConfig.sampleHeight,\r\n          width: 10,\r\n          scaleX: 0.5,\r\n        };\r\n        return <BasicSamplePath key={i} {...samplePath} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CollectionContainer);\r\n","import theme from \"@static/theme\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@css/DialogBox.scss\";\r\nimport classNames from \"classnames\";\r\nimport { useOnClickOutside } from \"@hooks\";\r\n\r\nconst DialogBox = ({\r\n  open,\r\n  setOpen,\r\n}: {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n}): JSX.Element => {\r\n  const widthPercent = 25;\r\n  const leftPercent = 50 - widthPercent / 2;\r\n\r\n  const containerStyle = {\r\n    width: `${widthPercent}%`,\r\n    height: 200,\r\n    display: open ? \"flex\" : \"none\",\r\n    backgroundColor: theme.secondary,\r\n    borderRadius: theme.borderRadius,\r\n    position: \"absolute\",\r\n    left: `${leftPercent}%`,\r\n    bottom: \"25%\",\r\n    overflow: \"hidden\",\r\n    color: theme.textDark,\r\n    // transform: \"translate(-50%, -50%)\",\r\n    padding: \"1em\",\r\n  } as React.CSSProperties;\r\n\r\n  const handleClickOutside = () => {\r\n    setOpen(false);\r\n    console.log(\"clicked outside\");\r\n  };\r\n\r\n  const ref = useRef(null);\r\n  useOnClickOutside(ref, handleClickOutside);\r\n\r\n  const dialogClass = classNames(\"dialog\", {\r\n    hidden: !open,\r\n    \"dialog-display\": open,\r\n  });\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={dialogClass} style={containerStyle} ref={ref}>\r\n      <p>\r\n        Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n        since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book. It has survived not only five\r\n        centuries, but also the leap into electronic typesetting, remaining\r\n        essentially unchanged. It was popularised in the 1960s with the release\r\n        of Letraset sheets containing Lorem Ipsum passages, and more recently\r\n        with desktop publishing software like Aldus PageMaker including versions\r\n        of Lorem Ipsum.\r\n      </p>\r\n    </div>,\r\n    document.getElementById(\"dialog-box\") as HTMLDivElement\r\n  );\r\n};\r\n\r\nexport default DialogBox;\r\n","type KosimaReaction =\r\n  | \"KOSIMA_SURPRISE\"\r\n  | \"KOSIMA_QUESTION\"\r\n  | \"KOSIMA_THINKING\"\r\n  | \"KOSIMA_NEUTRAL\";\r\n\r\nclass Kosima {\r\n  static KosimaFolder = process.env.PUBLIC_URL + \"/Kosima/\";\r\n  reaction!: KosimaReaction;\r\n  constructor() {\r\n    this.reaction = \"KOSIMA_NEUTRAL\";\r\n  }\r\n\r\n  reactionImage() {\r\n    console.log(Kosima.KosimaFolder + this.reaction + \".svg\");\r\n    return Kosima.KosimaFolder + this.reaction + \".svg\";\r\n  }\r\n  baseImage() {\r\n    return Kosima.KosimaFolder + \"KOSIMA_NEUTRAL\" + \".svg\";\r\n  }\r\n  setReaction(reaction: KosimaReaction) {\r\n    this.reaction = reaction;\r\n  }\r\n}\r\n\r\nexport default Kosima;\r\n","export function randomElements(arr: any[], count: number) {\n  let len = arr.length;\n  let lookup = {};\n  let tmp = [];\n\n  if (count > len) count = len;\n\n  for (let i = 0; i < count; i++) {\n    let index;\n    do {\n      index = ~~(Math.random() * len);\n    } while (index in lookup);\n    lookup[index] = null;\n    tmp.push(arr[index]);\n  }\n\n  return tmp;\n}\n\nexport function mapRange(\n  value: number,\n  inMin: number,\n  inMax: number,\n  outMin: number,\n  outMax: number\n): number {\n  // return Math.max( inMin, Math.min( outMax, unclamped ) );\n  return ((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n}\n\nexport function downloadBlob(\n  content: any,\n  filename: string,\n  contentType: string\n): void {\n  // Create a blob\n  const blob = new Blob([content], { type: contentType });\n  const url = URL.createObjectURL(blob);\n\n  // Create a link to download it\n  const pom = document.createElement(\"a\");\n  pom.href = url;\n  pom.setAttribute(\"download\", filename);\n  pom.click();\n}\n\nexport const groupBy = (list: any[], key: string): Map<string, Array<any>> => {\n  let map = new Map();\n  list.map((val) => {\n    if (!map.has(val[key])) {\n      map.set(\n        val[key],\n        list.filter((data) => data[key] == val[key])\n      );\n    }\n  });\n  return map;\n};\n\nexport const getRandomIntInclusive = (min, max): number => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n};\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Circle, Group, Image, Layer } from \"react-konva\";\r\nimport Kosima from \"@classes/Kosima\";\r\nimport useImage from \"use-image\";\r\nimport theme from \"@static/theme\";\r\nimport { mapRange } from \"@utils\";\r\nimport { group } from \"console\";\r\nimport Konva from \"konva\";\r\nimport { ActionCreator, Actions } from \"easy-peasy\";\r\nimport { CanvasModel } from \"../../Canvas\";\r\n\r\ninterface KosimaProperties\r\n  extends Pick<Actions<CanvasModel>, \"setPopOverOpen\"> {\r\n  kosima: Kosima;\r\n  // setPopOverOpen: (payload: boolean) => void\r\n}\r\n\r\nconst KosimaRender = ({\r\n  kosima,\r\n  setPopOverOpen,\r\n}: KosimaProperties): JSX.Element => {\r\n  const [baseImage] = useImage(kosima.baseImage());\r\n  kosima.setReaction(\"KOSIMA_QUESTION\");\r\n\r\n  const [expressionImage] = useImage(kosima.reactionImage());\r\n  // console.log(expressionImage.w);\r\n  const width = 150.0;\r\n  const height = 150.0;\r\n  console.log(expressionImage);\r\n\r\n  const xPos = (window.innerWidth - width) / 2;\r\n  const yPos = window.innerHeight - height - 50;\r\n  const eyeDiameter = 1;\r\n  const headHeight = 9;\r\n  const hUnit = height / headHeight;\r\n  const eyeHeight = 150 - 5 * hUnit;\r\n  // let eyeY = height - (eyeHeight / 2) * hUnit;\r\n  // eyeY -= (eyeDiameter * hUnit) / 2;\r\n  const eyeY = eyeHeight + (eyeDiameter / 2) * hUnit + eyeHeight / 2;\r\n\r\n  // const eyeY = eyeHeight / 2;\r\n  // const eyeY = height;\r\n\r\n  // eyeY += (eyeHeight / 2.0) * hUnit;\r\n\r\n  // let eyeY = eyeHeight * hUnit + (eyeHeight / 2) * hUnit;\r\n\r\n  // const eyeX = (width - eyeRadius) / 2;\r\n  // const eyeX = width / 2 - (eyeDiameter / 2) * hUnit;\r\n  const eyeX = (width - eyeDiameter) / 2;\r\n  const [eyePos, setEyePos] = useState({\r\n    x: eyeX,\r\n    y: eyeY,\r\n  });\r\n  const groupRef = useRef(null);\r\n  const [eyeOffset, setEyeOffset] = useState({ x: 0, y: 0 });\r\n  useEffect(() => {\r\n    // console.log(eyeOffset);\r\n  }, [eyeOffset]);\r\n  const maxEyeRadius = 15;\r\n  const circRef = useRef(null);\r\n\r\n  return (\r\n    <Layer\r\n      onMouseUp={(e) => {\r\n        setPopOverOpen(true);\r\n      }}\r\n      onMouseLeave={(e) => {\r\n        circRef.current.to({\r\n          x: eyePos.x,\r\n          y: eyePos.y,\r\n          easing: Konva.Easings.EaseOut,\r\n        });\r\n      }}\r\n      onMouseMove={(e) => {\r\n        console.log(groupRef);\r\n        if (groupRef.current) {\r\n          const bBox = groupRef.current.getClientRect();\r\n          console.log(bBox);\r\n          const newX = mapRange(\r\n            e.evt.pageX,\r\n            bBox.x,\r\n            bBox.x + bBox.width,\r\n            -maxEyeRadius,\r\n            maxEyeRadius\r\n          );\r\n          console.log(newX);\r\n          console.log(e);\r\n          console.log(e.evt.x);\r\n          console.log(e.evt.y);\r\n          const newY = mapRange(\r\n            e.evt.pageY,\r\n            bBox.y,\r\n            bBox.y + bBox.height,\r\n            -maxEyeRadius,\r\n            maxEyeRadius\r\n          );\r\n          setEyeOffset({ x: newX, y: newY });\r\n        }\r\n      }}\r\n    >\r\n      <Group x={xPos} y={yPos} ref={groupRef}>\r\n        <Image width={width} height={height} image={baseImage} />\r\n        {/* <Image width={width} height={height} image={expressionImage} /> */}\r\n        <Circle\r\n          ref={circRef}\r\n          x={eyePos.x + eyeOffset.x}\r\n          y={eyePos.y + eyeOffset.y}\r\n          fill={\"yellow\"}\r\n          radius={hUnit * 0.5}\r\n          stroke={theme.stroke}\r\n        />\r\n      </Group>\r\n    </Layer>\r\n  );\r\n};\r\n\r\nexport default React.memo(KosimaRender);\r\n","import SampleData from \"./SampleData\";\r\n\r\nclass SampleCollection {\r\n  samples!: SampleData[];\r\n  name!: string;\r\n\r\n  constructor(samples: SampleData[], name: string) {\r\n    this.samples = samples;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\nexport default SampleCollection;\r\n","import SampleCollection from \"@classes/SampleCollection\";\r\nimport theme from \"@static/theme\";\r\nimport Konva from \"konva\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { RectConfig } from \"konva/lib/shapes/Rect\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Group, Rect } from \"react-konva\";\r\n\r\ninterface CollectionNavProperties extends Partial<RectConfig> {\r\n  sampleCollections: SampleCollection[];\r\n  activeCollection: string;\r\n  // onMouseUp: (e: KonvaEventObject<MouseEvent>) => void;\r\n}\r\n\r\nconst CollectionNav = (props: CollectionNavProperties): JSX.Element => {\r\n  const height = 15;\r\n  const spacing = 5;\r\n  const numSamples = props.sampleCollections.length;\r\n  const containerGroupRef = useRef<Konva.Layer>(null);\r\n  const yPos =\r\n    window.innerHeight / 2 - (height * numSamples + spacing * numSamples) / 2;\r\n\r\n  return (\r\n    <Group>\r\n      <Group ref={containerGroupRef} y={yPos}>\r\n        {props.sampleCollections.map((c, i) => {\r\n          const groupProps = {\r\n            x: 10,\r\n            y: i * 15 + spacing,\r\n          };\r\n          const isActiveCollection = props.activeCollection === c.name;\r\n          const rectProps = {\r\n            fill: isActiveCollection ? theme.secondary : theme.primary,\r\n            stroke: theme.secondary,\r\n            width: height,\r\n            height: height,\r\n            id: c.name,\r\n            onMouseUp: props.onMouseUp,\r\n          };\r\n\r\n          return (\r\n            <Group key={i} {...groupProps}>\r\n              <Rect {...rectProps}></Rect>\r\n            </Group>\r\n          );\r\n        })}\r\n      </Group>\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default CollectionNav;\r\n","export default class Tag {\r\n  name: string;\r\n  count: number | undefined;\r\n\r\n  constructor(name: string, count: number) {\r\n    this.name = name;\r\n    this.count = count;\r\n  }\r\n}\r\n","type SampleTag = \"short\" |\"long\" | \"fast\" | \"upbeat\" | \"intense\" | \"dramatic\" |\"chaotic\"\r\n\r\nconst tags = [\"FD\", \"MR\", \"HR\", \"ST\", \"LT\", \"MIX\", \"LR\", \"E\", \"M\", \"FL\", \"C\", \"BACH\", \"BARTOK\", \"YSAYE\", \"TONE\", \"TRL\", \"T\"]\r\n// const tags = [\"FD\", \"MR\", \"HR\", \"ST\", \"LT\", \"MIX\", \"LR\", \"E\", \"M\", \"3L\", \"2L\", \"1L\", \"4L\", \"FL\", \"C\", \"BACH\", \"BARTOK\", \"YSAYE\"]\r\nexport default tags;\r\n\r\n\r\n// AIzaSyBo7S3o_RHuyBnG3Z7ywlvz3FbtKU9n0MQ","// export interface Block {\r\n//   [x: string]: any;\r\n//   w: number;\r\n//   h: number;\r\n//   fit?: PackNode;\r\n//   // id: string;\r\n// }\r\n\r\nimport SampleData from \"@classes/SampleData\";\r\n\r\nexport interface PackNode {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  // id: string;\r\n  used?: boolean;\r\n  down?: PackNode;\r\n  right?: PackNode;\r\n}\r\n\r\nexport interface Piece {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n}\r\n\r\nexport interface Fit {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport class Packer {\r\n  readonly w: number;\r\n  readonly h: number;\r\n  readonly root: PackNode;\r\n  readonly gutter: number;\r\n\r\n  constructor(w: number, h: number, gutter?: number) {\r\n    const margin = 40;\r\n    this.w = w;\r\n    this.h = h;\r\n    this.gutter = gutter ?? 5;\r\n    this.root = { x: margin, y: 0, w: w, h: h, used: false };\r\n  }\r\n  fit(blocks: SampleData[]): void {\r\n    let n, node, block;\r\n    for (n = 0; n < blocks.length; n++) {\r\n      block = blocks[n];\r\n      // block.w += this.gutter;\r\n      // block.h += this.gutter;\r\n      if ((node = this.findNode(this.root, block.w, block.h))) {\r\n        const fit = this.splitNode(node, block.w, block.h, block.id);\r\n        block.fit = this.splitNode(node, block.w, block.h, block.id);\r\n        // console.log(fit);\r\n      }\r\n\r\n      // console.log(this.splitNode(node, block.w, block.h, block.id));\r\n    }\r\n  }\r\n  findNode(root: PackNode, w: number, h: number): PackNode | null {\r\n    if (root.used && root.right && root.down)\r\n      return this.findNode(root.right, w, h) || this.findNode(root.down, w, h);\r\n    else if (w <= root.w && h <= root.h) return root;\r\n    else return null;\r\n  }\r\n  splitNode(node: PackNode, w: number, h: number, id: string): PackNode {\r\n    node.used = true;\r\n    node.down = {\r\n      x: node.x,\r\n      y: node.y + h,\r\n      w: node.w,\r\n      h: node.h - h,\r\n    };\r\n    node.right = {\r\n      x: node.x + w,\r\n      y: node.y,\r\n      w: node.w - w,\r\n      h: h,\r\n    };\r\n    return node;\r\n  }\r\n}\r\n\r\nexport default Packer;\r\n","import Packer from \"./Packer\";\r\nimport { RectConfig } from \"konva/lib/shapes/Rect\";\r\nimport SampleData from \"@classes/SampleData\";\r\nimport { mapRange } from \"@utils\";\r\nimport appConfig from \"@static/appConfig\";\r\n\r\nconst stageProps = {\r\n  width: window.innerWidth,\r\n  height: 800,\r\n};\r\n\r\nconst greens = [\r\n  \"#A4DE02\",\r\n  \"#76BA1B\",\r\n  \"#4C9A2A\",\r\n  \"#1E5631\",\r\n  \"#68BB59\",\r\n  \"#ACDF87\",\r\n];\r\n// const makeBlocks = (count: number, colWidth: number): Block[] => {\r\n//   let blocks = [];\r\n//   const widths = [1, 2, 3, 4, 5];\r\n//   for (let index = 0; index < count; index++) {\r\n//     const block = {\r\n//       w: randomElement(widths) * colWidth,\r\n//       h: 74,\r\n//     };\r\n//     blocks.push(block);\r\n//   }\r\n//   return blocks;\r\n// };\r\n\r\n// const packer = new Packer(stageProps.width, stageProps.height, 10);\r\n// const blocks = makeBlocks(25, stageProps.width / 10);\r\n// packer.fit(blocks);\r\n\r\nconst getSampleWidth2 = (sample: SampleData): number => {\r\n  const mapped = mapRange(sample.length, 0, 3.0, 5, 12);\r\n  const rounded = Math.round(mapped);\r\n  return rounded;\r\n};\r\n\r\n// const samplesToBlocks = (samples: SampleData[]): Block[] => {\r\n//   return samples.map((s) => {\r\n//     const w = getSampleWidth2(s);\r\n//     const h = 70;\r\n//     return {\r\n//       w: w,\r\n//       h: h,\r\n//       id: s.id,\r\n//     } as Block;\r\n//   });\r\n// };\r\n\r\nexport const packSamples = (\r\n  samples: SampleData[],\r\n  width: number,\r\n  height: number\r\n): SampleData[] => {\r\n  // const sampleBlocks = samplesToBlocks(samples);\r\n  console.log(\"PACKING SAMPLES\");\r\n  samples.forEach((sample) => {\r\n    sample.calculateDimensions(width, appConfig.sampleHeight);\r\n  });\r\n  const packer = new Packer(width, height, 10);\r\n  packer.fit(samples);\r\n  // console.log(samples);\r\n  return samples;\r\n};\r\n\r\nfunction randomElement<T>(array: T[]): T {\r\n  return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\n// const rects = makeRects(blocks);\r\nconst rects = [];\r\nexport default rects;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Circle, Group, Text } from \"react-konva\";\r\nimport { CircleConfig } from \"konva/lib/shapes/Circle\";\r\nimport Tag from \"@classes/Tag\";\r\nimport Konva from \"konva\";\r\nimport theme from \"@static/theme\";\r\n\r\nexport interface TagSelectorProps extends Partial<CircleConfig> {\r\n  tag: Tag;\r\n  activeTags: string[];\r\n}\r\n\r\nconst TagSelector = (props: TagSelectorProps): JSX.Element => {\r\n  const {\r\n    activeTags,\r\n    x,\r\n    y,\r\n    tag,\r\n    w,\r\n    h,\r\n    fill,\r\n    radius,\r\n    onMouseDown,\r\n    onDragStart,\r\n    onDragEnd,\r\n    onMouseEnter,\r\n    // onMouseExit,\r\n    onDragMove,\r\n    onMouseUp,\r\n    draggable,\r\n    id,\r\n    fit,\r\n    stroke,\r\n    strokeWidth,\r\n    // isHovered,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    console.log(x, y);\r\n    groupRef.current.to({\r\n      x: x,\r\n      y: y,\r\n    });\r\n  }, [x, y]);\r\n\r\n  const groupRef = useRef(null);\r\n  const groupProps = {\r\n    // y,\r\n    // x,\r\n    onMouseDown,\r\n    onDragStart,\r\n    onDragEnd,\r\n    onMouseEnter,\r\n    onDragMove,\r\n    onMouseUp,\r\n    draggable,\r\n    id,\r\n  };\r\n\r\n  const [isActive, setIsActive] = useState(activeTags.includes(props.tag.name));\r\n  const [circleFill, setCircleFill] = useState(fill);\r\n  const circleProps = { strokeWidth };\r\n  const [hovered, setHovered] = useState(false);\r\n  const circRef = useRef(null);\r\n  useEffect(() => {\r\n    // console.log(activeTags);\r\n    if (activeTags.includes(tag.name)) {\r\n      setCircleFill(theme.secondary);\r\n    } else {\r\n      setCircleFill(fill);\r\n    }\r\n  }, [activeTags]);\r\n\r\n  useEffect(() => {\r\n    // console.log(radius);\r\n    circRef.current.to({\r\n      radius: radius,\r\n      duration: 0.3,\r\n      easing: Konva.Easings.EaseInOut,\r\n    });\r\n  }, [radius]);\r\n\r\n  return (\r\n    <Group {...groupProps} ref={groupRef}>\r\n      <Circle\r\n        onMouseEnter={(e) => {\r\n          setHovered(true);\r\n          //   e.target.attrs.fill = theme.secondary_hover;\r\n          //   onMouseEnter(e);\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          setHovered(false);\r\n        }}\r\n        id={`tag_${tag.name}_circle`}\r\n        {...circleProps}\r\n        stroke={tag.count === 0 ? theme.primaryInactive : stroke}\r\n        fill={\r\n          tag.count == 0\r\n            ? theme.primary\r\n            : hovered\r\n            ? theme.secondaryHover\r\n            : theme.stroke\r\n        }\r\n        // fill={\"green\"}\r\n        ref={circRef}\r\n      />\r\n      <Text\r\n        x={-radius}\r\n        fill={\"white\"}\r\n        text={tag.name}\r\n        align={\"center\"}\r\n        width={radius * 2}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default React.memo(TagSelector);\r\n","import Tag from \"@classes/Tag\";\r\nimport theme from \"@static/theme\";\r\nimport { mapRange } from \"@utils\";\r\nimport { ActionCreator, Actions } from \"easy-peasy\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { CircleConfig } from \"konva/lib/shapes/Circle\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Circle, Layer } from \"react-konva\";\r\nimport { AppMode, CanvasModel } from \"../../Canvas\";\r\nimport TagSelector, { TagSelectorProps } from \"../TagSelector\";\r\n\r\ninterface TagsLayerProps\r\n  extends Pick<Actions<CanvasModel>, \"removeTag\" | \"addTag\"> {\r\n  appMode: AppMode;\r\n  tags: Tag[];\r\n  selectedTags: string[];\r\n}\r\nconst TagsLayer = ({\r\n  appMode,\r\n  tags,\r\n  removeTag,\r\n  addTag,\r\n  selectedTags,\r\n}: TagsLayerProps): JSX.Element => {\r\n  const layerRef = useRef(null);\r\n\r\n  // useEffect(() => {\r\n  if (appMode !== \"samples\") {\r\n    if (layerRef.current) {\r\n      layerRef.current.children.forEach((element) => {\r\n        element.to({\r\n          opacity: 0,\r\n          // scale: 0,\r\n          duration: 0.1,\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    if (layerRef.current) {\r\n      layerRef.current.children.forEach((element) => {\r\n        element.to({\r\n          opacity: 1,\r\n          // scale: 0,\r\n          duration: 0.5,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  // }, [appMode]);\r\n\r\n  useEffect(() => {\r\n    console.log(tags);\r\n  }, [tags]);\r\n\r\n  const withRadiusTags = tags.map((t) => {\r\n    console.log(t.count);\r\n    // const circleRadius = mapRange(t.count, 0, 360, 50, 150);\r\n    const circleRadius = mapRange(t.count, 0, 170, 20, 80);\r\n    return {\r\n      tag: t,\r\n      radius: circleRadius,\r\n    };\r\n  });\r\n\r\n  const allRadii = withRadiusTags.map((t) => t.radius);\r\n  const bigRadius = 200;\r\n  // let testRadii = allRadii.map(r=>mapRange())\r\n  console.log(allRadii);\r\n  let xPos = window.innerWidth - bigRadius - 100;\r\n  let yPos = window.innerHeight / 2;\r\n  const tagCircles = withRadiusTags.map((tag, i) => {\r\n    let posX = bigRadius * Math.cos(findPlace(i, bigRadius, allRadii));\r\n    let posY = bigRadius * Math.sin(findPlace(i, bigRadius, allRadii));\r\n    posX += xPos;\r\n    posY += yPos;\r\n\r\n    const onMouseUp = (e: KonvaEventObject<MouseEvent>): void => {\r\n      console.log(\"got circle mouse up\");\r\n      console.log(tag);\r\n      if (selectedTags.includes(tag.tag.name)) {\r\n        removeTag(tag.tag.name);\r\n      } else {\r\n        addTag(tag.tag.name);\r\n      }\r\n      console.log(selectedTags);\r\n    };\r\n\r\n    return {\r\n      activeTags: selectedTags,\r\n      tag: tag.tag,\r\n      key: i,\r\n      radius: tag.radius,\r\n      fill: theme.primary,\r\n      x: posX,\r\n      y: posY,\r\n      stroke: theme.secondary,\r\n      strokeWidth: 5,\r\n      onMouseUp,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Layer ref={layerRef}>\r\n      <Circle x={xPos} y={yPos} radius={bigRadius} stroke={\"red\"} />\r\n      {tagCircles.map((c, i) => {\r\n        return <TagSelector {...c} key={i} />;\r\n      })}\r\n    </Layer>\r\n  );\r\n};\r\n\r\nexport default TagsLayer;\r\n\r\n//from https://stackoverflow.com/questions/69684506/arrange-circles-along-circle-without-overlap/69685450#69685450\r\nfunction findPlace(i: number, bigRadius: number, allRadii: number[]): number {\r\n  // console.log(i, bigRadius, allRadii[i], allRadii);\r\n  // console.log(Math.);\r\n  if (i < 1) {\r\n    return 0;\r\n  } else {\r\n    console.log(\r\n      i,\r\n      allRadii[i],\r\n      allRadii[i - 1],\r\n      bigRadius,\r\n      (2 * bigRadius) / (allRadii[i] + allRadii[i - 1]),\r\n      Math.asin((2 * bigRadius) / (allRadii[i] + allRadii[i - 1])),\r\n      Math.asin(i),\r\n      i - 1\r\n    );\r\n  }\r\n  return (\r\n    findPlace(i - 1, bigRadius, allRadii) +\r\n    Math.asin((allRadii[i] * 2 + allRadii[i - 1] * 2) / (2 * bigRadius))\r\n  );\r\n}\r\n","import Konva from \"konva\";\r\nimport SampleData from \"@classes/SampleData\";\r\nimport { Group, Layer, Path, Rect, Stage, Text, Circle } from \"react-konva\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { groupBy, mapRange } from \"@utils\";\r\nimport React, { MutableRefObject, RefObject, useRef, useState } from \"react\";\r\nimport theme from \"@static/theme\";\r\n\r\nexport interface EnrichedSample\r\n  extends Omit<SampleData, \"setPath\" | \"calculateDimensions\"> {\r\n  onDragMove: (e: KonvaEventObject<DragEvent>) => void;\r\n  onDragStart: (e: KonvaEventObject<DragEvent>) => void;\r\n  onDragEnd: (e: KonvaEventObject<DragEvent>) => void;\r\n  onMouseEnter: (e: KonvaEventObject<MouseEvent>) => void;\r\n  onMouseDown: (e: KonvaEventObject<MouseEvent>) => void;\r\n  onMouseUp: (e: KonvaEventObject<MouseEvent>) => void;\r\n  draggable: boolean;\r\n  fill: string;\r\n}\r\n\r\n// packedSamples: computed((state)=>{\r\n//   return packedSamples.packed.map((sample) => {\r\n//     state.activeTags.every(t=>sample.tags.includes(t))\r\n//   })\r\n// }),\r\n\r\nconst SamplePath = React.memo(\r\n  ({\r\n    sample,\r\n    ref,\r\n    setRef,\r\n  }: // setSample,\r\n  {\r\n    sample: EnrichedSample;\r\n    ref?: MutableRefObject<Konva.Path>;\r\n    setRef?: (ref: RefObject<Konva.Path>) => void;\r\n  }): JSX.Element => {\r\n    const {\r\n      w,\r\n      h,\r\n      fill,\r\n      onMouseDown,\r\n      onDragStart,\r\n      onDragEnd,\r\n      onMouseEnter,\r\n      onDragMove,\r\n      onMouseUp,\r\n      draggable,\r\n      id,\r\n      svgPath,\r\n      fit,\r\n      // isHovered,\r\n    } = sample;\r\n    const [isHovered, setisHovered] = useState(false);\r\n    const [absolutePosition, setabsolutePosition] = useState({ x: 0, y: 0 });\r\n    const sampleRef = useRef<Konva.Path>(null);\r\n    const [isDragging, setIsDragging] = useState(false);\r\n\r\n    // const [sampleRef, setSampleRef] = useState<()\r\n    // useEffect(() => {\r\n    //   console.log(hoveredId);\r\n    // setisHovered(hoveredId === id);\r\n    // }, [hoveredId]);\r\n    const actualWidth = mapRange(sample.w, 0, 2.5, 0, 400);\r\n\r\n    const { x, y } = fit;\r\n    const startPoint = { x: x, y: y };\r\n    // const startPoint = { x: 0, y: 0 };\r\n    const endPoint = { x: x + w, y: y + h };\r\n    const gradient = getGradient(sample.tags);\r\n    // console.log(svgPath);\r\n    const renderGhost = () => {\r\n      if (isDragging) {\r\n        return (\r\n          <Path\r\n            //  ref={sampleRef}\r\n            width={w}\r\n            height={h}\r\n            id={`ghost_${id}`}\r\n            y={h / 2}\r\n            data={svgPath}\r\n            scaleX={isHovered ? 1.1 : 1}\r\n            scaleY={isHovered ? 1.1 : 1}\r\n            fillPriority={\"linear-gradient\"}\r\n            // fill={fill}\r\n            stroke={theme.secondary}\r\n            strokeWidth={2}\r\n            // onMouseUp={onMouseUp}\r\n          />\r\n        );\r\n      }\r\n    };\r\n    return (\r\n      <Group x={x} y={y} width={w} height={h}>\r\n        <Path\r\n          ref={sampleRef}\r\n          width={w}\r\n          height={h}\r\n          id={id}\r\n          // y={h / 2}\r\n          data={svgPath}\r\n          // scaleX={isHovered ? 1.1 : 1}\r\n          scaleX={0.2}\r\n          scaleY={0.6}\r\n          // scaleY={isHovered ? 1.1 : 1}\r\n          fillPriority={\"linear-gradient\"}\r\n          // fill={fill}\r\n          // fill={fill}\r\n          onMouseUp={onMouseUp}\r\n          onMouseDown={(e) => {\r\n            console.log(e.target.absolutePosition());\r\n            setabsolutePosition(e.target.absolutePosition());\r\n            onMouseDown(e);\r\n          }}\r\n          onDragStart={(e) => {\r\n            setIsDragging(true);\r\n            onDragStart;\r\n          }}\r\n          onDragEnd={(e) => {\r\n            setIsDragging(false);\r\n            e.target.x(0);\r\n            e.target.y(h / 2);\r\n            onDragEnd(e);\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            onMouseEnter(e);\r\n            setisHovered(true);\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            onMouseEnter(e);\r\n            setisHovered(false);\r\n          }}\r\n          // dragBoundFunc={(e) => {\r\n          //   // console.log(e);\r\n          //   // return { x: x, y: y };\r\n          //   // return null;\r\n          //   return absolutePosition;\r\n          //   // return { x: 0, y: 0 };\r\n          // }}\r\n          // shadowColor={\"black\"}\r\n          // shadowBlur={15}\r\n          // shadowOffsetX={0}\r\n          // shadowOffsetY={0}\r\n          // shadowOpacity={0.2}\r\n          fillLinearGradientStartPoint={{ x: 0, y: 0 }}\r\n          fillLinearGradientEndPoint={{ x: w, y: h }}\r\n          fillLinearGradientColorStops={gradient}\r\n          onDragMove={(e) => {\r\n            onDragMove(e);\r\n          }}\r\n          draggable={draggable}\r\n          stroke={isHovered ? \"white\" : \"black\"}\r\n          strokeWidth={isHovered ? 2 : 2}\r\n        />\r\n        <Rect\r\n          // fillLinearGradientStartPoint={{ x: w, y: h }}\r\n          // // fillLinearGradientStartPoint={startPoint}\r\n          // fillLinearGradientEndPoint={{ x: 0, y: 0 }}\r\n          // fillLinearGradientColorStops={[0, \"red\", 0.5, \"black\", 1, \"green\"]}\r\n          // stroke={isHovered ? \"white\" : \"red\"}\r\n          strokeWidth={2}\r\n          // width={actualWidth}\r\n          width={w}\r\n          height={h}\r\n          x={0}\r\n          y={0}\r\n        />\r\n        {renderGhost()}\r\n      </Group>\r\n    );\r\n  }\r\n);\r\nconst getGradient = (tags: string[]): (string | number)[] => {\r\n  let stop1 = \"blue\";\r\n  let stop2 = \"yellow\";\r\n\r\n  if (tags.includes(\"MR\")) {\r\n    stop1 = \"#3023AE\";\r\n    stop2 = \"#53A0FD\";\r\n    // console.log(\"HAD AN MR\");\r\n  }\r\n  if (tags.includes(\"LR\")) {\r\n    stop1 = \"#8c34eb\";\r\n    stop2 = \"#d034eb\";\r\n  }\r\n  if (tags.includes(\"LR\")) {\r\n    stop1 = \"#ebd510\";\r\n    stop2 = \"#eb8110\";\r\n  }\r\n  if (tags.includes(\"MIX\")) {\r\n    stop1 = \"#60eb10\";\r\n    stop2 = \"#2a10eb\";\r\n  }\r\n\r\n  return [0, stop1, 0.5, stop2, 1, stop1];\r\n};\r\nexport default SamplePath;\r\n","import SampleData from \"@classes/SampleData\";\r\nimport canvasConfig from \"@static/canvasConfig\";\r\nimport theme from \"@static/theme\";\r\nimport { Actions } from \"easy-peasy\";\r\nimport Konva from \"konva\";\r\nimport { Group } from \"konva/lib/Group\";\r\nimport { LayerConfig } from \"konva/lib/Layer\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { Shape } from \"konva/lib/Shape\";\r\nimport { PathConfig } from \"konva/lib/shapes/Path\";\r\nimport React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport { Layer } from \"react-konva\";\r\nimport { AppMode, CanvasModel } from \"../../Canvas\";\r\nimport SamplePath, { EnrichedSample } from \"../SamplePath\";\r\n\r\ninterface SampleLayerProperties\r\n  extends Pick<\r\n    Actions<CanvasModel>,\r\n    | \"setSampleToClone\"\r\n    | \"setIsDragging\"\r\n    | \"addToCurrentCollection\"\r\n    | \"setIsDragging\"\r\n    | \"setHoveredId\"\r\n    | \"setPlayingSample\"\r\n  > {\r\n  appMode: AppMode;\r\n  samples: SampleData[];\r\n  sampleToClone: Konva.Path | undefined;\r\n  //   sampleToClone: Shape<PathConfig> | undefined;\r\n  dragLayerRef: React.MutableRefObject<any>;\r\n  sampleTrayGroupRef: React.MutableRefObject<Group>;\r\n  stageY: number;\r\n}\r\n\r\nconst SampleLayer = ({\r\n  appMode,\r\n  samples,\r\n  sampleTrayGroupRef,\r\n  setSampleToClone,\r\n  addToCurrentCollection,\r\n  setIsDragging,\r\n  dragLayerRef,\r\n  sampleToClone,\r\n  setHoveredId,\r\n  setPlayingSample,\r\n  stageY,\r\n}: SampleLayerProperties): JSX.Element => {\r\n  useEffect(() => {\r\n    console.log(samples);\r\n  }, [samples]);\r\n\r\n  const sampleLayerRef = useRef(null);\r\n\r\n  const sampleLayerProps = {\r\n    x: canvasConfig.sampleContainerWidth + 20,\r\n    y: stageY,\r\n    ref: sampleLayerRef,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sampleLayerRef.current) {\r\n      if (appMode === \"editor\" || appMode === \"viewer\") {\r\n        sampleLayerRef.current.to({\r\n          opacity: 0,\r\n          duration: 0.1,\r\n        });\r\n      } else {\r\n        if (appMode === \"samples\") {\r\n          sampleLayerRef.current.to({\r\n            opacity: 1,\r\n            duration: 0.1,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [appMode]);\r\n\r\n  const onRectMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\r\n    console.log(\"DOING ON RECT MOUSE DOWN\");\r\n  };\r\n\r\n  const onRectMouseUp = (e: KonvaEventObject<MouseEvent>): void => {\r\n    console.log(samples.filter((s) => s.filename === e.target.attrs.id)[0]);\r\n    setPlayingSample(\r\n      samples.filter((s) => s.filename === e.target.attrs.id)[0]\r\n    );\r\n  };\r\n\r\n  const toEnriched = (samples: SampleData[]): EnrichedSample[] => {\r\n    return samples.map((sample) => {\r\n      const onMouseDown = onRectMouseDown;\r\n      const onDragStart = (e: KonvaEventObject<DragEvent>) => {\r\n        setSampleToClone(e.target as Konva.Path);\r\n        e.target.moveTo(dragLayerRef.current);\r\n        console.log(e.target);\r\n      };\r\n\r\n      const onDragEnd = (e: KonvaEventObject<DragEvent>) => {\r\n        console.log(\"GOT DRAG END AT CANVAS\");\r\n        setIsDragging(false);\r\n        // setIsDragging(false);\r\n        if (sampleTrayGroupRef.current) {\r\n          if (\r\n            intersect(\r\n              e.target.getClientRect(),\r\n              sampleTrayGroupRef.current.getClientRect()\r\n            )\r\n          ) {\r\n            addToCurrentCollection(sampleToClone.attrs.id);\r\n          }\r\n          if (sampleToClone && sampleTrayGroupRef.current) {\r\n            sampleTrayGroupRef.current.children[0].setAttr(\"fill\", \"red\");\r\n            sampleToClone.moveTo(sampleLayerRef.current);\r\n          }\r\n        }\r\n        sampleTrayGroupRef.current.children[0].setAttr(\r\n          \"fill\",\r\n          theme.transparent\r\n        );\r\n        addToCurrentCollection(e.target.attrs.id);\r\n      };\r\n\r\n      const onMouseEnter = (e: KonvaEventObject<MouseEvent>) =>\r\n        setHoveredId(e.target.attrs.id);\r\n      const onDragMove = (e: KonvaEventObject<DragEvent>) => {\r\n        if (sampleTrayGroupRef.current) {\r\n          if (\r\n            intersect(\r\n              e.target.getClientRect(),\r\n              sampleTrayGroupRef.current.getClientRect()\r\n            )\r\n          ) {\r\n            sampleTrayGroupRef.current.children[0].setAttr(\r\n              \"fill\",\r\n              theme.secondaryHover\r\n            );\r\n            console.log(\"INTERSECTED WITH TRAY\");\r\n          } else {\r\n            sampleTrayGroupRef.current.children[0].setAttr(\r\n              \"fill\",\r\n              theme.transparent\r\n            );\r\n            // setRectFill(theme.transparent);\r\n            console.log(\"NO INTERSECTION\");\r\n          }\r\n        }\r\n      };\r\n      const onMouseUp = onRectMouseUp;\r\n\r\n      const fill = theme.secondary;\r\n      // const fill = \"green\";\r\n      const draggable = true;\r\n\r\n      return {\r\n        ...sample,\r\n        fill,\r\n        draggable,\r\n        onDragMove,\r\n        onDragStart,\r\n        onDragEnd,\r\n        onMouseEnter,\r\n        onMouseDown,\r\n        onMouseUp,\r\n      };\r\n    });\r\n  };\r\n\r\n  const drawSamples = (): JSX.Element[] => {\r\n    if (enriched[0].fit) {\r\n      return enriched.map((sample) => {\r\n        return <SamplePath key={sample.id} sample={sample} />;\r\n      });\r\n    }\r\n  };\r\n  const enriched = useMemo(() => {\r\n    console.log(samples);\r\n    return toEnriched(samples);\r\n  }, [samples]);\r\n\r\n  return <Layer {...sampleLayerProps}>{drawSamples()}</Layer>;\r\n};\r\n\r\nexport default SampleLayer;\r\n\r\n// const SampleLayer = \"fff\";\r\n// export default SampleLayer;\r\n\r\nfunction intersect(r1: any, r2: any) {\r\n  return !(\r\n    r2.x > r1.x + r1.width ||\r\n    r2.x + r2.width < r1.x ||\r\n    r2.y > r1.y + r1.height ||\r\n    r2.y + r2.height < r1.y\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Circle, Group, Image, Layer, Rect } from \"react-konva\";\r\nimport Kosima from \"@classes/Kosima\";\r\nimport useImage from \"use-image\";\r\nimport theme from \"@static/theme\";\r\nimport { mapRange } from \"@utils\";\r\nimport { group } from \"console\";\r\nimport Konva from \"konva\";\r\nimport { ActionCreator, Actions } from \"easy-peasy\";\r\nimport { AppMode, CanvasModel } from \"../../Canvas\";\r\nimport canvasConfig from \"@static/canvasConfig\";\r\n\r\nconst WidgetsLayer = ({\r\n  widgetContainerRef,\r\n  appMode,\r\n}: {\r\n  appMode: AppMode;\r\n  widgetContainerRef: React.MutableRefObject<Konva.Group>;\r\n}): JSX.Element => {\r\n  const timeLineRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (widgetContainerRef.current) {\r\n      if (appMode === \"samples\" || appMode === \"viewer\") {\r\n        widgetContainerRef.current.to({\r\n          opacity: 0,\r\n          duration: 0.1,\r\n        });\r\n        timeLineRef.current.to({\r\n          opacity: 0,\r\n          duration: 0.1,\r\n        });\r\n      } else {\r\n        if (appMode === \"editor\") {\r\n          widgetContainerRef.current.to({\r\n            opacity: 1,\r\n            duration: 0.1,\r\n          });\r\n        }\r\n        if (appMode === \"editor\") {\r\n          timeLineRef.current.to({\r\n            opacity: 1,\r\n            duration: 0.1,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [appMode]);\r\n\r\n  const widgets = () => {\r\n    const widgCount = 4;\r\n    const arr = Array.from(Array(widgCount).keys());\r\n    const widgWidth = canvasConfig.widgetWidth;\r\n    const widgHeight = canvasConfig.widgetHeight;\r\n    const widgFill = theme.stroke;\r\n    // const widgFill = \"red\";\r\n    const groupX = (window.innerWidth - arr.length * widgWidth) / 2;\r\n    const groupY = (window.innerHeight - widgHeight) / 2;\r\n    const trackHeight = 80;\r\n    const trackGroupY = groupY - (50 + trackHeight);\r\n    const borderRectProps = {\r\n      fill: theme.secondary,\r\n      width: widgCount * widgWidth,\r\n      height: 2,\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Group x={groupX} y={trackGroupY} ref={timeLineRef}>\r\n          <Rect x={0} y={0} {...borderRectProps} />\r\n          <Rect x={0} y={trackHeight} {...borderRectProps} />\r\n        </Group>\r\n        <Group x={groupX} y={groupY} ref={widgetContainerRef}>\r\n          {arr.map((a, i) => {\r\n            const rectX = i * widgWidth;\r\n            return (\r\n              <Rect\r\n                key={i}\r\n                x={rectX}\r\n                fill={widgFill}\r\n                width={widgWidth}\r\n                height={widgHeight}\r\n                stroke={theme.secondary}\r\n                cornerRadius={theme.borderRadius}\r\n              ></Rect>\r\n            );\r\n          })}\r\n        </Group>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{widgets()}</>;\r\n};\r\n\r\nexport default WidgetsLayer;\r\n","import theme from \"@static/theme\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@css/DialogBox.scss\";\r\nimport classNames from \"classnames\";\r\nimport { useOnClickOutside } from \"@hooks\";\r\nimport { AppMode } from \"../Canvas\";\r\n\r\nconst Navigation = ({\r\n  appMode,\r\n  setAppMode,\r\n}: {\r\n  appMode: AppMode;\r\n  setAppMode: (mode: AppMode) => void;\r\n}): JSX.Element => {\r\n  const widthPercent = 25;\r\n  const leftPercent = 50 - widthPercent / 2;\r\n\r\n  const containerStyle = {\r\n    width: \"fit-content\",\r\n    height: \"1em\",\r\n    display: \"flex\",\r\n    // backgroundColor: theme.secondary,\r\n    // backgroundColor: theme.secondary,\r\n    borderRadius: theme.borderRadius,\r\n    position: \"absolute\",\r\n    // left: `${leftPercent}%`,\r\n    right: 0,\r\n    top: 0,\r\n    overflow: \"hidden\",\r\n    color: theme.textDark,\r\n    padding: \"1em\",\r\n    alignItems: \"center\",\r\n    margin: \"0.5em\",\r\n  } as React.CSSProperties;\r\n\r\n  return ReactDOM.createPortal(\r\n    <div style={containerStyle}>\r\n      {/* <div>nav1</div> */}\r\n      <NavItem setAppMode={setAppMode} appMode={appMode} />\r\n    </div>,\r\n    document.getElementById(\"navigation\") as HTMLDivElement\r\n  );\r\n};\r\n\r\nconst NavItem = ({\r\n  appMode,\r\n  setAppMode,\r\n}: {\r\n  appMode: AppMode;\r\n  setAppMode: (mode: AppMode) => void;\r\n}): JSX.Element => {\r\n  const navItemStyle = {\r\n    width: \"2em\",\r\n    height: \"2em\",\r\n    backgroundColor: theme.secondary,\r\n    borderRadius: \"50%\",\r\n  } as React.CSSProperties;\r\n  return (\r\n    <div\r\n      style={navItemStyle}\r\n      onClick={(e) => {\r\n        if (appMode !== \"viewer\") {\r\n          setAppMode(\"viewer\");\r\n        } else {\r\n          setAppMode(\"editor\");\r\n        }\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import appConfig from \"@static/appConfig\";\r\nimport CollectionContainer from \"./CanvasItems/CollectionContainer\";\r\nimport DialogBox from \"./DialogBox\";\r\nimport Konva from \"konva\";\r\nimport Kosima from \"@classes/Kosima\";\r\nimport KosimaRender from \"./CanvasItems/Layers/KosimaRender\";\r\nimport ReactPlayer from \"react-player\";\r\nimport SampleCollection from \"@classes/SampleCollection\";\r\nimport CollectionNav from \"./CanvasItems/CollectionNav\";\r\nimport SampleData from \"@classes/SampleData\";\r\nimport Tag from \"@classes/Tag\";\r\nimport tags from \"@static/tags\";\r\nimport theme from \"@static/theme\";\r\nimport { action, Action, computed, Computed, useLocalStore } from \"easy-peasy\";\r\nimport { Group, Layer, Rect, Stage } from \"react-konva\";\r\nimport { groupBy, mapRange } from \"@utils\";\r\nimport { KonvaEventObject } from \"konva/lib/Node\";\r\nimport { packSamples } from \"./rects\";\r\n// import { useDraggable } from \"@dnd-kit/core\";\r\nimport { useStoreState } from \"@hooks\";\r\nimport React, {\r\n  MutableRefObject,\r\n  useRef,\r\n  useState,\r\n  useMemo,\r\n  useEffect,\r\n} from \"react\";\r\nimport TagsLayer from \"./CanvasItems/Layers/TagsLayer\";\r\nimport canvasConfig from \"@static/canvasConfig\";\r\nimport { useKeyboardShortcut } from \"crooks\";\r\nimport SampleLayer from \"./CanvasItems/Layers/SampleLayer\";\r\nimport WidgetsLayer from \"./CanvasItems/Layers/WidgetsLayer\";\r\nimport Navigation from \"./CanvasItems/Navigation\";\r\n\r\nexport type AppMode = \"editor\" | \"samples\" | \"viewer\";\r\n\r\nexport interface CanvasModel {\r\n  activeCollection: SampleCollection;\r\n  activeSamples: Computed<CanvasModel, SampleData[]>;\r\n  addTag: Action<CanvasModel, string>;\r\n  addToCurrentCollection: Action<CanvasModel, string>;\r\n  allTags: Tag[];\r\n  appMode: AppMode;\r\n  availableTags: Computed<CanvasModel, Tag[]>;\r\n  draggingId: string;\r\n  hoveredId: string;\r\n  isDragging: boolean;\r\n  kosima: Kosima;\r\n  packedSamples: SampleData[];\r\n  playingSample: SampleData | undefined;\r\n  popOverOpen: boolean;\r\n  removeTag: Action<CanvasModel, string>;\r\n  sampleCollections: SampleCollection[];\r\n  sampleToClone: Konva.Path | undefined;\r\n  // sampleToClone: Shape<PathConfig> | undefined;\r\n  selectedTags: string[];\r\n  setActiveCollection: Action<CanvasModel, string>;\r\n  setAppMode: Action<CanvasModel, AppMode>;\r\n  setDraggingId: Action<CanvasModel, string>;\r\n  setHoveredId: Action<CanvasModel, string>;\r\n  setIsDragging: Action<CanvasModel, boolean>;\r\n  setPlayingSample: Action<CanvasModel, SampleData>;\r\n  setPopOverOpen: Action<CanvasModel, boolean>;\r\n  setSampleToClone: Action<CanvasModel, Konva.Path>;\r\n  // setSampleToClone: Action<CanvasModel, Shape<PathConfig>>;\r\n  setStageHeight: Action<CanvasModel, number>;\r\n  setStageY: Action<CanvasModel, number>;\r\n  setViewHeight: Action<CanvasModel, number>;\r\n  stageHeight: number;\r\n  stageY: number;\r\n  viewHeight: number;\r\n}\r\n// type CanvasState = StateMapper<_Pick<CanvasModel, _FilterKeys<CanvasModel, ActionTypes, \"default\">>>\r\n\r\nconst Canvas = ({ activeTags }: { activeTags: string[] }): JSX.Element => {\r\n  const samples = useStoreState((state) => state.samplesModel.samples);\r\n  const stageContainerRef = useRef<HTMLDivElement>();\r\n\r\n  interface SampleFit {\r\n    packed: SampleData[] | undefined;\r\n    rows: number | undefined;\r\n  }\r\n  const sampleLayerWidth = window.innerWidth / 3;\r\n  const packedSamples: SampleFit = useMemo(() => {\r\n    let packedRects = samples;\r\n    if (activeTags.length > 0) {\r\n      packedRects = packedRects.filter((r) =>\r\n        activeTags.every((t) => r.tags.includes(t))\r\n      );\r\n      console.log(packedRects);\r\n    }\r\n    packedRects = packSamples(packedRects, sampleLayerWidth, 5000).filter(\r\n      (s) => s.fit\r\n    );\r\n    let rows = 0;\r\n    if (packedRects[0]?.fit) {\r\n      const fits = samples.map((s) => s.fit).filter((f) => f);\r\n      const rowMap = groupBy(fits, \"y\");\r\n      rows = rowMap.size;\r\n    }\r\n    return {\r\n      packed: packedRects as SampleData[],\r\n      rows: rows,\r\n    } as SampleFit;\r\n  }, [samples, activeTags]);\r\n\r\n  const allTags = useMemo(() => {\r\n    let allTags = packedSamples.packed.map((s) => s.tags);\r\n    let flatTags = allTags.reduce(function (prev, next) {\r\n      return prev.concat(next);\r\n    });\r\n    let map = new Map();\r\n\r\n    tags.map((tag) => {\r\n      if (!map.has(tag)) {\r\n        map.set(tag, getNumMatches(flatTags, tag));\r\n      }\r\n    });\r\n    const finalTags = tags.map((t) => {\r\n      // console.log(map.get(t));\r\n      return new Tag(t, map.get(t));\r\n    });\r\n    console.log(flatTags);\r\n    console.log(finalTags);\r\n    return finalTags;\r\n  }, [packedSamples]);\r\n  // const availableTags = tags.map()\r\n  const sampleCollections = Array.from(Array(10).keys()).map(\r\n    (n, i) => new SampleCollection([], `Sample_Collection_${i}`)\r\n  );\r\n\r\n  const defaultCollection1 = new SampleCollection(\r\n    samples.slice(1, 6),\r\n    \"collection 1\"\r\n  );\r\n  const defaultCollection2 = new SampleCollection(\r\n    samples.slice(13, 19),\r\n    \"collection 2\"\r\n  );\r\n  const defaultCollection3 = new SampleCollection([], \"collection 3\");\r\n  const defaultCollection4 = new SampleCollection([], \"collection 4\");\r\n  const defaultCollection5 = new SampleCollection([], \"collection 5\");\r\n\r\n  const [state, actions] = useLocalStore<CanvasModel>(\r\n    () => ({\r\n      allTags: allTags,\r\n      appMode: canvasConfig.startMode,\r\n      // defaultCollections: [defaultCollection1, defaultCollection2, defaultCollection3, defaultCollection4, defaultCollection5],\r\n      sampleCollections: [\r\n        defaultCollection1,\r\n        defaultCollection2,\r\n        defaultCollection3,\r\n        defaultCollection4,\r\n        defaultCollection5,\r\n      ],\r\n      // sampleCollections: sampleCollections,\r\n      activeCollection: sampleCollections[0],\r\n      addToCurrentCollection: action((state, toAddId) => {\r\n        console.log(`ADDING ${toAddId} TO CURRENT COLLECTION`);\r\n        const toAdd = state.activeSamples.filter((s) => s.id === toAddId)[0];\r\n        state.activeCollection.samples.push(\r\n          state.activeSamples.filter((s) => s.id === toAddId)[0]\r\n        );\r\n      }),\r\n      sampleToClone: undefined,\r\n      setSampleToClone: action((state, toClone) => {\r\n        state.sampleToClone = toClone;\r\n      }),\r\n      setActiveCollection: action((state, collectionName) => {\r\n        state.activeCollection = state.sampleCollections.filter(\r\n          (c) => c.name === collectionName\r\n        )[0];\r\n      }),\r\n      availableTags: computed(\r\n        [(state) => state.activeSamples],\r\n        (activeSamples) => {\r\n          let allTags = activeSamples.map((s) => s.tags);\r\n          let flatTags = allTags.reduce(function (prev, next) {\r\n            return prev.concat(next);\r\n          });\r\n          let map = new Map();\r\n\r\n          tags.map((tag) => {\r\n            if (!map.has(tag)) {\r\n              map.set(tag, getNumMatches(flatTags, tag));\r\n            }\r\n          });\r\n          const finalTags = tags.map((t) => {\r\n            return new Tag(t, map.get(t));\r\n          });\r\n          return finalTags;\r\n        }\r\n      ),\r\n      selectedTags: [],\r\n      addTag: action((state, tagToAdd) => {\r\n        state.selectedTags.push(tagToAdd);\r\n      }),\r\n      removeTag: action((state, tagToRemove) => {\r\n        state.selectedTags = state.selectedTags.filter(\r\n          (t) => t !== tagToRemove\r\n        );\r\n      }),\r\n      kosima: new Kosima(),\r\n      hoveredId: \"\",\r\n      playingSample: undefined,\r\n      isDragging: false,\r\n      draggingId: \"\",\r\n      packedSamples: packedSamples.packed,\r\n      popOverOpen: false,\r\n      setPopOverOpen: action((state, open) => {\r\n        state.popOverOpen = open;\r\n      }),\r\n      activeSamples: computed(\r\n        [(state) => state.packedSamples, (state) => state.selectedTags],\r\n        (packedSamples, activeTags) => {\r\n          const active = packedSamples.filter((sample) =>\r\n            activeTags.every((t) => sample.tags.includes(t))\r\n          );\r\n          return packSamples(active, sampleLayerWidth, 5000);\r\n        }\r\n      ),\r\n      stageY: 0,\r\n      viewHeight: stageContainerRef.current?.getBoundingClientRect().height,\r\n      stageHeight: packedSamples.rows * appConfig.sampleHeight,\r\n      setStageHeight: action((state, height) => {\r\n        state.stageHeight = height;\r\n      }),\r\n      setViewHeight: action((state, height) => {\r\n        state.viewHeight = height;\r\n      }),\r\n      setStageY: action((state, y) => {\r\n        // console.log(y);\r\n        console.log(`view height ${state.viewHeight}`);\r\n        console.log(state.stageY);\r\n        const max = 0 - (state.stageHeight - state.viewHeight);\r\n        if (y > 0) {\r\n          console.log(y);\r\n          if (state.stageY < 0) {\r\n            console.log(\"doing first\");\r\n            state.stageY = Math.min(state.stageY + y, 0);\r\n            console.log(state.stageY);\r\n          }\r\n        } else {\r\n          if (state.stageY > max) {\r\n            console.log(state.stageY);\r\n            state.stageY += y;\r\n          }\r\n        }\r\n        console.log(state.stageHeight);\r\n      }),\r\n      setAppMode: action((state, mode) => {\r\n        state.appMode = mode;\r\n      }),\r\n      setIsDragging: action((state, isDragging) => {\r\n        state.isDragging = isDragging;\r\n      }),\r\n      setDraggingId: action((state, draggingId) => {\r\n        state.draggingId = draggingId;\r\n      }),\r\n      setHoveredId: action((state, hoveredId) => {\r\n        state.hoveredId = hoveredId;\r\n      }),\r\n      setPlayingSample: action((state, playingId) => {\r\n        state.playingSample = playingId;\r\n      }),\r\n    }),\r\n    [packedSamples, samples],\r\n    () => ({ devTools: false })\r\n  );\r\n  // const test = state.sampleToClone\r\n  const stageProps = {\r\n    width: window.innerWidth,\r\n    height: state.viewHeight,\r\n    onWheel: (e: KonvaEventObject<WheelEvent>) => {\r\n      console.log(e);\r\n      e.evt.preventDefault();\r\n      actions.setStageY(e.evt.deltaY);\r\n    },\r\n  };\r\n\r\n  const test = {\r\n    one: \"yes\",\r\n    two: \"no\",\r\n  };\r\n  const [currentSample, setCurrentRect] = useState<Konva.Path | null>(null);\r\n\r\n  const stageNodeRef = useRef<Konva.Stage>(null);\r\n  useEffect(() => {\r\n    actions.setViewHeight(\r\n      stageContainerRef.current?.getBoundingClientRect().height\r\n    );\r\n    stageNodeRef.current.container().style.backgroundColor = theme.primary;\r\n  }, [currentSample]);\r\n\r\n  useKeyboardShortcut({\r\n    keyCode: 32, //f\r\n    action: () => {\r\n      if (state.appMode === \"editor\") {\r\n        actions.setAppMode(\"samples\");\r\n      } else {\r\n        actions.setAppMode(\"editor\");\r\n      }\r\n    },\r\n    disabled: false, // This key is not required\r\n  });\r\n\r\n  const draggingRef = useRef<Konva.Path>(null);\r\n  const sampleTrayGroupRef = useRef<Konva.Group>(null);\r\n  const dragLayerRef = useRef(null);\r\n  const widgetContainerRef = useRef(null);\r\n\r\n  const containerStyle = {\r\n    // border: \"1px solid red\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  } as React.CSSProperties;\r\n\r\n  const containerHeight = window.innerHeight - 100;\r\n  let sampleTrayGroupY = (window.innerHeight - containerHeight) / 2;\r\n\r\n  useEffect(() => {\r\n    console.log(state.appMode);\r\n    if (widgetContainerRef.current) {\r\n      if (widgetContainerRef.current && state.appMode === \"editor\") {\r\n        const targY = widgetContainerRef.current.y();\r\n        const targX = widgetContainerRef.current.x();\r\n        const targHeight = widgetContainerRef.current.height();\r\n        sampleTrayGroupRef.current.to({\r\n          x: targX,\r\n          y: targY,\r\n          opacity: 1,\r\n        });\r\n        sampleTrayGroupRef.current.children[0].to({\r\n          height: canvasConfig.widgetHeight,\r\n          width: canvasConfig.widgetWidth,\r\n        });\r\n      } else if (widgetContainerRef.current && state.appMode === \"viewer\") {\r\n        sampleTrayGroupRef.current.to({\r\n          opacity: 0,\r\n          duration: 0.1,\r\n        });\r\n      } else {\r\n        sampleTrayGroupY = (window.innerHeight - containerHeight) / 2;\r\n        sampleTrayGroupRef.current.to({\r\n          x: canvasConfig.sampleCollectionGroupX,\r\n          y: (window.innerHeight - containerHeight) / 2,\r\n          opacity: 1,\r\n        });\r\n        sampleTrayGroupRef.current.children[0].to({\r\n          height: canvasConfig.sampleCollectionRectHeight,\r\n          width: canvasConfig.widgetWidth,\r\n        });\r\n      }\r\n    }\r\n  }, [state.appMode]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={containerStyle}\r\n        ref={stageContainerRef}\r\n        className={\"outer-tray\"}\r\n      >\r\n        <DialogBox\r\n          open={state.popOverOpen}\r\n          setOpen={(val) => actions.setPopOverOpen(val)}\r\n        />\r\n        {state.playingSample ? (\r\n          <ReactPlayer\r\n            playing={true}\r\n            height={0}\r\n            width={0}\r\n            progressInterval={1}\r\n            onProgress={({ played, playedSeconds, loaded, loadedSeconds }) => {\r\n              currentSample?.fill(\"white\");\r\n              console.log(state.playingSample);\r\n            }}\r\n            url={state.playingSample?.src}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Navigation\r\n          setAppMode={(mode) => actions.setAppMode(mode)}\r\n          appMode={state.appMode}\r\n        />\r\n        <Stage {...stageProps} ref={stageNodeRef}>\r\n          <Layer\r\n            ref={dragLayerRef}\r\n            onDragStart={(e) => {\r\n              state.sampleToClone.moveTo(dragLayerRef.current);\r\n              // toClone.moveTo(dragLayerRef.current);\r\n            }}\r\n            onDragEnd={(e) => {\r\n              console.log(e.target);\r\n              console.log(sampleTrayGroupRef);\r\n              // console.log(toClone);\r\n            }}\r\n            onDragMove={(e) => {\r\n              if (state.sampleToClone && sampleTrayGroupRef.current) {\r\n                if (\r\n                  intersect(\r\n                    draggingRef.current.getClientRect(),\r\n                    sampleTrayGroupRef.current.getClientRect()\r\n                  )\r\n                ) {\r\n                  sampleTrayGroupRef.current.getChildren()[0].attrs.fill =\r\n                    theme.secondaryHover;\r\n                  console.log(\"INTERSECTED WITH TRAY\");\r\n                } else {\r\n                  sampleTrayGroupRef.current.getChildren()[0].attrs.fill =\r\n                    theme.primaryInactive;\r\n                  console.log(\"NO INTERSECTION\");\r\n                }\r\n              }\r\n            }}\r\n          ></Layer>\r\n          <Layer>\r\n            <WidgetsLayer\r\n              widgetContainerRef={widgetContainerRef}\r\n              appMode={state.appMode}\r\n            />\r\n            <CollectionNav\r\n              sampleCollections={state.sampleCollections}\r\n              onMouseUp={(e: KonvaEventObject<MouseEvent>) => {\r\n                actions.setActiveCollection(e.target.attrs.id);\r\n              }}\r\n              activeCollection={state.activeCollection.name}\r\n            />\r\n            <Group\r\n              ref={sampleTrayGroupRef}\r\n              height={containerHeight}\r\n              y={sampleTrayGroupY}\r\n              x={canvasConfig.sampleCollectionGroupX}\r\n            >\r\n              <CollectionContainer\r\n                sampleCollection={state.activeCollection}\r\n                appMode={state.appMode}\r\n              />\r\n            </Group>\r\n          </Layer>\r\n          <SampleLayer\r\n            appMode={state.appMode}\r\n            samples={state.activeSamples}\r\n            sampleTrayGroupRef={sampleTrayGroupRef}\r\n            setSampleToClone={actions.setSampleToClone}\r\n            addToCurrentCollection={actions.addToCurrentCollection}\r\n            setIsDragging={actions.setIsDragging}\r\n            dragLayerRef={dragLayerRef}\r\n            sampleToClone={state.sampleToClone as Konva.Path}\r\n            setHoveredId={actions.setHoveredId}\r\n            setPlayingSample={actions.setPlayingSample}\r\n            stageY={state.stageY}\r\n          />\r\n          <TagsLayer\r\n            appMode={state.appMode}\r\n            tags={state.availableTags}\r\n            selectedTags={state.selectedTags}\r\n            removeTag={actions.removeTag}\r\n            addTag={actions.addTag}\r\n          />\r\n          <KosimaRender\r\n            kosima={state.kosima}\r\n            setPopOverOpen={actions.setPopOverOpen}\r\n          />\r\n        </Stage>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n\r\nfunction getNumMatches(array: any[], valToFind: string): number {\r\n  let numMatches = 0;\r\n  for (let i = 0, j = array.length; i < j; i += 1) {\r\n    if (array[i] === valToFind) {\r\n      numMatches += 1;\r\n    }\r\n  }\r\n  return numMatches;\r\n}\r\n\r\nfunction intersect(r1: any, r2: any): boolean {\r\n  return !(\r\n    r2.x > r1.x + r1.width ||\r\n    r2.x + r2.width < r1.x ||\r\n    r2.y > r1.y + r1.height ||\r\n    r2.y + r2.height < r1.y\r\n  );\r\n}\r\n\r\n// const dIndex = (1 / tags.length) * i * 2 * Math.PI;\r\n// const radius = 300;\r\n// let xPos = window.innerWidth - radius - 100;\r\n// // let xPos = window.innerWidth / 2;\r\n// let yPos = window.innerHeight / 2;\r\n// const xSin = -0.5 + Math.sin(dIndex);\r\n// const yCos = -0.5 + Math.cos(dIndex);\r\n\r\n// xPos += xSin * radius;\r\n// yPos += yCos * radius;\r\n// xPos += radius / 2;\r\n// yPos += radius / 2;\r\n","import \"@css/SampleTray.scss\";\r\n\r\nimport {\r\n  Action,\r\n  Thunk,\r\n  ThunkOn,\r\n  action,\r\n  thunk,\r\n  thunkOn,\r\n  useLocalStore,\r\n} from \"easy-peasy\";\r\nimport React, { FC, useEffect, useRef, useState } from \"react\";\r\n\r\nimport CloseButton from \"./CloseButton/CloseButton\";\r\nimport Heading from \"@components/UI/Heading\";\r\nimport IconButton from \"@components/UI/IconButton\";\r\nimport OverlayScrollbars from \"overlayscrollbars\";\r\nimport { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\nimport { Pane } from \"evergreen-ui\";\r\nimport Section from \"../UI/Section\";\r\nimport TagBar from \"./TagBar/TagBar\";\r\nimport classNames from \"classnames\";\r\nimport Canvas from \"./NewSampleTray/Canvas\";\r\n\r\n// import {useToggle} from \"@withvoid/melting-pot\"\r\n\r\nexport interface SampleTrayModel {\r\n  tags: string[];\r\n  addTag: Action<SampleTrayModel, string>;\r\n  removeTag: Action<SampleTrayModel, string>;\r\n}\r\n\r\nconst SampleTray = ({ active }: { active: boolean }): JSX.Element => {\r\n  const [state, actions] = useLocalStore<SampleTrayModel>(() => ({\r\n    tags: [] as string[],\r\n    addTag: action((_state, tag) => {\r\n      _state.tags.push(tag);\r\n    }),\r\n    removeTag: action((_state, tag) => {\r\n      _state.tags = _state.tags.filter((t: string) => t !== tag);\r\n    }),\r\n  }));\r\n\r\n  // const osComponentRef1 = React.createRef<OverlayScrollbarsComponent>();\r\n\r\n  const sampleTrayClass = classNames(\"sample-tray-container\", {\r\n    \"sample-tray-hidden\": active,\r\n  });\r\n\r\n  const containerRef = useRef<HTMLDivElement | undefined>();\r\n  const [tagFilter, setTagFilter] = useState(\"none\");\r\n\r\n  useEffect(() => {\r\n    console.log(`setting tray filter to ${tagFilter}`);\r\n    // console.log(tagFilter);\r\n  }, [tagFilter]);\r\n\r\n  return (\r\n    <Section className={sampleTrayClass}>\r\n      <Section\r\n        column={true}\r\n        backgroundColor=\"white\"\r\n        className={\"sample-tray-inner-container\"}\r\n      >\r\n        <Canvas activeTags={state.tags} />\r\n      </Section>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default SampleTray;\r\n","import SampleTray from \"@components/SampleTray/SampleTray\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Instrument = (): JSX.Element => {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Editor isSampleTrayActive={isSampleTrayActive} /> */}\r\n      <SampleTray active={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Instrument;\r\n","export const defaultLayout = [\r\n  // { i: \"artist\", x: 0, y: 0, w: 1, h: 1 },\r\n  { i: \"projectInfo\", x: 11, y: 0, w: 1, h: 1 },\r\n  { i: \"oneRecitalText\", x: 0, y: 2, w: 4, h: 1 },\r\n  { i: \"recitalTracks\", x: 0, y: 3, w: 5, h: 2 },\r\n  { i: \"arrow\", x: 5, y: 2, w: 1, h: 2 },\r\n  { i: \"threeRemixes\", x: 6, y: 2, w: 4, h: 1 },\r\n  { i: \"remixes\", x: 6, y: 3, w: 5, h: 2 },\r\n  { i: \"title\", x: 0, y: 0, w: 5, h: 1 },\r\n  { i: \"trackInfo\", x: 0, y: 5, w: 3, h: 6 },\r\n  { i: \"waveform\", x: 3, y: 5, w: 9, h: 6 },\r\n  // { i: \"time\", x: 6, y: 0, w: 2, h: 1 },\r\n  { i: \"violin\", x: 4, y: 1, w: 1, h: 2 },\r\n  //REMIXES\r\n\r\n  // { i: \"about\", x: 0, y: 1, w: 2, h: 1 },\r\n  //BOTTOM ROW\r\n];\r\n\r\nexport const remixLayout = [\r\n  // { i: \"artist\", x: 0, y: 0, w: 1, h: 1 },\r\n  { i: \"projectInfo\", x: 11, y: 0, w: 1, h: 1 },\r\n  { i: \"oneRecitalText\", x: 0, y: 2, w: 4, h: 2 },\r\n  { i: \"recitalTracks\", x: 0, y: 3, w: 5, h: 2 },\r\n  { i: \"arrow\", x: 5, y: 2, w: 1, h: 2 },\r\n  { i: \"threeRemixes\", x: 6, y: 2, w: 4, h: 1 },\r\n  { i: \"remixes\", x: 6, y: 3, w: 5, h: 2 },\r\n  { i: \"title\", x: 0, y: 0, w: 5, h: 1 },\r\n  { i: \"trackInfo\", x: 0, y: 5, w: 3, h: 6 },\r\n  { i: \"waveform\", x: 3, y: 5, w: 9, h: 6 },\r\n  // { i: \"time\", x: 6, y: 0, w: 2, h: 1 },\r\n  { i: \"violin\", x: 4, y: 1, w: 1, h: 2 },\r\n  //REMIXES\r\n\r\n  // { i: \"about\", x: 0, y: 1, w: 2, h: 1 },\r\n  //BOTTOM ROW\r\n];\r\n\r\nexport const aboutLayout = [\r\n  // { i: \"artist\", x: 0, y: 0, w: 1, h: 1 },\r\n  { i: \"projectInfo\", x: 11, y: 0, w: 5, h: 4 },\r\n  { i: \"oneRecitalText\", x: 0, y: 2, w: 4, h: 1 },\r\n  { i: \"recitalTracks\", x: 0, y: 3, w: 5, h: 2 },\r\n  { i: \"arrow\", x: 5, y: 2, w: 1, h: 2 },\r\n  { i: \"threeRemixes\", x: 6, y: 2, w: 4, h: 1 },\r\n  { i: \"remixes\", x: 6, y: 3, w: 5, h: 2 },\r\n  { i: \"title\", x: 0, y: 0, w: 5, h: 1 },\r\n  { i: \"trackInfo\", x: 0, y: 5, w: 3, h: 6 },\r\n  { i: \"waveform\", x: 3, y: 5, w: 9, h: 6 },\r\n  { i: \"violin\", x: 4, y: 1, w: 1, h: 2 },\r\n];\r\n\r\nexport const recitalLayout = [\r\n  { i: \"projectInfo\", x: 11, y: 0, w: 1, h: 1 },\r\n  { i: \"oneRecitalText\", x: 0, y: 2, w: 4, h: 1 },\r\n  { i: \"recitalTracks\", x: 0, y: 3, w: 5, h: 2 },\r\n  { i: \"arrow\", x: 5, y: 2, w: 1, h: 2 },\r\n  { i: \"threeRemixes\", x: 6, y: 2, w: 4, h: 1 },\r\n  { i: \"remixes\", x: 6, y: 3, w: 5, h: 2 },\r\n  { i: \"title\", x: 0, y: 0, w: 5, h: 1 },\r\n  { i: \"trackInfo\", x: 0, y: 5, w: 5, h: 6 },\r\n  { i: \"waveform\", x: 5, y: 5, w: 7, h: 6 },\r\n  { i: \"violin\", x: 4, y: 1, w: 1, h: 2 },\r\n];\r\n\r\n","import {\r\n  action,\r\n  Action,\r\n  computed,\r\n  Computed,\r\n  thunk,\r\n  Thunk,\r\n  thunkOn,\r\n  ThunkOn,\r\n} from \"easy-peasy\";\r\nimport History from \"@classes/History\";\r\nimport { Layout, Layouts } from \"react-grid-layout\";\r\nimport tracks from \"@static/tracks\";\r\nimport { Track } from \"@interfaces/Track\";\r\nimport { aboutLayout, recitalLayout, remixLayout } from \"@static/gridLayouts\";\r\n\r\nexport type HomeLayout = \"about\" | \"remix\" | \"recital\" | \"projectInfo\";\r\nexport type SSAppMode = \"intro\" | \"view\" | \"create\" | \"projectInfo\";\r\n\r\nexport interface HomeModel {\r\n  appMode: SSAppMode;\r\n  setAppMode: Action<HomeModel, SSAppMode>;\r\n  isPlaying: boolean;\r\n  setIsPlaying: Action<HomeModel, boolean>;\r\n  currentTrackId: string;\r\n  currentTrack: Computed<HomeModel, Track>;\r\n  currentAudioElement: Computed<HomeModel, HTMLAudioElement>;\r\n  setCurrentTrack: Action<HomeModel, string>;\r\n  currentLayout: Layout[];\r\n  setCurrentLayout: Action<HomeModel, HomeLayout>;\r\n}\r\nconst homeModel: HomeModel = {\r\n  appMode: \"intro\",\r\n  setAppMode: action((state, mode) => {\r\n    state.appMode = mode;\r\n  }),\r\n  isPlaying: false,\r\n  setCurrentTrack: action((state, payload) => {\r\n    console.log(\"SETTING CURRENT TRACK TO: \" + payload);\r\n    state.currentTrackId = payload;\r\n  }),\r\n  currentTrackId: tracks[0].title,\r\n  setIsPlaying: action((state, payload) => {\r\n    // console.log(\"SETTING CURRENT TRACK TO: \" + payload);\r\n    state.isPlaying = payload;\r\n  }),\r\n  currentTrack: computed(\r\n    (state) => tracks.filter((t) => t.title === state.currentTrackId)[0]\r\n  ),\r\n  currentAudioElement: computed((state) => {\r\n    const el = document.getElementById(\r\n      \"audio_\" + state.currentTrackId\r\n    ) as HTMLAudioElement;\r\n    // console.log(el);\r\n    return el;\r\n  }),\r\n  currentLayout: remixLayout,\r\n  setCurrentLayout: action((state, payload) => {\r\n    console.log(\"SETTING CURRENT TRACK TO: \" + payload);\r\n    let l: Layout[] = [];\r\n    if (payload === \"about\") {\r\n      l = aboutLayout;\r\n    } else if (payload === \"remix\") {\r\n      l = remixLayout;\r\n    } else if (payload === \"recital\") {\r\n      l = recitalLayout;\r\n    }\r\n    // state.currentLayout = payload;\r\n    state.currentLayout = l;\r\n  }),\r\n};\r\n\r\nexport default homeModel;\r\n","import homeModel from \"../model/homeModel\";\r\nimport { createStore, action } from \"easy-peasy\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst homeStore = createStore(homeModel, {\r\n  name: \"homeStore\",\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: [\r\n    // logger\r\n  ],\r\n  // initialState: { commentsModel: { comments }, postsModel: { posts } },\r\n});\r\n\r\n// if (process.env.NODE_ENV === \"development\") {\r\n//   if (module.hot) {\r\n//     module.hot.accept(\"../model/homeModel\", () => {\r\n//       homeStore.reconfigure(homeModel); // ðŸ‘ˆ Here is the magic\r\n//     });\r\n//   }\r\n// }\r\nexport default homeStore;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst FlexColumn = ({\r\n  children,\r\n  padding,\r\n  style,\r\n  width,\r\n  height,\r\n  id,\r\n  className,\r\n  justifyContent,\r\n}: {\r\n  children: JSX.Element | JSX.Element[];\r\n  padding?: string;\r\n  style?: React.CSSProperties;\r\n  width?: string;\r\n  height?: string;\r\n  id?: string;\r\n  // field: string;\r\n  justifyContent?: string;\r\n  // width?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\n  className?: string;\r\n}): JSX.Element => {\r\n  // const width = () =>{\r\n  //   if (width){\r\n  //     const t = (w*12)\r\n  //   }\r\n  // }\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: padding,\r\n        justifyContent: justifyContent ?? \"center\",\r\n        width,\r\n        height,\r\n        // width:\r\n        ...style,\r\n      }}\r\n      id={id}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlexColumn;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { motion, Variants } from \"framer-motion\";\r\nimport { useApp, useHover, usePlaylist } from \"@hooks\";\r\nimport FlexColumn from \"./FlexColumn\";\r\nimport theme from \"@static/theme\";\r\nimport { SSAppMode } from \"@model/homeModel\";\r\n\r\nconst Intro = (): JSX.Element => {\r\n  const { appMode } = useApp();\r\n\r\n  const variants = {\r\n    visible: {\r\n      //   height: \"200px\",\r\n      //   width: \"200px\",\r\n      opacity: 1,\r\n    },\r\n    hidden: {\r\n      opacity: 0,\r\n      transition: {\r\n        duration: 1,\r\n      },\r\n      pointerEvents: \"none\",\r\n    },\r\n  } as Variants;\r\n\r\n  const containerStyle = {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    backgroundColor: theme.primary,\r\n    position: \"absolute\",\r\n    zIndex: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  } as React.CSSProperties;\r\n\r\n  //   const listContainerStyle = {\r\n  //       width: \"auto\",\r\n  //   } as React.CSSProperties\r\n\r\n  return ReactDOM.createPortal(\r\n    <motion.div\r\n      className=\"modal\"\r\n      variants={variants}\r\n      animate={appMode === \"intro\" ? \"visible\" : \"hidden\"}\r\n      style={containerStyle}\r\n    >\r\n      <FlexColumn>\r\n        <MenuItem text={\"create\"} />\r\n        <MenuItem text={\"view\"} />\r\n        {/* <MenuItem text={\"hello\"} /> */}\r\n        {/* <MenuItem text={\"hello\"} /> */}\r\n      </FlexColumn>\r\n    </motion.div>,\r\n    document.getElementById(\"intro-modal\") as HTMLDivElement\r\n  );\r\n};\r\n\r\n// portal\r\nexport default Intro;\r\n\r\nconst MenuItem = ({ text }: { text: SSAppMode }): JSX.Element => {\r\n  const hoverRef = useRef(null);\r\n  const isHover = useHover(hoverRef);\r\n  const pointer = \">\";\r\n  const { setAppMode } = useApp();\r\n  const { playTrack, pauseTrack, startingTrack } = usePlaylist();\r\n\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    // backgroundColor: \"blue\",\r\n    border: \"1px solid red\",\r\n    fontSize: theme.mediumFont,\r\n  } as React.CSSProperties;\r\n\r\n  const pointerStyle = {\r\n    position: \"absolute\",\r\n    left: \"-30%\",\r\n    width: 10,\r\n    height: 10,\r\n    zIndex: 1000,\r\n    backgroundColor: \"yellow\",\r\n  } as React.CSSProperties;\r\n  //   git filter-branch --index-filter 'git rm -r --cached --ignore-unmatch public/Tracks' HEAD\r\n\r\n  return (\r\n    // <div style={containerStyle}>\r\n    <div style={containerStyle} ref={hoverRef}>\r\n      {isHover && <div style={pointerStyle}>{pointer}</div>}\r\n      <motion.div\r\n        whileHover={{\r\n          scale: 1.1,\r\n          textShadow: \"0px 0px 4px gray\",\r\n          backgroundColor: \"rgba(0,0,0,0)\",\r\n          color: \"rgba(255, 255, 255, 255)\",\r\n        }}\r\n        style={{\r\n          textAlign: \"center\",\r\n        }}\r\n        onClick={(e) => {\r\n          setAppMode(text);\r\n          playTrack(startingTrack);\r\n        }}\r\n      >\r\n        {text}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport theme from \"@static/theme\";\r\n\r\nconst ViewCard = ({\r\n  children,\r\n  border,\r\n}: {\r\n  children: JSX.Element | JSX.Element[];\r\n  border: boolean;\r\n}): JSX.Element => {\r\n  const noBorderArray = [\"arrow\"];\r\n\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    // backgroundColor: \"red\",\r\n    border: border ? \"2px solid black\" : \"\",\r\n    backgroundColor: theme.primary,\r\n    // border: \"2px solid black\",\r\n    overflow: \"hidden\",\r\n    borderRadius: theme.borderRadius,\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <div id=\"view-card\" className={\"view-card\"} style={containerStyle}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewCard;\r\n","import { usePlaylist, useSize } from \"@hooks\";\r\nimport theme from \"@static/theme\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { Layout, Layouts, Responsive, WidthProvider } from \"react-grid-layout\";\r\nimport ViewCard from \"./ViewCard\";\r\n\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\nconst GridLayout = ({\r\n  children,\r\n  className,\r\n  layout,\r\n}: {\r\n  children: JSX.Element[];\r\n  className: string;\r\n  layout: Layout[];\r\n}): JSX.Element => {\r\n  const cardContainerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  } as React.CSSProperties;\r\n\r\n  const l = layout.map((l) => {\r\n    return { ...l };\r\n  });\r\n  const [animate, setaAnimate] = useState(false);\r\n\r\n  const wrapped = useMemo(\r\n    () =>\r\n      layout.map((c, i) => {\r\n        const noBorderArray = [\"arrow\", \"recitalTracks\", \"remixes\"];\r\n        console.log(\"wrapping child\");\r\n        // console.log(c.i === \"arrow_container\");\r\n        const border = !noBorderArray.includes(c.i as string);\r\n        console.log(border, c.i);\r\n        const id = c.i;\r\n        return (\r\n          <div key={id} id={id}>\r\n            <motion.div\r\n              // initial={{\r\n              //   opacity: 0,\r\n              //   // translateX: i % 2 === 0 ? -50 : 50,\r\n              //   // translateX: `${getRandomIntInclusive(-500, 500)}`,\r\n              //   // translateX: -50,\r\n              //   // translateY: i % 2 === 0 ? -50 : 50\r\n              //   translateY: `${getRandomIntInclusive(-500, 500)}`,\r\n              //   // translateY: -50\r\n              // }}\r\n              // animate={{\r\n              //   opacity: 1,\r\n              //   translateX: 0,\r\n              //   translateY: 0,\r\n              // }}\r\n              // transition={{\r\n              //   duration: 1,\r\n              //   // initiates stagger effect by varying the transition delay for each element in the array\r\n              //   delay: i * 0.2,\r\n              // }}\r\n              //   key={id}\r\n              id={id}\r\n              style={cardContainerStyle}\r\n            >\r\n              <ViewCard border={border}>{children[i]}</ViewCard>\r\n            </motion.div>\r\n          </div>\r\n        );\r\n      }),\r\n    [layout]\r\n  );\r\n\r\n  let layouts: Layouts = {\r\n    lg: layout,\r\n    md: layout,\r\n    sm: layout,\r\n    xxs: layout,\r\n  };\r\n\r\n  const padding = 26;\r\n  const rows = 12;\r\n  const trueRowHeight = (window.innerHeight - 25 * rows) / 12;\r\n  // const trueRowHeight = (window.innerHeight - 20 * rows) / 12;\r\n  // https://github.com/react-grid-layout/react-grid-layout/issues/233#issuecomment-319995357\r\n  return (\r\n    <ResponsiveGridLayout\r\n      style={{ minWidth: \"100vw\", minHeight: \"100vh\" }}\r\n      onWidthChange={(e) => {\r\n        console.log(e);\r\n      }}\r\n      isDraggable={false}\r\n      className={className}\r\n      layouts={layouts}\r\n      // layouts={ll}\r\n      useCSSTransforms={animate}\r\n      margin={[padding, padding]}\r\n      compactType={null}\r\n      width={window.innerWidth}\r\n      rowHeight={trueRowHeight}\r\n      cols={{ lg: 12, md: 12, sm: 12, xxs: 12 }}\r\n      containerPadding={[padding, padding]}\r\n      verticalCompact={false}\r\n      // onLayoutChange={function () {}}\r\n    >\r\n      {wrapped}\r\n    </ResponsiveGridLayout>\r\n  );\r\n};\r\n(\"1=20px\");\r\n\r\nexport default GridLayout;\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\r\n}\r\n//288-384\r\n//96\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport Stats from \"three/examples/jsm/libs/stats.module\";\r\nimport { GUI } from \"three/examples/jsm/libs/dat.gui.module\";\r\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\r\n// import fragment from \"./fragment.glsl\";\r\n\r\n// import { OBJLoader } from \"three-obj-loader\";\r\nconst Video = (): JSX.Element => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xff0000);\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    // const camera = new THREE.OrthographicCamera(\r\n    //   75,\r\n    //   window.innerWidth / window.innerHeight,\r\n    //   0.1,\r\n    //   1000\r\n    // );\r\n    const width = window.innerWidth / 2;\r\n    const height = window.innerHeight / 2;\r\n    // const camera = new THREE.OrthographicCamera(\r\n    //   width / -2,\r\n    //   width / 2,\r\n    //   height / 2,\r\n    //   height / -2,\r\n    //   1,\r\n    //   1000\r\n    // );\r\n\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\r\n    renderer.setClearColor(0x000000, 0);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    // renderer.sortObjects = false;\r\n    document.body.appendChild(renderer.domElement);\r\n\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n    const gridHelper = new THREE.GridHelper(10, 10);\r\n    gridHelper.position.y = -1.5;\r\n    scene.add(gridHelper);\r\n\r\n    camera.position.z = 5;\r\n\r\n    window.addEventListener(\"resize\", onWindowResize, false);\r\n    function onWindowResize() {\r\n      // camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n      render();\r\n    }\r\n\r\n    const geometry = new THREE.PlaneGeometry(1, 1.54);\r\n    //550x850\r\n    // videoRef.current.\r\n    const videoTexture = new THREE.VideoTexture(videoRef.current);\r\n    videoTexture.format = THREE.RGBAFormat;\r\n    videoRef.current.play();\r\n    videoRef.current.setAttribute(\"crossorigin\", \"anonymous\");\r\n\r\n    const material = new THREE.ShaderMaterial({\r\n      transparent: true,\r\n      uniforms: {\r\n        map: { value: videoTexture },\r\n        // map: { value: webcamTexture },\r\n        keyColor: { value: [0.0, 1.0, 0.0] },\r\n        similarity: { value: 0.8 },\r\n        smoothness: { value: 0.0 },\r\n      },\r\n      vertexShader: vertexShader(),\r\n      fragmentShader: fragmentShader(),\r\n    });\r\n\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    cube.add(new THREE.BoxHelper(cube, 0xff0000));\r\n\r\n    // cube.rotateY(0.5);\r\n    // cube.scale.x = 4;\r\n    // cube.scale.y = 3;\r\n    // cube.scale.z = 4;\r\n    scene.add(cube);\r\n\r\n    const stats: Stats = Stats();\r\n    document.body.appendChild(stats.dom);\r\n\r\n    var data = {\r\n      keyColor: [0, 255, 0],\r\n      similarity: 0.8,\r\n      smoothness: 0.0,\r\n    };\r\n\r\n    const gui = new GUI();\r\n    gui\r\n      .addColor(data, \"keyColor\")\r\n      .onChange(() => updateKeyColor(data.keyColor));\r\n    gui\r\n      .add(data, \"similarity\", 0.0, 1.0)\r\n      .onChange(() => updateSimilarity(data.similarity));\r\n    gui\r\n      .add(data, \"smoothness\", 0.0, 1.0)\r\n      .onChange(() => updateSmoothness(data.smoothness));\r\n\r\n    function updateKeyColor(v: number[]) {\r\n      material.uniforms.keyColor.value = [v[0] / 255, v[1] / 255, v[2] / 255];\r\n    }\r\n    function updateSimilarity(v: number) {\r\n      material.uniforms.similarity.value = v;\r\n    }\r\n    function updateSmoothness(v: number) {\r\n      material.uniforms.smoothness.value = v;\r\n    }\r\n\r\n    const loader = new OBJLoader();\r\n    loader.load(\r\n      `${process.env.PUBLIC_URL}/Models/CHURCH_BALL_DEMO.obj`,\r\n      //   \"https://raw.githubusercontent.com/wyhinton/newseisolosite/master/public/Models/CHURCH_BALL_DEMO.obj\",\r\n      (obj) => {\r\n        scene.add(obj);\r\n        var material = new THREE.MeshBasicMaterial({\r\n          color: \"black\",\r\n          transparent: true,\r\n          opacity: 0.5,\r\n        });\r\n        console.log(obj);\r\n        const curch = scene.getObjectByName(\r\n          \"sagrada-familia-basilica-complete-mw.001\"\r\n        ) as THREE.Mesh;\r\n        const scale = 1.1;\r\n        curch.scale.set(scale, scale, scale);\r\n        curch.material = material;\r\n      }\r\n    );\r\n\r\n    function animate() {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n\r\n      render();\r\n\r\n      stats.update();\r\n    }\r\n\r\n    function render() {\r\n      renderer.render(scene, camera);\r\n    }\r\n    animate();\r\n    containerRef.current.appendChild(renderer.domElement);\r\n  }, []);\r\n\r\n  //   useEffect(() => {\r\n  //     containerRef.current.appendChild(renderer.domElement);\r\n  //   }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        // position: \"absolute\",\r\n        // top: 0,\r\n        // left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        // backgroundColor: \"red\",\r\n      }}\r\n      onClick={(e) => {\r\n        videoRef.current.play();\r\n      }}\r\n      ref={containerRef}\r\n    >\r\n      <video\r\n        ref={videoRef}\r\n        style={{\r\n          //   pointerEvents: \"none\",\r\n          position: \"absolute\",\r\n          //   top: 0,\r\n          top: \"100%\",\r\n          left: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          // backgroundColor: \"red\",\r\n        }}\r\n        muted\r\n        // loop\r\n        // crossOrigin=\"anonymous\"\r\n        src={`${process.env.PUBLIC_URL}/Videos/ROTOSCOPE_TEST_1.mp4`}\r\n      ></video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n\r\nfunction vertexShader() {\r\n  return `\r\n      varying vec2 vUv;\r\n      void main( void ) {     \r\n          vUv = uv;\r\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\r\n      }\r\n  `;\r\n}\r\nfunction fragmentShader() {\r\n  return `\r\n      uniform vec3 keyColor;\r\n      uniform float similarity;\r\n      uniform float smoothness;\r\n      varying vec2 vUv;\r\n      uniform sampler2D map;\r\n      void main() {\r\n          vec4 videoColor = texture2D(map, vUv);\r\n   \r\n          float Y1 = 0.299 * keyColor.r + 0.587 * keyColor.g + 0.114 * keyColor.b;\r\n          float Cr1 = keyColor.r - Y1;\r\n          float Cb1 = keyColor.b - Y1;\r\n          \r\n          float Y2 = 0.299 * videoColor.r + 0.587 * videoColor.g + 0.114 * videoColor.b;\r\n          float Cr2 = videoColor.r - Y2; \r\n          float Cb2 = videoColor.b - Y2; \r\n          \r\n          float blend = smoothstep(similarity, similarity + smoothness, distance(vec2(Cr2, Cb2), vec2(Cr1, Cb1)));\r\n          gl_FragColor = vec4(videoColor.rgb, videoColor.a * blend); \r\n      }\r\n  `;\r\n}\r\n\r\nfunction vertex2() {\r\n  return `\r\n      varying vec2 vUv;\r\n      void main( void ) {     \r\n          vUv = uv;\r\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\r\n      }\r\n  `;\r\n}\r\nfunction frag2() {\r\n  return `\r\n      uniform vec3 keyColor;\r\n      uniform float similarity;\r\n      uniform float smoothness;\r\n      varying vec2 vUv;\r\n      uniform sampler2D map;\r\n      void main() {\r\n          vec4 videoColor = texture2D(map, vUv);\r\n   \r\n          float Y1 = 0.299 * keyColor.r + 0.587 * keyColor.g + 0.114 * keyColor.b;\r\n          float Cr1 = keyColor.r - Y1;\r\n          float Cb1 = keyColor.b - Y1;\r\n          \r\n          float Y2 = 0.299 * videoColor.r + 0.587 * videoColor.g + 0.114 * videoColor.b;\r\n          float Cr2 = videoColor.r - Y2; \r\n          float Cb2 = videoColor.b - Y2; \r\n          \r\n          float blend = smoothstep(similarity, similarity + smoothness, distance(vec2(Cr2, Cb2), vec2(Cr1, Cb1)));\r\n          gl_FragColor = vec4(videoColor.rgb, videoColor.a * blend); \r\n      }\r\n  `;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Track } from \"@interfaces/Track\";\r\nimport tracks from \"@static/tracks\";\r\nimport FlexRow from \"@components/FlexRow\";\r\nimport FlexColumn from \"@components/FlexColumn\";\r\nimport theme from \"@static/theme\";\r\nimport { motion } from \"framer-motion\";\r\nimport { usePlaylist } from \"@hooks\";\r\nimport Video from \"../Graphics/Video\";\r\n\r\nconst TrackInfoWidget = ({ track }: { track: Track }): JSX.Element => {\r\n  const MainStyle = {\r\n    width: \"70%\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n  } as React.CSSProperties;\r\n  const [showVideo, setShowVideo] = useState(false);\r\n  const { currentTrack, isPlaying, isRecital, trackCategory } = usePlaylist();\r\n  useEffect(() => {\r\n    setShowVideo(trackCategory === \"recital\");\r\n  }, [trackCategory]);\r\n  return (\r\n    <FlexColumn width=\"100%\" height=\"100%\" justifyContent=\"flex-end\">\r\n      {showVideo && <Video></Video>}\r\n      {/* <div style={MainStyle} id=\"main-container\"> */}\r\n      {!showVideo && (\r\n        <>\r\n          <ArtistImage track={currentTrack} />\r\n          <Info track={currentTrack} />\r\n        </>\r\n      )}\r\n      {/* <ArtistImage track={currentTrack} /> */}\r\n      {/* <Info track={currentTrack} /> */}\r\n      {/* </div> */}\r\n    </FlexColumn>\r\n  );\r\n};\r\n\r\nexport default TrackInfoWidget;\r\n\r\nconst Info = ({ track }: { track: Track }): JSX.Element => {\r\n  const InfoContainerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n    marginTop: \"12em\",\r\n    borderRadius: theme.borderRadius,\r\n    // paddingLeft: \"7rem\",\r\n    padding: \"1rem\",\r\n    // fontSize: 20,\r\n  } as React.CSSProperties;\r\n  // const infoArray = [track.artist, track.link, track.link, track.category];\r\n  const { artist, link, category, title } = track;\r\n  const infoArray = [\r\n    [\"Artist\", artist],\r\n    [\"Link\", link],\r\n    [\"Category\", category],\r\n  ];\r\n  const t = title;\r\n  // const text\r\n\r\n  // useEffect(() => {\r\n  //   console.log(track);\r\n  // }, [track]);\r\n\r\n  return (\r\n    <FlexColumn style={InfoContainerStyle}>\r\n      <ul>\r\n        <li style={{ textAlign: \"center\", fontSize: \"x-large\" }}>{t}</li>\r\n        <li style={{ textAlign: \"center\", fontSize: \"medium\" }}>\r\n          {track.about}\r\n        </li>\r\n        {/* {infoArray.map((info, i) => {\r\n          const formatted = info[0] + \":\" + info[1];\r\n          return (\r\n            <motion.div\r\n              key={track.title}\r\n              initial={{\r\n                opacity: 0,\r\n                // translateX: i % 2 === 0 ? -50 : 50,\r\n                // translateX: `${getRandomIntInclusive(0, i*10)}`,\r\n                // translateX: -50,\r\n                // translateY: i % 2 === 0 ? -50 : 50\r\n                translateY: i * -10,\r\n                // translateY: -50\r\n              }}\r\n              animate={{\r\n                opacity: 1,\r\n                translateX: 0,\r\n                translateY: 0,\r\n              }}\r\n              transition={{\r\n                duration: 1,\r\n                // initiates stagger effect by varying the transition delay for each element in the array\r\n                delay: i * 0.2,\r\n              }}\r\n              //   key={id}\r\n            >\r\n              {formatted}\r\n            </motion.div>\r\n          );\r\n        })} */}\r\n      </ul>\r\n    </FlexColumn>\r\n  );\r\n};\r\n\r\nconst ArtistImage = ({ track }: { track: Track }): JSX.Element => {\r\n  const duration = 0.5;\r\n\r\n  const variants = {\r\n    normal: {\r\n      // backgroundColor: theme.primary,\r\n      // clipPath: \"circle(100px at center)\",\r\n      height: \"200px\",\r\n      width: \"200px\",\r\n    },\r\n    highlight: {\r\n      height: \"0px\",\r\n      width: \"0px\",\r\n      // clipPath: \" circle(0px at center)\",\r\n      transition: {\r\n        duration: duration,\r\n        // delayChildren: 0.5,\r\n      },\r\n    },\r\n  };\r\n  const size = 150; \r\n  const border = 10;\r\n  const containerStyle = {\r\n    width: size,\r\n    height: size,\r\n    margin: \"auto\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: \"50%\",\r\n    // top: \"50%\",\r\n    transform: \"translate(-50%, 10%)\",\r\n    overflow: \"hidden\",\r\n    // border: \"1px solid yellow\",\r\n  } as React.CSSProperties;\r\n  const [image, setImage] = useState(track.visual);\r\n  const [inTransition, setInTransition] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(track);\r\n  //   setInTransition(true);\r\n  //   const timer = setTimeout(() => {\r\n  //     console.log(\"This will run after 1 second!\");\r\n  //     setImage(track.visual);\r\n  //     setInTransition(false);\r\n  //   }, 1000);\r\n  //   // }, duration * 100);\r\n  //   return () => clearTimeout(timer);\r\n  // }, [track.title]);\r\n\r\n    useEffect(() => {\r\n    // console.log(track);\r\n    setImage(track.visual);\r\n    // setInTransition(true);\r\n    // const timer = setTimeout(() => {\r\n    //   console.log(\"This will run after 1 second!\");\r\n\r\n    //   setInTransition(false);\r\n    // }, 1000);\r\n    // // }, duration * 100);\r\n    // return () => clearTimeout(timer);\r\n  }, [track.title]);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   console.log(inTransition);\r\n  // }, [inTransition]);\r\n  const imageStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    // <div style={containerStyle}>\r\n    <motion.div\r\n      // variants={variants}\r\n      className={\"artist-image\"}\r\n      style={containerStyle}\r\n      // animate={inTransition ? \"highlight\" : \"normal\"}\r\n    >\r\n      <motion.div\r\n        variants={variants}\r\n        // height={200}\r\n        animate={inTransition ? \"highlight\" : \"normal\"}\r\n        style={{\r\n          border: \"1px solid red\",\r\n          overflow: \"hidden\",\r\n          // position: \"relative\",\r\n          // height: \"100%\",\r\n          width: size,\r\n          height: size,\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          zIndex: 10,\r\n\r\n          transform: \"translate(-50%,-50%)\",\r\n        }}\r\n      >\r\n        <motion.img\r\n          style={{\r\n            // width: \"80%\",\r\n            // height: \"80%\",\r\n            width: size - border,\r\n            height: size -border, \r\n            objectFit: \"cover\",\r\n            objectPosition: \"top\",\r\n            zIndex: 10,\r\n            position: \"absolute\",\r\n            borderRadius: \"50%\",\r\n            // overflow: \"hidden\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%,-50%)\",\r\n          }}\r\n          // animate={inTransition ? \"highlight\" : \"normal\"}\r\n          // variants={variants}\r\n          src={image}\r\n        ></motion.img>\r\n      </motion.div>\r\n      <img\r\n        src={`${process.env.PUBLIC_URL}/SVG/FrameTest.svg`}\r\n        style={imageStyle}\r\n      ></img>\r\n\r\n      {/* {innerContent()} */}\r\n    </motion.div>\r\n    // </div>\r\n  );\r\n};\r\n\r\n\r\n// const ArrowWidget = (): JSX.Element => {\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         height: \"100%\",\r\n//         width: \"100%\",\r\n//         display: \"flex\",\r\n//       }}\r\n//     >\r\n//       <svg\r\n//         id=\"Layer_1\"\r\n//         data-name=\"Layer 1\"\r\n//         xmlns=\"http://www.w3.org/2000/svg\"\r\n//         viewBox=\"0 0 72.9 83\"\r\n//         style={{ margin: \"auto\", height: \"100%\" }}\r\n//       >\r\n//         <path\r\n//           fill=\"yellow\"\r\n//           d=\"M70.8,38.8L5.2,0.9C3.1-0.3,0.5,1.2,0.5,3.6v75.8c0,2.4,2.6,3.9,4.7,2.7l65.6-37.9C72.9,43,72.9,40,70.8,38.8z\"\r\n//           // transform=\"translate(-106.09 -141)\"\r\n//         />\r\n//       </svg>{\" \"}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ArrowWidget;\r\n\r\n\r\n// const ArtistImage = ({ track }: { track: Track }): JSX.Element => {\r\n//   const duration = 0.5;\r\n\r\n//   const variants = {\r\n//     normal: {\r\n//       // backgroundColor: theme.primary,\r\n//       // clipPath: \"circle(100px at center)\",\r\n//       height: \"200px\",\r\n//       width: \"200px\",\r\n//     },\r\n//     highlight: {\r\n//       height: \"0px\",\r\n//       width: \"0px\",\r\n//       // clipPath: \" circle(0px at center)\",\r\n//       transition: {\r\n//         duration: duration,\r\n//         // delayChildren: 0.5,\r\n//       },\r\n//     },\r\n//   };\r\n\r\n//   const containerStyle = {\r\n//     width: 200,\r\n//     height: 200,\r\n//     margin: \"auto\",\r\n//     position: \"absolute\",\r\n//     top: 0,\r\n//     left: \"50%\",\r\n//     // top: \"50%\",\r\n//     transform: \"translate(-50%, 10%)\",\r\n//     overflow: \"hidden\",\r\n//     // border: \"1px solid yellow\",\r\n//   } as React.CSSProperties;\r\n//   const [image, setImage] = useState(track.visual);\r\n//   const [inTransition, setInTransition] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     // console.log(track);\r\n//     setInTransition(true);\r\n//     const timer = setTimeout(() => {\r\n//       console.log(\"This will run after 1 second!\");\r\n//       setImage(track.visual);\r\n//       setInTransition(false);\r\n//     }, 1000);\r\n//     // }, duration * 100);\r\n//     return () => clearTimeout(timer);\r\n//   }, [track.title]);\r\n\r\n//   // useEffect(() => {\r\n//   //   console.log(inTransition);\r\n//   // }, [inTransition]);\r\n//   const imageStyle = {\r\n//     width: \"100%\",\r\n//     height: \"100%\",\r\n//     position: \"absolute\",\r\n//     left: \"50%\",\r\n//     top: \"50%\",\r\n//     transform: \"translate(-50%,-50%)\",\r\n//   } as React.CSSProperties;\r\n\r\n//   return (\r\n//     // <div style={containerStyle}>\r\n//     <motion.div\r\n//       // variants={variants}\r\n//       className={\"artist-image\"}\r\n//       style={containerStyle}\r\n//       // animate={inTransition ? \"highlight\" : \"normal\"}\r\n//     >\r\n//       <motion.div\r\n//         variants={variants}\r\n//         // height={200}\r\n//         animate={inTransition ? \"highlight\" : \"normal\"}\r\n//         style={{\r\n//           border: \"1px solid red\",\r\n//           overflow: \"hidden\",\r\n//           // position: \"relative\",\r\n//           // height: \"100%\",\r\n//           width: \"200px\",\r\n//           height: \"200px\",\r\n//           position: \"absolute\",\r\n//           top: \"50%\",\r\n//           left: \"50%\",\r\n//           zIndex: 10,\r\n\r\n//           transform: \"translate(-50%,-50%)\",\r\n//         }}\r\n//       >\r\n//         <motion.img\r\n//           style={{\r\n//             // width: \"80%\",\r\n//             // height: \"80%\",\r\n//             width: \"180px\",\r\n//             height: \"180px\",\r\n//             objectFit: \"cover\",\r\n//             objectPosition: \"top\",\r\n//             zIndex: 10,\r\n//             position: \"absolute\",\r\n//             borderRadius: \"50%\",\r\n//             // overflow: \"hidden\",\r\n//             left: \"50%\",\r\n//             top: \"50%\",\r\n//             transform: \"translate(-50%,-50%)\",\r\n//           }}\r\n//           // animate={inTransition ? \"highlight\" : \"normal\"}\r\n//           // variants={variants}\r\n//           src={image}\r\n//         ></motion.img>\r\n//       </motion.div>\r\n//       <img\r\n//         src={`${process.env.PUBLIC_URL}/SVG/FrameTest.svg`}\r\n//         style={imageStyle}\r\n//       ></img>\r\n\r\n//       {/* {innerContent()} */}\r\n//     </motion.div>\r\n//     // </div>\r\n//   );\r\n// };\r\n","import React, { Suspense, useRef } from \"react\";\r\nimport { Canvas, useThree, useFrame, useLoader } from \"react-three-fiber\";\r\n// import { useGLTF } from \"drei\";\r\nimport {\r\n  CubeTextureLoader,\r\n  CubeCamera,\r\n  WebGLCubeRenderTarget,\r\n  RGBFormat,\r\n  LinearMipmapLinearFilter,\r\n  Mesh,\r\n  Material,\r\n  Group,\r\n  Color,\r\n  TextureLoader,\r\n} from \"three\";\r\nimport {\r\n  OrbitControls,\r\n  OrthographicCamera,\r\n  useGLTF,\r\n  useProgress,\r\n} from \"@react-three/drei\";\r\nimport { GLTF as GLTFThree } from \"three/examples/jsm/loaders/GLTFLoader\";\r\ndeclare module \"three-stdlib\" {\r\n  export interface GLTF extends GLTFThree {\r\n    nodes: Record<string, Mesh>;\r\n    materials: Record<string, Material>;\r\n  }\r\n}\r\n\r\nconst Violin = () => {\r\n  const { nodes } = useGLTF(\r\n    `${process.env.PUBLIC_URL}/Models/realistic-violin.glb`\r\n  );\r\n  const matcapTexture = useLoader(\r\n    TextureLoader,\r\n    `${process.env.PUBLIC_URL}/Textures/matcapred.jpg`\r\n  );\r\n\r\n  const group = useRef<Group>();\r\n  const target = nodes.V as unknown as Group;\r\n  const children = target.children as Mesh[];\r\n  useFrame(() => {\r\n    group.current.rotation.y += 0.01;\r\n  });\r\n\r\n  return (\r\n    <group ref={group}>\r\n      {children.map((c, i) => {\r\n        return (\r\n          <mesh key={i} geometry={c.geometry} material={c.material}>\r\n            <meshMatcapMaterial\r\n              attach=\"material\"\r\n              color=\"yellow\"\r\n              matcap={matcapTexture}\r\n            />\r\n          </mesh>\r\n        );\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n\r\n// Loads the skybox texture and applies it to the scene.\r\n\r\n// Lights\r\nconst ViolinWidget = (): JSX.Element => {\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <Canvas className=\"canvas\">\r\n        <OrthographicCamera makeDefault zoom={10.1} position={[0, 0, 20]} />\r\n        <OrbitControls />\r\n        {/* <Sphere /> */}\r\n        <Violin />\r\n        {/* <SkyBox /> */}\r\n      </Canvas>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default React.memo(ViolinWidget);\r\n\r\nfunction Loader() {\r\n  const { active, progress, errors, item, loaded, total } = useProgress();\r\n  return <section>{progress} % loaded</section>;\r\n}\r\n","import THREE, {\r\n  CubeTextureLoader,\r\n  Mesh,\r\n  Material,\r\n  Group,\r\n  Color,\r\n  Vector2,\r\n  LatheGeometry,\r\n  Vector3,\r\n  ShaderMaterial,\r\n  UniformsUtils,\r\n  TextureLoader,\r\n  FileLoader,\r\n} from \"three\";\r\n\r\nconst opts = {\r\n  red: 0.5,\r\n  green: 0.5,\r\n  blue: 0.5,\r\n  shade: 20,\r\n};\r\nexport const shaderArgs = {\r\n  //   extensions: {\r\n  //     derivatives: \"#extension GL_OES_standard_derivatives : enable\",\r\n  //   },\r\n  uniforms: {\r\n    uTime: { value: 0 },\r\n    uColor: { value: new Vector3(opts.red, opts.green, opts.blue) }, // Color Correction\r\n    uShade: { value: opts.shade },\r\n  },\r\n  vertexShader: /*glsl*/ `\r\n    varying vec3 vNormal;\r\n    void main() {\r\n      vNormal = normalize(normalMatrix * normal);\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n    } \r\n  `,\r\n  fragmentShader: /*glsl*/ `\r\n    varying vec3 vNormal;\r\n    uniform float uTime;\r\n    uniform float uShade;\r\n    uniform vec3 uColor;\r\n    uniform vec2 vUv;\r\n    void main() {\r\n      gl_FragColor = vec4(vNormal * (sin(vNormal.z * uShade + uTime * 3.) * .5 + .5) + uColor, 1.);\r\n    } \r\n  `,\r\n};\r\n","import React, {\r\n  RefObject,\r\n  Suspense,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport theme from \"@static/theme\";\r\nimport { GLTF as GLTFThree } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport glsl from \"babel-plugin-glsl/macro\";\r\n\r\nimport { extend, useThree, useFrame, useLoader } from \"react-three-fiber\";\r\nimport THREE, {\r\n  CubeTextureLoader,\r\n  Mesh,\r\n  Material,\r\n  Group,\r\n  Color,\r\n  Vector2,\r\n  LatheGeometry,\r\n  Vector3,\r\n  ShaderMaterial,\r\n  UniformsUtils,\r\n  TextureLoader,\r\n  FileLoader,\r\n} from \"three\";\r\nimport { useAsset } from \"use-asset\";\r\nimport { useControls } from \"leva\";\r\nimport { OrbitControls as OC } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { Track } from \"@interfaces/Track\";\r\nimport { getRandomIntInclusive, mapRange } from \"@utils\";\r\nimport { SubsurfaceScatteringShader } from \"three/examples/jsm/shaders/SubsurfaceScatteringShader.js\";\r\nimport { shaderArgs } from \"./SDFTest\";\r\n// https://codesandbox.io/s/yoga-r3f-lgl0j\r\n\r\ndeclare module \"three-stdlib\" {\r\n  export interface GLTF extends GLTFThree {\r\n    nodes: Record<string, Mesh>;\r\n    materials: Record<string, Material>;\r\n  }\r\n}\r\n\r\nconst numPoints = 1000;\r\nclass ColorMaterial extends ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      uniforms: {\r\n        time: { value: 1.0 },\r\n        color: { value: new Color(0.2, 0.0, 0.1) },\r\n      },\r\n      vertexShader: `varying vec2 vUv;\r\n      void main() {\r\n        vUv = uv;\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n      }`,\r\n      fragmentShader: `uniform float time;\r\n      uniform vec3 color;\r\n      varying vec2 vUv;\r\n      void main() {\r\n        gl_FragColor.rgba = vec4(0.5 + 0.3 * sin(vUv.yxx + time) + color, 1.0);\r\n      }`,\r\n    });\r\n  }\r\n  get color() {\r\n    return this.uniforms.color.value;\r\n  }\r\n  get time() {\r\n    return this.uniforms.time.value;\r\n  }\r\n  set time(v) {\r\n    this.uniforms.time.value = v;\r\n  }\r\n}\r\nextend({ ColorMaterial });\r\n\r\nconst AudioForm = ({ track }: { track: Track }) => {\r\n  const pathRef = useRef<Mesh>();\r\n  const points = Array.from(Array(numPoints).keys()).map((n, i) => {\r\n    const dist = 10;\r\n    const y = i * dist;\r\n    const x = getRandomIntInclusive(0, 30);\r\n    return new Vector2(x, y);\r\n  });\r\n  //   const samplePoints = fetch(`${process.env.PUBLIC_URL}/TrackData/TRACKS_DATA.json`)\r\n  const data = useAsset(async () => {\r\n    // Any async task can run in here, fetch requests, parsing, workers, promises, ...\r\n    const res = await fetch(\r\n      `${process.env.PUBLIC_URL}/TrackData/TRACKS_DATA.json`\r\n    );\r\n    // const mapedData = res\r\n    // const r = res.json();\r\n    // const pm =\r\n    return await res.json();\r\n  });\r\n  // console.log(data);\r\n\r\n  const [audioPoints, setAudioPoints] = useState<Vector2[]>([]);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(data);\r\n  //   const pm = data.demo.map((p: [number, number], i) => {\r\n  //     // const y = mapRange(p[0], 0, 2.5, 0, 3000);\r\n  //     const y = i * 10;\r\n  //     const x = mapRange(p[1], -6000, 12638, 50, 100);\r\n  //     return new Vector2(x, y);\r\n  //   });\r\n  //   // console.log(pm);\r\n  //   setAudioPoints(pm);\r\n  //   // console.log(pm);\r\n  // }, [data]);\r\n\r\n  //   const scene = useAsset(\r\n  //     () =>\r\n  //       new Promise(async (res) => {\r\n  //         const snapshot = await db.ref(\"/room/\" + params.id).once(\"value\")\r\n  //         new THREE.ObjectLoader().parse(snapshot.val().scene, res)\r\n  //       }),\r\n  //     [params.id],\r\n  //   )\r\n\r\n  const latheGeo = new LatheGeometry(points, 10);\r\n  // console.log(latheGeo);\r\n  // https://codesandbox.io/s/cc-1-iso-simple-custom-shader-kksbs?file=/src/IsoScene.tsx\r\n  // https://codesandbox.io/s/iridescent-shader-material-l1vdv?file=/src/App.js:433-438\r\n  // https://codesandbox.io/s/react-three-fiber-custom-geometry-with-fragment-shader-material-2kk2t\r\n  // https://codesandbox.io/s/github/onion2k/r3f-by-example/tree/develop/examples/materials/glowing-torus\r\n  // https://codesandbox.io/s/earth-day-night-i79md?file=/src/models/Halo.jsx\r\n  // https://codesandbox.io/s/custom-material-shader-with-r3f-w170k?file=/src/ShaderObject.tsx\r\n  // const opts = useControls({\r\n  //   red: {\r\n  //     min: -1,\r\n  //     max: 1,\r\n  //     value: 0.3,\r\n  //   },\r\n  //   green: {\r\n  //     min: -1,\r\n  //     max: 1,\r\n  //     value: 0.2,\r\n  //   },\r\n  //   blue: {\r\n  //     min: -1,\r\n  //     max: 1,\r\n  //     value: -0.2,\r\n  //   },\r\n  //   shade: {\r\n  //     min: 3,\r\n  //     max: 30,\r\n  //     value: 20,\r\n  //   },\r\n  //   animate: true,\r\n  // });\r\n\r\n  //   useFrame(() => {\r\n  //     if (opts.animate) {\r\n  //       if (pathRef.current) {\r\n  //         //   @ts-ignore\r\n  //         pathRef.current.material.uniforms.uTime.value += 0.02;\r\n  //       }\r\n  //     }\r\n  //     //@ts-ignore\r\n  //     pathRef.current.material.uniforms.uColor.value = new Vector3(\r\n  //       opts.red,\r\n  //       opts.green,\r\n  //       opts.blue\r\n  //     );\r\n  //     //@ts-ignore\r\n  //     pathRef.current.material.uniforms.uShade.value = opts.shade;\r\n  //   });\r\n\r\n  // const shaderArgs = useMemo(\r\n  //   () => ({\r\n  //     uniforms: {\r\n  //       uTime: { value: 0 },\r\n  //       uColor: { value: new Vector3(opts.red, opts.green, opts.blue) }, // Color Correction\r\n  //       uShade: { value: opts.shade },\r\n  //     },\r\n  //     vertexShader: /*glsl*/ `\r\n  //     varying vec3 vNormal;\r\n  //     void main() {\r\n  //       vNormal = normalize(normalMatrix * normal);\r\n  //       gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n  //     }\r\n  //   `,\r\n  //     fragmentShader: /*glsl*/ `\r\n  //     varying vec3 vNormal;\r\n  //     uniform float uTime;\r\n  //     uniform float uShade;\r\n  //     uniform vec3 uColor;\r\n  //     void main() {\r\n  //       gl_FragColor = vec4(vNormal * (sin(vNormal.z * uShade + uTime * 3.) * .5 + .5) + uColor, 1.);\r\n  //     }\r\n  //   `,\r\n  //   }),\r\n  //   [opts]\r\n  // );\r\n\r\n  const subSurf = SubsurfaceScatteringShader;\r\n  const uniforms = UniformsUtils.clone(subSurf.uniforms);\r\n\r\n  const imgTexture = useLoader(\r\n    TextureLoader,\r\n    `${process.env.PUBLIC_URL}/Textures/white.jpg`\r\n  );\r\n  const thicknessTexture = useLoader(\r\n    TextureLoader,\r\n    `${process.env.PUBLIC_URL}/Textures/bunny_thickness.jpg`\r\n  );\r\n\r\n  uniforms[\"map\"].value = imgTexture;\r\n\r\n  uniforms[\"diffuse\"].value = new Vector3(1.0, 0.2, 0.2);\r\n  uniforms[\"shininess\"].value = 500;\r\n\r\n  uniforms[\"thicknessMap\"].value = thicknessTexture;\r\n  uniforms[\"thicknessColor\"].value = new Vector3(0.5, 0.3, 0.0);\r\n  uniforms[\"thicknessDistortion\"].value = 0.1;\r\n  uniforms[\"thicknessAmbient\"].value = 0.4;\r\n  uniforms[\"thicknessAttenuation\"].value = 0.8;\r\n  uniforms[\"thicknessPower\"].value = 2.0;\r\n  uniforms[\"thicknessScale\"].value = 16.0;\r\n\r\n  const sShader = {\r\n    uniforms: uniforms,\r\n    vertexShader: subSurf.vertexShader,\r\n    fragmentShader: subSurf.fragmentShader,\r\n    lights: true,\r\n  };\r\n  // sShader.extensions.derivatives = true;\r\n\r\n  const groupRef = useRef<Group>();\r\n\r\n  useEffect(() => {\r\n    if (groupRef) {\r\n      groupRef.current.rotation.x = 1.5708;\r\n      groupRef.current.rotation.y = 3.1416;\r\n      groupRef.current.rotation.z = 1.5708;\r\n      groupRef.current.position.x = -345;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <group ref={groupRef}>\r\n      <mesh\r\n        geometry={latheGeo}\r\n        ref={pathRef}\r\n        onPointerDown={(e) => {\r\n          // console.log(e);\r\n          // console.log(e.point);\r\n          // console.log(e.offsetX);\r\n          //           let vector = new Vector3();\r\n          // vector.set(\r\n          //     (e.clientX / window.innerWidth) * 2 - 1,\r\n          //     - (e.clientY / window.innerHeight) * 2 + 1,\r\n          //     0\r\n        }}\r\n      >\r\n        {/* <meshPhongMaterial\r\n          attach=\"material\"\r\n          color=\"#f3f3f3\"\r\n          emissive={new Color(1, 0, 0)}\r\n          shininess={100}\r\n          specular={new Color(0, 0.5, 0)}\r\n        /> */}\r\n        {/* <meshNormalMaterial /> */}\r\n        {/* <shaderMaterial\r\n          attach=\"material\"\r\n          color=\"hotpink\"\r\n          args={[ColorMaterial]}\r\n        /> */}\r\n        {/* <colorMaterial color=\"#FF0000\" /> */}\r\n        <shaderMaterial args={[shaderArgs]} />\r\n        {/* <shaderMaterial args={[sShader]} /> */}\r\n        {/* <shaderMaterial args={[shaderArgs]} /> */}\r\n        {/* <shaderMaterial args={[ColorMaterial]} /> */}\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default AudioForm;\r\n\r\n// declare global {\r\n//   namespace JSX {\r\n//     interface IntrinsicElements {\r\n//       colorMaterial: ColorMaterialProps;\r\n//     }\r\n//   }\r\n// }\r\n","import React, { RefObject, Suspense, useEffect, useMemo, useRef } from \"react\";\r\nimport theme from \"@static/theme\";\r\nimport { Bloom, EffectComposer } from \"@react-three/postprocessing\";\r\nimport { GLTF as GLTFThree } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { KernelSize } from \"postprocessing\";\r\nimport glsl from \"babel-plugin-glsl/macro\";\r\nimport {\r\n  OrbitControls,\r\n  OrthographicCamera,\r\n  shaderMaterial,\r\n  useGLTF,\r\n  useScroll,\r\n} from \"@react-three/drei\";\r\nimport {\r\n  Canvas,\r\n  extend,\r\n  useFrame,\r\n  ReactThreeFiber,\r\n  useThree,\r\n} from \"react-three-fiber\";\r\n// import { useGLTF } from \"drei\";\r\nimport THREE, {\r\n  CubeTextureLoader,\r\n  CubeCamera,\r\n  WebGLCubeRenderTarget,\r\n  RGBFormat,\r\n  LinearMipmapLinearFilter,\r\n  Mesh,\r\n  Material,\r\n  Group,\r\n  Color,\r\n  InstancedMesh,\r\n  Object3D,\r\n  Vector2,\r\n  LatheGeometry,\r\n  Vector3,\r\n  ShaderMaterial,\r\n} from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { OrbitControls as OC } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { Track } from \"@interfaces/Track\";\r\nimport AudioForm from \"./Widgets/WaveformWidget/AudioForm\";\r\n// https://codesandbox.io/s/yoga-r3f-lgl0j\r\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n// import { GLTF } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n// import { GLTF } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { OrbitControls as CustomControls } from \"./Graphics/CameraControls/CustomControls\";\r\n// import { NewControls } from \"./Graphics/CameraControls/NewControls\";\r\nimport { useRenderRoot } from \"leva/dist/declarations/src/components/Leva\";\r\n\r\ndeclare module \"three-stdlib\" {\r\n  export interface GLTF extends GLTFThree {\r\n    nodes: Record<string, Mesh>;\r\n    materials: Record<string, Material>;\r\n  }\r\n}\r\n\r\nconst tempObject = new Object3D();\r\n\r\nconst Grid = ({ track }: { track: Track }): JSX.Element => {\r\n  const items = Array.from(Array(50).keys());\r\n  const meshRef = useRef<InstancedMesh>();\r\n  const count = 100;\r\n  const gap = 50;\r\n\r\n  const audioElem = useRef<HTMLAudioElement>();\r\n  useEffect(() => {\r\n    audioElem.current = document.getElementById(\r\n      \"audio_\" + track.title\r\n    ) as HTMLAudioElement;\r\n  }, [track.title]);\r\n\r\n  useFrame((state) => {\r\n    if (meshRef.current) {\r\n      // const time = state.clock.getElapsedTime();\r\n      const time = audioElem.current.currentTime;\r\n      let i = 0;\r\n      for (let x = 0; x < count; x++) {\r\n        const id = i++;\r\n        tempObject.position.set(x * gap, 0, -1);\r\n\r\n        tempObject.updateMatrix();\r\n        meshRef.current.setMatrixAt(id, tempObject.matrix);\r\n\r\n        meshRef.current.instanceMatrix.needsUpdate = true;\r\n      }\r\n\r\n      meshRef.current.instanceMatrix.needsUpdate = true;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group>\r\n      <instancedMesh\r\n        ref={meshRef}\r\n        args={[null, null, 5000]}\r\n        // onPointerMove={(e) => set(e.instanceId)}\r\n        // onPointerOut={(e) => set(undefined)}\r\n      >\r\n        <boxGeometry args={[1, 250, 1]}>\r\n          <instancedBufferAttribute\r\n          // attachObject={[\"attributes\", \"color\"]}\r\n          // args={[colorArray, 3]}\r\n          />\r\n        </boxGeometry>\r\n        <meshBasicMaterial color=\"black\" />\r\n        {/* <meshPhongMaterial vertexColors={VertexColors} /> */}\r\n      </instancedMesh>\r\n    </group>\r\n  );\r\n};\r\n// instanced mesh\r\n// https://codesandbox.io/s/instanced-vertex-colors-8fo01?from-embed=&file=/src/index.js:1892-2275\r\n// https://codesandbox.io/s/bubbles-qy8ul\r\n// https://discourse.threejs.org/t/fresnel-shader-or-similar-effect/9997/5\r\n// Loads the skybox texture and applies it to the scene.\r\n\r\n// Lights\r\nconst Waveform3d = ({\r\n  progress,\r\n  track,\r\n}: {\r\n  progress: number;\r\n  track: Track;\r\n}): JSX.Element => {\r\n  const items = Array.from(Array(50).keys());\r\n  const orbitControlsRef = useRef(null);\r\n  const cameraRef = useRef<THREE.OrthographicCamera>();\r\n  const otherCameraRef = useRef<THREE.OrthographicCamera>();\r\n\r\n  // const { scene, gl } = useThree();\r\n  // useEffect(() => {\r\n  //   if (cameraRef.current) {\r\n  //     const startPos = cameraRef.current.position;\r\n  //     console.log(cameraRef.current);\r\n  //     if (orbitControlsRef.current) {\r\n  //       console.log(orbitControlsRef.current);\r\n  //       // orbitControlsRef.current.object =\r\n  //       cameraRef.current.addEventListener(\"change\", (e) => {\r\n  //         console.log(\"CHANGING\");\r\n  //         console.log(e);\r\n  //       });\r\n  //       orbitControlsRef.current.orbitControlsRef.current.addEventListener(\r\n  //         \"change\",\r\n  //         (e) => {\r\n  //           console.log(\"CHANGING\");\r\n  //           console.log(e);\r\n  //           console.log(e.target);\r\n  //           const target: OC = e.target;\r\n  //           const controlPos = target.target;\r\n  //           cameraRef.current.position.set(\r\n  //             controlPos.x,\r\n  //             startPos.y,\r\n  //             startPos.z\r\n  //           );\r\n  //           console.log(target.target);\r\n  //         }\r\n  //       );\r\n  //     }\r\n  //   }\r\n  // }, []);\r\n  // var vector = new THREE.Vector3();\r\n  // var projector = new Projector();\r\n  // projector.projectVector(\r\n  //   vector.setFromMatrixPosition(object.matrixWorld),\r\n  //   camera\r\n  // );\r\n\r\n  return (\r\n    <Suspense fallback={<div>hello</div>}>\r\n      <Canvas className=\"waveform-canvas\" shadows dpr={[1, 2]}>\r\n        <color attach=\"background\" args={[theme.primary]} />\r\n        <ambientLight color={\"black\"} intensity={0.5} />\r\n        <pointLight position={[5, 5, 5]} />\r\n        <OrthographicCamera\r\n          ref={cameraRef}\r\n          makeDefault\r\n          zoom={2}\r\n          // scale={3}\r\n          position={[0, 0, 100]}\r\n        />\r\n        <OrbitControls/>\r\n        {/* <NewControls\r\n          ref={orbitControlsRef}\r\n          minX={-100}\r\n          maxX={100}\r\n          // args={[otherCameraRef.current]}\r\n          // screenSpacePanning={true}\r\n          enableRotate={true}\r\n          // enableRotate={false}\r\n          minZoom={0}\r\n          maxZoom={1}\r\n        /> */}\r\n        <Geo track={track} />\r\n        {/* </EffectComposer> */}\r\n      </Canvas>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\ninterface ControlsProps {\r\n  scale: number;\r\n}\r\ndeclare global {\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      controls: ControlsProps;\r\n    }\r\n  }\r\n}\r\n// https://github.com/jwtea/three-viewer/blob/20744c53faf7ece7ee1bd19bc593a6322f39d002/components/ExtendedControls.jsx#L20\r\n\r\nexport default React.memo(Waveform3d);\r\n\r\nconst Geo = ({ track }: { track: Track }): JSX.Element => {\r\n  const audioElem = useRef<HTMLAudioElement>();\r\n\r\n  const groupRef = useRef<Group>();\r\n  // useEffect(() => {\r\n  //   audioElem.current = document.getElementById(\r\n  //     \"audio_\" + track.title\r\n  //   ) as HTMLAudioElement;\r\n  // }, [track.title]);\r\n\r\n  useFrame((state) => {\r\n    const time = state.clock.getElapsedTime();\r\n    // cubeCamera.update(gl, scene);\r\n    if (audioElem.current && !audioElem.current.paused && groupRef.current) {\r\n      // console.log(audioElem.current.currentTime);\r\n      groupRef.current.position.x -= 1;\r\n    }\r\n    // console.log(progress);\r\n  });\r\n\r\n  return (\r\n    <group ref={groupRef}>\r\n      <Grid track={track} />\r\n      <AudioForm track={track} />\r\n      {/* <AudioForm track={track} /> */}\r\n    </group>\r\n  );\r\n};\r\n\r\nconst Sphere = (props) => {\r\n  return (\r\n    <mesh position={props.position}>\r\n      <sphereGeometry args={[100, 100, 100]} />\r\n      {props.children}\r\n    </mesh>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Waveform3d from \"../Waveform3d\";\r\nimport { Track } from \"@interfaces/Track\";\r\n\r\nconst WaveformWidget = ({\r\n  progress,\r\n  track,\r\n}: {\r\n  progress: number;\r\n  track: Track;\r\n}): JSX.Element => {\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <Waveform3d progress={progress} track={track} />\r\n      <Grid></Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(WaveformWidget);\r\n\r\nconst Grid = (): JSX.Element => {\r\n  const items = Array.from({ length: 20 }, (x, i) => i);\r\n\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n    backgroundColor: \"blue\",\r\n  } as React.CSSProperties;\r\n\r\n  const dashStyle = {\r\n    width: \"100%\",\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      {items.map((item, i) => {\r\n        const dashStyle = {\r\n          width: \"1%\",\r\n          position: \"absolute\",\r\n          left: `${(i / items.length) * 100}%`,\r\n          height: \"100%\",\r\n          backgroundColor: \"red\",\r\n        } as React.CSSProperties;\r\n\r\n        return <div key={i} style={dashStyle}></div>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import theme from \"@static/theme\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst TitleWidget = (): JSX.Element => {\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \".5rem\",\r\n        height: \"100%\",\r\n        // width: \"fit-content\",\r\n        fontSize: theme.mediumFont,\r\n        fontWeight: \"bold\",\r\n        // fontSize: theme.titleFont,\r\n        position: \"relative\",\r\n        justifyContent: \"center\",\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n\r\n        // backgroundColor: theme.secondary,\r\n      }}\r\n    >\r\n      Seisolo.io Remixing the Recital\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TitleWidget;\r\n","import FlexRow from \"@components/FlexRow\";\nimport React from \"react\";\nimport \"@css/Player/Song.scss\";\nimport FlexColumn from \"@components/FlexColumn\";\n\nconst Song = ({\n  songName,\n  songArtist,\n  link,\n  index,\n}: {\n  songName: string;\n  songArtist: string;\n  link?: string;\n  index: number;\n}): JSX.Element => {\n  return (\n    <FlexColumn className=\"song\">\n      {/* <div className=\"song-artist\">{`${index + 1}. ` + songArtist + \" - \"}</div> */}\n      <div className=\"song-title\" style={{ margin: \"auto\" }}>\n        {songName}\n      </div>\n    </FlexColumn>\n  );\n};\n\nexport default Song;\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst FlexRow = ({\r\n  children,\r\n  padding,\r\n  className,\r\n  style,\r\n  width,\r\n  height,\r\n  justifyContent,\r\n  id,\r\n}: {\r\n  children: JSX.Element | JSX.Element[] | Element[];\r\n  padding?: string;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  width?: string;\r\n  height?: string;\r\n  justifyContent?: string;\r\n  id?: string;\r\n}): JSX.Element => {\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        padding: padding,\r\n        width,\r\n        height,\r\n        justifyContent,\r\n        ...style,\r\n      }}\r\n      id={id}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlexRow;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport FlexRow from \"@components/FlexRow\";\r\nimport \"@css/Player/PlayBody.scss\";\r\nimport { TrackSelection } from \"@interfaces/TrackSelection\";\r\nimport { Track } from \"@interfaces/Track\";\r\nimport classNames from \"classnames\";\r\nimport \"@css/PlayButton.scss\";\r\nimport {\r\n  useHomeActions,\r\n  useHomeState,\r\n  useIsPlaying,\r\n  usePlaylist,\r\n} from \"@hooks\";\r\n\r\nconst PlayPauseControls = ({ track }: { track: Track }): JSX.Element => {\r\n  const { playTrack, pauseTrack } = usePlaylist();\r\n\r\n  const isPlaying = useIsPlaying(track);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        // backgroundColor: \"blue\",\r\n        // borderRadius: \"50%\",\r\n        width: \"fit-content\",\r\n        padding: \"5px\",\r\n        position: \"absolute\",\r\n        border: \"1px solid black\",\r\n        top: 0,\r\n        left: 0,\r\n      }}\r\n    >\r\n      {isPlaying ? (\r\n        <PauseButton\r\n          handleClick={() => {\r\n            console.log(\"FIRING PAUSE BUTTON HANDLER\");\r\n            pauseTrack(track);\r\n          }}\r\n        />\r\n      ) : (\r\n        <PlayButton\r\n          handleClick={() => {\r\n            console.log(\"FIRING PLAY BUTTON HANDLER\");\r\n            playTrack(track);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayPauseControls;\r\n\r\nconst PlayButton = ({\r\n  handleClick,\r\n}: {\r\n  handleClick: () => void;\r\n}): JSX.Element => {\r\n  return (\r\n    <div\r\n      className={\"play-button-item\"}\r\n      onClick={(e) => {\r\n        handleClick();\r\n      }}\r\n      style={{\r\n        width: 10,\r\n        height: \"100%\",\r\n        // backgroundColor: \"red\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <svg\r\n        id=\"Layer_1\"\r\n        data-name=\"Layer 1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 67.91 76.24\"\r\n        style={{ margin: \"auto\" }}\r\n      >\r\n        <path\r\n          fill=\"yellow\"\r\n          d=\"M170.45,173l-53.71-31a7.1,7.1,0,0,0-10.65,6.15v62a7.1,7.1,0,0,0,10.65,6.14l53.71-31A7.1,7.1,0,0,0,170.45,173Z\"\r\n          transform=\"translate(-106.09 -141)\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\nconst PauseButton = ({\r\n  handleClick,\r\n}: {\r\n  handleClick: () => void;\r\n}): JSX.Element => {\r\n  return (\r\n    <div\r\n      className={\"play-button-item\"}\r\n      onClick={() => {\r\n        handleClick();\r\n      }}\r\n      style={{\r\n        width: 10,\r\n        height: \"100%\",\r\n        // backgroundColor: \"red\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <svg\r\n        id=\"Layer_1\"\r\n        data-name=\"Layer 1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 67.91 76.24\"\r\n        style={{ margin: \"auto\" }}\r\n      >\r\n        <path\r\n          fill=\"yellow\"\r\n          d=\"M51.24,0h0c4.64,0,8.41,4.18,8.41,9.34V66.9c0,5.16-3.77,9.34-8.41,9.34h0c-4.65,0-8.42-4.18-8.42-9.34V9.34C42.82,4.18,46.59,0,51.24,0Z\"\r\n          // transform=\"translate(-106.09 -141)\"\r\n        />\r\n        <path\r\n          fill=\"yellow\"\r\n          d=\"M51.24,0h0c4.64,0,8.41,4.18,8.41,9.34V66.9c0,5.16-3.77,9.34-8.41,9.34h0c-4.65,0-8.42-4.18-8.42-9.34V9.34C42.82,4.18,46.59,0,51.24,0Z\"\r\n          transform=\"translate(-30, 0)\"\r\n        />\r\n      </svg>\r\n      {/* <img\r\n        style={{ margin: \"auto\" }}\r\n        src={`${process.env.PUBLIC_URL}/Icons/PauseButtonIcon.svg`}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\n{\r\n  /* <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 68.9 77.19\"><defs><style>.cls-1{fill:#fff;stroke:#231f20;stroke-miterlimit:10;}.cls-2{fill:none;}</style></defs><path class=\"cls-1\" d=\"M64.36,32,10.65,1A7.1,7.1,0,0,0,0,7.15v62a7.1,7.1,0,0,0,10.65,6.14l53.71-31a7.1,7.1,0,0,0,0-12.29Z\" transform=\"translate(0.5 0.45)\"/><path class=\"cls-2\" d=\"M17.41,0h0c4.65,0,8.41,4.18,8.41,9.34V66.9c0,5.16-3.76,9.34-8.41,9.34h0C12.77,76.24,9,72.06,9,66.9V9.34C9,4.18,12.77,0,17.41,0Z\" transform=\"translate(0.5 0.45)\"/><path class=\"cls-2\" d=\"M51.24,0h0c4.64,0,8.41,4.18,8.41,9.34V66.9c0,5.16-3.77,9.34-8.41,9.34h0c-4.65,0-8.42-4.18-8.42-9.34V9.34C42.82,4.18,46.59,0,51.24,0Z\" transform=\"translate(0.5 0.45)\"/></svg> */\r\n}\r\n","import React from \"react\";\n\nimport Song from \"./Song\";\nimport Bar from \"./Bar\";\n\nimport FlexRow from \"@components/FlexRow\";\nimport \"@css/Player/PlayBody.scss\";\nimport { Track } from \"@interfaces/Track\";\nimport classNames from \"classnames\";\nimport \"@css/PlayButton.scss\";\nimport PlayPauseControls from \"../Widgets/TrackItem/PlayPauseControls\";\n\nconst Audio = ({ track }: { track: Track }): JSX.Element => {\n  const songContainerClass = classNames(\"play-body\", {\n    \"play-body-playing\": true,\n  });\n\n  const playPauseStyle = {\n    height: \"100%\",\n    margin: \"auto\",\n    // paddingRight: \".5em\",\n    position: \"relative\",\n  } as React.CSSProperties;\n  const { src, artist, title, link, about, category } = track;\n\n  const padMin = \"0rem\";\n  const padMax = \".5rem\";\n  return (\n    <FlexRow\n      className={songContainerClass}\n      style={{\n        border: \"2px solid black\",\n        // borderColor: category === \"recital\" ? \"red\" : \"\",\n        // backgroundColor: category === \"recital\" ? \"red\" : \"\",\n        paddingLeft: `clamp(${padMin}, 1vw, ${padMax})`,\n        paddingRight: `clamp(${padMin}, 1vw, ${padMax})`,\n        paddingTop: `clamp(${padMin}, 1vw, ${padMax})`,\n        paddingBottom: `clamp(${padMin}, 1vw, ${padMax})`,\n        height: \"100%\",\n      }}\n    >\n      <audio id={\"audio_\" + track.title}>\n        <source src={src} />\n        Your browser does not support the <code>audio</code> element.\n      </audio>\n      <div style={playPauseStyle}>\n        <PlayPauseControls track={track} />\n      </div>\n      <Song songName={title} songArtist={artist} link={link} index={0} />\n      <FlexRow className=\"controls\">\n        {/* <Bar\n          curTime={curTime}\n          duration={duration}\n          onTimeUpdate={(time) => setClickedTime(time)}\n        /> */}\n      </FlexRow>\n    </FlexRow>\n  );\n};\n\nexport default Audio;\n","import Audio from \"@components/Home/Player/Audio\";\r\nimport React from \"react\";\r\nimport theme from \"@static/theme\";\r\nimport { motion, Transition, Variants } from \"framer-motion\";\r\nimport { Track } from \"@interfaces/Track\";\r\nimport { useHomeActions, useHomeState, useIsPlaying } from \"@hooks\";\r\n\r\nconst TrackItem = ({ track }: { track: Track }): JSX.Element => {\r\n  // const { setCurrentTrack } = useHomeActions((actions) => actions);\r\n\r\n  const isPlaying = useIsPlaying(track);\r\n  // const {trackCategory} = usePl\r\n  const variants: Variants = {\r\n    paused: { opacity: 1, x: 0 },\r\n    active: {\r\n      //   opacity: 0,\r\n      //   x: \"-100%\",\r\n      backgroundColor: \"rgba(255, 242, 0, 150)\",\r\n      transition: {\r\n        ease: \"linear\",\r\n        duration: 2,\r\n        repeat: Infinity,\r\n        repeatType: \"mirror\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"33.333%\",\r\n        fontFamily: theme.primaryFont,\r\n        fontSize: \"2rem\",\r\n        position: \"relative\",\r\n        marginRight: \"2rem\",\r\n        // backgroundColor: \"\",\r\n        // backgroundColor: \"rgba(0,0,0,0)\",\r\n        // backgroundColor: colors[i],\r\n        // backgroundColor: theme.primaryMedium,\r\n        // backgroundColor: \"grey\",\r\n        justifyContent: \"center\",\r\n        // margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        // border: \"2px solid\",\r\n        // borderColor: theme.secondary,\r\n        // borderColor: \"black\",\r\n      }}\r\n      animate={isPlaying ? \"active\" : \"paused\"}\r\n      variants={variants}\r\n      //   animat\r\n      whileHover={{\r\n        // scale: 1.1,\r\n        // textShadow: \"0px 0px 4px gray\",\r\n        backgroundColor: theme.primaryMedium,\r\n        // backgroundColor: \"rgba(255, 242, 0, 150)\",\r\n        transition: { duration: 0.1 },\r\n      }}\r\n    >\r\n      <Audio track={track} />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default TrackItem;\r\n","import React from \"react\";\r\nimport theme from \"@static/theme\";\r\nimport tracks from \"@static/tracks\";\r\nimport TrackItem from \"./TrackItem\";\r\n\r\nconst RecitalWidgets = (): JSX.Element => {\r\n  const recitalParts = tracks.filter((track) => track.category === \"recital\");\r\n  const colors = [\"#363537\", \"#ef2d56\", \"#ed7d3a\", \"#8cd867\", \"#2fbf71\"];\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        fontFamily: theme.primaryFont,\r\n        fontSize: \"6rem\",\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {recitalParts.map((track, i) => {\r\n        return <TrackItem key={i} track={track} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecitalWidgets;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FlexRow from \"@components/FlexRow\";\r\nimport theme from \"@static/theme\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst BigText = ({\r\n  children,\r\n  active,\r\n}: {\r\n  children: React.ReactNode;\r\n  active: boolean;\r\n}): JSX.Element => {\r\n  const variants = {\r\n    normal: {\r\n      backgroundColor: theme.primary,\r\n    },\r\n    highlight: {\r\n      opacity: 1,\r\n      // scale: 2,\r\n      backgroundColor: theme.secondary,\r\n      transition: {\r\n        duration: 0.3,\r\n        delayChildren: 0.5,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <FlexRow height=\"100%\">\r\n      <motion.div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          // width: \"max-content\",\r\n          fontFamily: theme.primaryFont,\r\n          fontSize: theme.mediumFont,\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          fontWeight: \"bold\",\r\n          paddingLeft: \"1rem\",\r\n          backgroundColor: active ? \"green\" : \"\",\r\n        }}\r\n        variants={variants}\r\n        animate={active ? \"highlight\" : \"normal\"}\r\n      >\r\n        {children}\r\n      </motion.div>\r\n    </FlexRow>\r\n  );\r\n};\r\n\r\nexport default BigText;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport theme from \"@static/theme\";\r\nimport BigText from \"./BigText\";\r\nimport { usePlaylist } from \"@hooks\";\r\n\r\nconst ThreeRemixes = (): JSX.Element => {\r\n  const { trackCategory } = usePlaylist();\r\n\r\n  return <BigText active={trackCategory === \"remix\"}>3 Remixes</BigText>;\r\n};\r\n\r\nexport default ThreeRemixes;\r\n","import React, { useState, useEffect, Suspense, useRef } from \"react\";\r\nimport { Canvas, useThree, useFrame, useLoader } from \"react-three-fiber\";\r\nimport {\r\n  CubeTextureLoader,\r\n  CubeCamera,\r\n  WebGLCubeRenderTarget,\r\n  RGBFormat,\r\n  LinearMipmapLinearFilter,\r\n  Mesh,\r\n  Material,\r\n  Group,\r\n  Color,\r\n  TextureLoader,\r\n} from \"three\";\r\nimport { OrbitControls, OrthographicCamera, useGLTF } from \"@react-three/drei\";\r\nimport { GLTF as GLTFThree } from \"three/examples/jsm/loaders/GLTFLoader\";\r\ndeclare module \"three-stdlib\" {\r\n  export interface GLTF extends GLTFThree {\r\n    nodes: Record<string, Mesh>;\r\n    materials: Record<string, Material>;\r\n  }\r\n}\r\n\r\nconst Arrow = () => {\r\n  const { nodes } = useGLTF(\r\n    `${process.env.PUBLIC_URL}/Models/seisoloarrow.glb`\r\n  );\r\n  const matcapTexture = useLoader(\r\n    TextureLoader,\r\n    `${process.env.PUBLIC_URL}/Textures/matcapred.jpg`\r\n  );\r\n  const group = useRef<Group>();\r\n  const target = nodes.Scene as unknown as Group;\r\n  const children = target.children as Mesh[];\r\n\r\n  useEffect(() => {\r\n    if (group.current) {\r\n      group.current.rotation.z = 3.1416;\r\n    }\r\n  }, []);\r\n  useFrame((state) => {\r\n    if (group.current) {\r\n      group.current.rotation.x += 0.01;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={group}>\r\n      {children.map((c, i) => {\r\n        return (\r\n          <mesh key={i} geometry={c.geometry}>\r\n            <meshMatcapMaterial\r\n              attach=\"material\"\r\n              color=\"yellow\"\r\n              matcap={matcapTexture}\r\n            />\r\n          </mesh>\r\n        );\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n// color?: ColorRepresentation | undefined;\r\n// specular?: ColorRepresentation | undefined;\r\n// shininess?: number | undefined;\r\n// opacity?: number | undefined;\r\n// map?: Texture | null | undefined;\r\n// lightMap?: Texture | null | undefined;\r\n// lightMapIntensity?: number | undefined;\r\n// aoMap?: Texture | null | undefined;\r\n// aoMapIntensity?: number | undefined;\r\n// emissive?: ColorRepresentation | undefined;\r\n// emissiveIntensity?: number | undefined;\r\n// emissiveMap?: Texture | null | undefined;\r\n// bumpMap?: Texture | null | undefined;\r\n// bumpScale?: number | undefined;\r\n// normalMap?: Texture | null | undefined;\r\n// normalMapType?: NormalMapTypes | undefined;\r\n// normalScale?: Vector2 | undefined;\r\n// displacementMap?: Texture | null | undefined;\r\n// displacementScale?: number | undefined;\r\n// displacementBias?: number | undefined;\r\n// specularMap?: Texture | null | undefined;\r\n// alphaMap?: Texture | null | undefined;\r\n// envMap?: Texture | null | undefined;\r\n// combine?: Combine | undefined;\r\n// reflectivity?: number | undefined;\r\n// refractionRatio?: number | undefined;\r\n// wireframe?: boolean | undefined;\r\n// wireframeLinewidth?: number | undefined;\r\n// wireframeLinecap?: string | undefined;\r\n// wireframeLinejoin?: string | undefined;\r\n// Loads the skybox texture and applies it to the scene.\r\n\r\n//toon\r\n// color?: ColorRepresentation | undefined;\r\n// opacity?: number | undefined;\r\n// gradientMap?: Texture | null | undefined;\r\n// map?: Texture | null | undefined;\r\n// lightMap?: Texture | null | undefined;\r\n// lightMapIntensity?: number | undefined;\r\n// aoMap?: Texture | null | undefined;\r\n// aoMapIntensity?: number | undefined;\r\n// emissive?: ColorRepresentation | undefined;\r\n// emissiveIntensity?: number | undefined;\r\n// emissiveMap?: Texture | null | undefined;\r\n// bumpMap?: Texture | null | undefined;\r\n// bumpScale?: number | undefined;\r\n// normalMap?: Texture | null | undefined;\r\n// normalMapType?: NormalMapTypes | undefined;\r\n// normalScale?: Vector2 | undefined;\r\n// displacementMap?: Texture | null | undefined;\r\n// displacementScale?: number | undefined;\r\n// displacementBias?: number | undefined;\r\n// alphaMap?: Texture | null | undefined;\r\n// wireframe?: boolean | undefined;\r\n// wireframeLinewidth?: number | undefined;\r\n// wireframeLinecap?: string | undefined;\r\n// wireframeLinejoin?: string | undefined;\r\n// Lights\r\nconst ArrowWidget = (): JSX.Element => {\r\n  return (\r\n    <Suspense fallback={<div>hello</div>}>\r\n      <Canvas className=\"canvas\">\r\n        {/* <pointLight color=\"white\" intensity={0.5} position={[0, 0, 20]} /> */}\r\n        <OrthographicCamera makeDefault zoom={15.1} position={[0, 0, 20]} />\r\n        <Arrow />\r\n        <OrbitControls enableRotate={true} />\r\n      </Canvas>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default React.memo(ArrowWidget);\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport theme from \"@static/theme\";\r\nimport BigText from \"./BigText\";\r\nimport { usePlaylist } from \"@hooks\";\r\n\r\nconst OneRecitalTextWidget = (): JSX.Element => {\r\n  const { trackCategory } = usePlaylist();\r\n\r\n  return (\r\n    <BigText active={trackCategory === \"recital\"}>1 Violin Recital</BigText>\r\n  );\r\n};\r\n\r\nexport default OneRecitalTextWidget;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport theme from \"@static/theme\";\r\nimport FlexRow from \"@components/FlexRow\";\r\nimport tracks from \"@static/tracks\";\r\nimport { useHomeActions, useHomeState } from \"@hooks\";\r\nimport PlayPauseControls from \"./TrackItem/PlayPauseControls\";\r\nimport Audio from \"../Player/Audio\";\r\nimport BigText from \"./BigText\";\r\nimport TrackItem from \"./TrackItem\";\r\n\r\nconst RemixesWidget = (): JSX.Element => {\r\n  const remixParts = tracks.filter((track) => track.category === \"remix\");\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        fontFamily: theme.primaryFont,\r\n        fontSize: \"6rem\",\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {remixParts.map((track, i) => {\r\n        return <TrackItem key={i} track={track} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemixesWidget;\r\n","import { useApp, useToggle } from \"@hooks\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst ProjectInfo = (): JSX.Element => {\r\n  //   const [visible, setVisible] = useState(false)\r\n  const [visible, toggle] = useToggle(false);\r\n  const { appMode, setAppMode } = useApp();\r\n  \r\n  return (\r\n    <div\r\n    style = {{width: \"100%\", height: \"100%\", backgroundColor:\"red\"}}\r\n      onClick={(e) => {\r\n        toggle();\r\n        setAppMode(\"projectInfo\")\r\n        console.log(\"clicked about\");\r\n      }}\r\n    >\r\n      {/* <div>About</div> */}\r\n      {/* <div>\r\n        SeiSolo.io is a multimedia web installation exploring classical and\r\n        electronic music, aiming to create a unique and accessible way of\r\n        engaging with both. It features a recorded solo violin recital, five\r\n        commissioned remixes of the recital repertoire, and a web-based software\r\n        for users to remix on their own.\r\n      </div> */}\r\n      <AboutInfo visible={visible} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectInfo;\r\n\r\nconst AboutInfo = ({ visible }: { visible: boolean }): JSX.Element => {\r\n  return (\r\n    <div>\r\n    <div>\r\n      SeiSolo.io is a multimedia web installation exploring classical and\r\n      electronic music, aiming to create a unique and accessible way of engaging\r\n      with both. It features a recorded solo violin recital, five commissioned\r\n      remixes of the recital repertoire, and a web-based software for users to\r\n      remix on their own.\r\n    </div>\r\n    <div>\r\n      Thanks to our donors, the Awesome Foundation of Raleigh, and Fractured Atlas for providing fiscal support.\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\n    useState,\n    useEffect,\n    RefObject,\n    createContext,\n    useRef,\n  } from \"react\";\n  import { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\n  import * as THREE from \"three\";\n  import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n  import theme from \"@static/theme\";\n  import AudioDataContainer from \"@components/Home/Player/EQ/AudioDataContainer\";\n  import { TrackSelection } from \"@interfaces/TrackSelection\";\n  import Viewer from \"@components/Home/Player/Viewer\";\n  import tracks from \"@static/tracks\";\n  import { Track } from \"@interfaces/Track\";\n  import { useApp, usePlaylist, useToggle, useWindowSize } from \"@hooks\";\n  import { useKeyboardShortcut } from \"crooks\";\n  import { motion } from \"framer-motion\";\n  import \"@css/blockquote.scss\";\n  import Model from \"@components/Home/Model\";\n  import Waveform3d from \"@components/Home/Waveform3d\";\n  import Time from \"@components/Home/Player/Time\";\n  import { Layout, Responsive, WidthProvider } from \"react-grid-layout\";\n  import \"@css/Layout.scss\";\n  import ViewCard from \"@components/Home/ViewCard\";\n  export type HomeMode = \"player\" | \"notes\" | \"about\";\n  import \"@css/react-grid-layout.scss\";\n  import \"@css/react-resizable.css\";\n  import GridLayout from \"@components/Home/GridLayout\";\n  import TrackInfoWidget from \"@components/Home/Widgets/TrackInfoWidget\";\n  import AboutWidget from \"@components/Home/Widgets/AboutWidget\";\n  import ViolinWidget from \"@components/Home/Widgets/ViolinWidget\";\n  import WaveformWidget from \"@components/Home/Widgets/WaveformWidget\";\n  import TitleWidget from \"@components/Home/Widgets/TitleWidget\";\n  import RecitalWidgets from \"@components/Home/Widgets/RecitalWidgets\";\n  import ThreeRemixes from \"@components/Home/Widgets/ThreeRemixes\";\n  import ArrowWidget from \"@components/Home/Widgets/ArrowWidget\";\n  import OneRecitalTextWidget from \"@components/Home/Widgets/OneRecitalTextWidget\";\n  import RemixesWidget from \"@components/Home/Widgets/RemixesWidget\";\n  import \"@css/Body.scss\";\n  import ProjectInfo from \"@components/Home/Widgets/ProjectInfo\";\n  import { aboutLayout, defaultLayout, recitalLayout } from \"@static/gridLayouts\";\n  import Intro from \"@components/IntroModal\";\n  \n  const HomeWidgetGrid = (): JSX.Element => {\n    const audio = useRef(null);\n  \n    useEffect(() => {\n      audio.current = new AudioContext();\n    }, []);\n\n\n  \n    const [activeTrack, setTrack] = useState<undefined | Track>(tracks[0]);\n    const [progress, setProgress] = useState(0);\n  \n    const [curLayout, setCurLayout] = useState<Layout[]>(defaultLayout);\n    useEffect(() => {\n      setCurLayout(defaultLayout);\n    }, []);\n    const { trackCategory } = usePlaylist();\n    const { appMode } = useApp()\n\n    useEffect(() => {\n      let newLayout: Layout[] = [...curLayout];\n      // defaultLayout[0].w =\n      if (trackCategory === \"remix\") {\n        setCurLayout(defaultLayout);\n      }\n  \n      if (trackCategory === \"recital\") {\n        setCurLayout(recitalLayout);\n      }\n      // if (appMode === \"projectInfo\") {\n      //   setCurLayout(aboutLayout);\n      // }\n    }, [trackCategory, appMode]);\n  \n    return (\n        <section id=\"home-body\" style={{ width: \"100vw\" }}>\n          <GridLayout className={\"layout\"} layout={[...curLayout]} >\n            <ProjectInfo key=\"projectInfo\" />\n            <OneRecitalTextWidget key=\"oneRecitalText\" />\n            <RecitalWidgets key=\"recitalTracks\" />\n  \n            <ArrowWidget key=\"arrow\" />\n            <ThreeRemixes key=\"threeRemixes\" />\n            <RemixesWidget\n              key=\"remixes\"\n              // appMode={appMode}\n            />\n            <TitleWidget key=\"title\" />\n            {/* <AboutWidget key=\"about\" track={activeTrack} /> */}\n            <TrackInfoWidget key=\"trackInfo\" track={activeTrack} />\n            {/* <Time key=\"time\" progress={progress} track={activeTrack} /> */}\n            <WaveformWidget\n              key=\"waveform\"\n              progress={progress}\n              track={activeTrack}\n            />\n            <ViolinWidget key=\"violin\" />\n          </GridLayout>\n        </section>\n    );\n  };\n  \n  export default HomeWidgetGrid;\n  \n  type LayoutPos = Pick<Layout, \"x\" | \"y\" | \"w\" | \"h\">;\n  \n  const DoGrid = ({ layout, activeTrack, progress }): JSX.Element => {\n    return (\n      <GridLayout className={\"layout\"} layout={layout}>\n        {/* <About key=\"about\" track={activeTrack} /> */}\n        <RecitalWidgets key=\"recitalTracks\" />\n        <OneRecitalTextWidget key=\"oneRecitalText\" />\n        <ArrowWidget key=\"arrow\" />\n        <ThreeRemixes key=\"threeRemixes\" />\n        <TitleWidget key=\"title\" />\n        {/* <AboutWidget key=\"about\" track={activeTrack} /> */}\n        <TrackInfoWidget key=\"trackInfo\" track={activeTrack} />\n        {/* <Time key=\"time\" progress={progress} track={activeTrack} /> */}\n        <WaveformWidget key=\"waveform\" progress={progress} track={activeTrack} />\n        <ViolinWidget key=\"violin\" />\n        {/* <Bar audioElem={audioElem} /> */}\n        <RemixesWidget key=\"remixes\" />\n      </GridLayout>\n    );\n  };\n  \n  function alterLayout(id: string, layout: Layout[], newLayout: LayoutPos) {\n    console.log(layout);\n    const toGet = layout.filter((l) => l.i === id)[0];\n    const ind = layout.indexOf(toGet);\n    // layout[ind] = { i: id, ...newLayout };\n  }\n  \n  ","import React, { useState, useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport ReactDOM from \"react-dom\";\nimport { motion, Variants } from \"framer-motion\";\nimport { useApp, useHover, usePlaylist } from \"@hooks\";\nimport FlexColumn from \"./FlexColumn\";\nimport theme from \"@static/theme\";\nimport { SSAppMode } from \"@model/homeModel\";\n\nconst AboutModal = (): JSX.Element => {\n  const { appMode } = useApp();\n\n  const variants = {\n    visible: {\n      opacity: 1,\n      transition: {\n        duration: .3,\n      },\n    },\n    hidden: {\n      opacity: 0,\n      transition: {\n        duration: .3,\n        \n      },\n      pointerEvents: \"none\",\n    },\n  } as Variants;\n\n  const containerStyle = {\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: theme.primary,\n    position: \"absolute\",\n    zIndex: 10,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    opacity: 0, \n  } as React.CSSProperties;\n\n    const textStyle = {\n        width: 500, \n        fontSize: \"large\",\n    } as React.CSSProperties\n\n  return ReactDOM.createPortal(\n    <motion.div\n      className=\"modal\"\n      variants={variants}\n      animate={appMode === \"projectInfo\" ? \"visible\" : \"hidden\"}\n      style={containerStyle}\n    >\n      <FlexColumn style = {textStyle}>\n    <h1 style = {{fontSize: theme.bigFont, borderBottom: \"1px solid black\"}}>About</h1>\n      <div >\n      SeiSolo.io is a multimedia web installation exploring classical and\n      electronic music, aiming to create a unique and accessible way of engaging\n      with both. It features a recorded solo violin recital, five commissioned\n      remixes of the recital repertoire, and a web-based software for users to\n      remix on their own.\n    </div>\n    <br></br>\n    <div>\n      Thanks to our donors, the Awesome Foundation of Raleigh, and Fractured Atlas for providing fiscal support.\n    </div>\n      </FlexColumn>\n    </motion.div>,\n    document.getElementById(\"about-modal\") as HTMLDivElement\n  );\n};\n\n// portal\nexport default AboutModal;\n\n","import React, { useState, useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport ReactDOM from \"react-dom\";\nimport { motion, Variants } from \"framer-motion\";\nimport { useApp, useHover, usePlaylist } from \"@hooks\";\nimport FlexColumn from \"./FlexColumn\";\nimport theme from \"@static/theme\";\nimport { SSAppMode } from \"@model/homeModel\";\n\nconst ReturnButton = (): JSX.Element => {\n  const { appMode, setAppMode } = useApp();\n\n  const variants = {\n    visible: {\n      //   height: \"200px\",\n      //   width: \"200px\",\n      translateY: 0, \n      opacity: 1,\n    },\n    hidden: {\n      opacity: 0,\n      translateY: -50,\n      transition: {\n        duration: 1,\n      },\n      pointerEvents: \"none\",\n    },\n  } as Variants;\n\n  const containerStyle = {\n    width: \"10vw\",\n    height: \"10vw\",\n    backgroundColor: \"red\",\n    position: \"absolute\",\n    zIndex: 10,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    top: 0, \n    left: 0, \n    // backgroundColor: \"red\",\n  } as React.CSSProperties;\n\n\n  return ReactDOM.createPortal(\n    <motion.div\n      className=\"modal\"\n      variants={variants}\n      animate={appMode === \"projectInfo\" ? \"visible\" : \"hidden\"}\n      style={containerStyle}\n      onClick = {e=>{\n        setAppMode(\"view\")\n      }}\n    >\n            aaaaaaa\n    </motion.div>,\n    document.getElementById(\"return-button\") as HTMLDivElement\n  );\n};\n\n// portal\nexport default ReturnButton;\n\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  RefObject,\r\n  createContext,\r\n  useRef,\r\n} from \"react\";\r\n\r\nimport tracks from \"@static/tracks\";\r\nimport { Track } from \"@interfaces/Track\";\r\nimport { useApp, usePlaylist, useToggle } from \"@hooks\";\r\nimport \"@css/blockquote.scss\";\r\nimport Time from \"@components/Home/Player/Time\";\r\nimport { Layout, Responsive, WidthProvider } from \"react-grid-layout\";\r\nimport \"@css/Layout.scss\";\r\nimport ViewCard from \"@components/Home/ViewCard\";\r\nimport \"@css/react-grid-layout.scss\";\r\nimport \"@css/react-resizable.css\";\r\nimport GridLayout from \"@components/Home/GridLayout\";\r\nimport TrackInfoWidget from \"@components/Home/Widgets/TrackInfoWidget\";\r\nimport AboutWidget from \"@components/Home/Widgets/AboutWidget\";\r\nimport ViolinWidget from \"@components/Home/Widgets/ViolinWidget\";\r\nimport WaveformWidget from \"@components/Home/Widgets/WaveformWidget\";\r\nimport TitleWidget from \"@components/Home/Widgets/TitleWidget\";\r\nimport RecitalWidgets from \"@components/Home/Widgets/RecitalWidgets\";\r\nimport ThreeRemixes from \"@components/Home/Widgets/ThreeRemixes\";\r\nimport ArrowWidget from \"@components/Home/Widgets/ArrowWidget\";\r\nimport { StoreProvider } from \"easy-peasy\";\r\nimport homeStore from \"../stores/homeStore\";\r\nimport OneRecitalTextWidget from \"@components/Home/Widgets/OneRecitalTextWidget\";\r\nimport RemixesWidget from \"@components/Home/Widgets/RemixesWidget\";\r\nimport \"@css/Body.scss\";\r\nimport ProjectInfo from \"@components/Home/Widgets/ProjectInfo\";\r\nimport { aboutLayout, defaultLayout, recitalLayout } from \"@static/gridLayouts\";\r\nimport Intro from \"@components/IntroModal\";\r\nimport { WidgetGrid } from \"@components/Editor/WidgetGrid\";\r\nimport HomeWidgetGrid from \"@components/Home/HomeWidgetGrid\";\r\nimport AboutModal from \"@components/AboutModal\";\r\nimport ReturnButton from \"@components/ReturnButton\";\r\nexport type HomeMode = \"player\" | \"notes\" | \"about\";\r\nconst Home = (): JSX.Element => {\r\n  const audio = useRef(null);\r\n\r\n  useEffect(() => {\r\n    audio.current = new AudioContext();\r\n  }, []);\r\n\r\n  const [activeTrack, setTrack] = useState<undefined | Track>(tracks[0]);\r\n  const [progress, setProgress] = useState(0);\r\n  const { appMode } = useApp();\r\n  const [curLayout, setCurLayout] = useState<Layout[]>(defaultLayout);\r\n  useEffect(() => {\r\n    setCurLayout(defaultLayout);\r\n  }, []);\r\n  const { trackCategory } = usePlaylist();\r\n  useEffect(() => {\r\n    const newLayout: Layout[] = [...curLayout];\r\n    // defaultLayout[0].w =\r\n    if (trackCategory === \"remix\") {\r\n      setCurLayout(defaultLayout);\r\n    }\r\n\r\n    if (trackCategory === \"recital\") {\r\n      setCurLayout(recitalLayout);\r\n    }\r\n    // if (appMode === \"projectInfo\"){\r\n    //   setCurLayout(aboutLayout)\r\n    // }\r\n  }, [trackCategory, appMode]);\r\n\r\n  // export default React.memo(CardGrid);\r\n  console.log(curLayout);\r\n  const TrackContext = createContext(null);\r\n  return (\r\n    <StoreProvider store = {homeStore}>\r\n    <section style={{ width: \"100vw\" }} className=\"dot-fill\">\r\n      <Intro />\r\n       <ReturnButton/>\r\n       <AboutModal/>\r\n      <HomeWidgetGrid/>\r\n\r\n    </section>\r\n    </StoreProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\ntype LayoutPos = Pick<Layout, \"x\" | \"y\" | \"w\" | \"h\">;\r\n\r\n\r\n\r\nfunction alterLayout(id: string, layout: Layout[], newLayout: LayoutPos) {\r\n  console.log(layout);\r\n  const toGet = layout.find((l) => l.i === id);\r\n  const ind = layout.indexOf(toGet);\r\n  // layout[ind] = { i: id, ...newLayout };\r\n}\r\n\r\n{\r\n  /* <p style={paragraphStyle}>\r\n          SeiSolo.io is a multimedia web installation exploring classical and\r\n          electronic music, aiming to create a unique and accessible way of\r\n          engaging with both. It features a recorded solo violin recital, five\r\n          commissioned remixes of the recital repertoire, and a web-based\r\n          software for users to remix on their own.\r\n        </p> */\r\n}\r\n{\r\n  /* <TrackContext.Provider value={activeTrack}> */\r\n}\r\n\r\n{\r\n  /* <BgBar audioElem={audioElem} /> */\r\n}\r\n{\r\n  /* <Viewer\r\n        track={activeTrack}\r\n        playing={playing}\r\n        appMode={homeMode}\r\n        setHomeMode={setHomeMode}\r\n      /> */\r\n}\r\n\r\n{\r\n  /* <AudioDataContainer\r\n            tracks={tracks}\r\n            track={activeTrack}\r\n            audioElem={audioElem}\r\n            playing={playing}\r\n            // audioContext={audio}\r\n          /> */\r\n}\r\n\r\n//12 rows\r\n// const layout = [\r\n//   // { i: \"artist\", x: 0, y: 0, w: 1, h: 1 },\r\n\r\n//   { i: \"title\", x: 0, y: 0, w: 3, h: 2 },\r\n//   // {i}\r\n//   { i: \"time\", x: 6, y: 0, w: 3, h: 2 },\r\n//   { i: \"oneRecital\", x: 0, y: 1, w: 5, h: 1 },\r\n//   //REMIXES\r\n//   { i: \"threeRemixes\", x: 6, y: 2, w: 3, h: 1 },\r\n//   { i: \"player\", x: 3, y: 4, w: 6, h: 2 },\r\n//   { i: \"about\", x: 8, y: 4, w: 2, h: 4 },\r\n//   //\r\n\r\n//   // { i: \"violin\", x: 1, y: 1, w: 1, h: 1 },\r\n//   //BOTTOM ROW\r\n//   { i: \"image\", x: 0, y: 6, w: 3, h: 6 },\r\n//   { i: \"waveform\", x: 3, y: 6, w: 9, h: 6 },\r\n// ];\r\n","export default class RenderLoop {\r\n  currentFps: number;\r\n  isActive: boolean;\r\n  msLastFrame: number;\r\n  cb: (deltaTime: number, totalTime: number) => void;\r\n  totalTime: number;\r\n  msFpsLimit: number;\r\n  run: () => void;\r\n\r\n  constructor(cb, fps = 0) {\r\n    this.currentFps = 0;\r\n    this.isActive = false;\r\n    this.msLastFrame = performance.now();\r\n    this.cb = cb;\r\n    this.totalTime = 0;\r\n\r\n    if (fps && typeof fps === \"number\" && !Number.isNaN(fps)) {\r\n      this.msFpsLimit = 1000 / fps;\r\n      this.run = () => {\r\n        const currentTime = performance.now();\r\n        const msDt = currentTime - this.msLastFrame;\r\n        this.totalTime += msDt;\r\n        const dt = msDt / 1000;\r\n\r\n        if (msDt >= this.msFpsLimit) {\r\n          this.cb(dt, this.totalTime);\r\n          this.currentFps = Math.floor(1.0 / dt);\r\n          this.msLastFrame = currentTime;\r\n        }\r\n\r\n        if (this.isActive) window.requestAnimationFrame(this.run);\r\n      };\r\n    } else {\r\n      this.run = () => {\r\n        const currentTime = performance.now();\r\n        const dt = (currentTime - this.msLastFrame) / 1000;\r\n        this.totalTime += currentTime - this.msLastFrame;\r\n        this.cb(dt, this.totalTime);\r\n        this.currentFps = Math.floor(1.0 / dt);\r\n        this.msLastFrame = currentTime;\r\n        if (this.isActive) window.requestAnimationFrame(this.run);\r\n      };\r\n    }\r\n  }\r\n\r\n  changeCb(cb) {\r\n    this.cb = cb;\r\n  }\r\n\r\n  start() {\r\n    this.msLastFrame = performance.now();\r\n    this.isActive = true;\r\n    window.requestAnimationFrame(this.run);\r\n    return this;\r\n  }\r\n\r\n  stop() {\r\n    this.isActive = false;\r\n    return this;\r\n  }\r\n}\r\n","import { GLSL } from \"gl-react\";\r\n\r\n// export const vs = GLSL`\r\n// #version 300 es\r\n// layout (location=0) in vec2 point;\r\n\r\n// void main() {\r\n//    gl_Position = vec4(point.x, point.y, 0.0, 1.0);\r\n// }\r\n// `;\r\n\r\nexport const vs = GLSL`\r\n#version 300 es    \r\nin vec4 position;\r\nvoid main() {\r\n  gl_Position = position;\r\n}\r\n`;\r\n\r\nexport const fs = GLSL`\r\n#version 300 es    \r\nprecision highp float;\r\nuniform vec2 iResolution;\r\nuniform float iTime;\r\nuniform sampler2D matCap;\r\nuniform sampler2D cloudNoise;\r\nuniform sampler2D canvas;\r\n\r\nout vec4 fragColor;\r\n\r\n\r\nvec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n  vec4 color = vec4(0.0);\r\n  vec2 off1 = vec2(1.3333333333333333) * direction;\r\n  color += texture(image, uv) * 0.29411764705882354;\r\n  color += texture(image, uv + (off1 / resolution)) * 0.35294117647058826;\r\n  color += texture(image, uv - (off1 / resolution)) * 0.35294117647058826;\r\n  return color; \r\n}\r\n\r\nvec2 matcap(vec3 eye, vec3 normal) {\r\n  vec3 reflected = reflect(eye, normal);\r\n  float m = 2.8284271247461903 * sqrt( reflected.z+1.0 );\r\n  return reflected.xy / m + 0.5;\r\n}\r\n\r\nfloat fresnel(vec3 ray, vec3 normal, float ratio){\r\n  return pow(1. + dot(ray, normal), 3.);\r\n}\r\n\r\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\r\n{\r\n  vec3 pa = p - a, ba = b - a;\r\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\r\n  return length( pa - ba*h ) - r;\r\n}\r\n\r\n\r\nfloat sdf(vec3 p){\r\n  // vec3 p1 = rotate(p, vec3(1.), iTime/5.);\r\n  // vec2 uv =  (-iResolution.xy + 2.0 * gl_FragCoord.xy)/iResolution.y;\r\n  vec2 uv =  gl_FragCoord.xy/iResolution.xy;\r\n  vec2 translate = vec2(-0.5, -0.5);\r\n  uv+=translate;\r\n  vec4 displacement = texture(canvas, uv-translate);\r\n  // float sdCapsule = sdCapsule(p, vec3(-1., -0., -0.), vec3(1., 0., 0.), sin(pow(uv.x, 2.)));\r\n  float sdCapsule = sdCapsule(p, vec3(-1., -0., -0.), vec3(1., 0., 0.), (pow(displacement.x+.01, .6)+.05*.2));\r\n  return sdCapsule;\r\n}\r\n\r\n\r\nvec3 calcNormal( in vec3 p ) // for function f(p)\r\n{\r\n    const float eps = 0.0001; // or some other value\r\n    const vec2 h = vec2(eps,0);\r\n    return normalize( vec3(sdf(p+h.xyy) - sdf(p-h.xyy),\r\n                           sdf(p+h.yxy) - sdf(p-h.yxy),\r\n                           sdf(p+h.yyx) - sdf(p-h.yyx) ) );\r\n}\r\n\r\nvoid main() {\r\n    vec2 uv =  gl_FragCoord.xy/iResolution.xy;\r\n    vec2 translate = vec2(-0.5, -0.5);\r\n    uv+=translate;\r\n    vec3 col = vec3(100., 100., 100.);\r\n    vec3 camPos = vec3(0., 0., 2.);\r\n    vec3 ray = normalize(vec3(uv, -1.));\r\n    float tMax = 5.;\r\n    //GRID\r\n    float gridLineWidth = 0.05; \r\n    float divisor = 30.;\r\n    vec2 Coord = uv;\r\n    \r\n    float dist= length(uv);\r\n    vec3 bg = mix(vec3(5.), vec3(0.5), dist);\r\n    float grid = min(\r\n        smoothstep(0.1, 0.25, abs(sin(uv.x * divisor))),\r\n        smoothstep(0.1, 0.25, abs(sin(uv.y * divisor)))\r\n    );\r\n    //ADD SECOND GRID\r\n\r\n    vec3 rayPos = camPos;\r\n    float t = 0.;\r\n\r\n    for(int i = 0; i < 256; i++){\r\n      vec3 pos = camPos + t*ray;\r\n      float h = sdf(pos);\r\n      if(h<0.001 || t>tMax) break;\r\n      t+=h;\r\n    }\r\n    if (t<tMax){\r\n      vec3 pos = camPos + t*ray;\r\n      col = vec3(1.);\r\n      vec3 normal = calcNormal(pos);\r\n      col = normal;\r\n      float diff = dot(vec3(1.), normal);\r\n      vec2 matcapUV = matcap(ray, normal);\r\n      col = vec3(diff);\r\n      col = vec3(matcapUV, 0.);\r\n      col = texture(matCap, matcapUV).rgb;\r\n      vec3 f = vec3(fresnel(ray, normal, 3.));\r\n      col = mix(col, bg, f);\r\n  }\r\n  fragColor = vec4(col, 1.0);\r\n  // fragColor = vec4(uv.x);\r\n  // fragColor = vec4(uv.y);\r\n  // fragColor = texture(canvas, uv);\r\n  // fragColor = tex\r\n\r\n\r\n}\r\n`;\r\n\r\n// export const fs = GLSL`\r\n// #version 300 es\r\n// precision highp float;\r\n// uniform vec2 iResolution;\r\n// uniform float iTime;\r\n// uniform sampler2D matCap;\r\n// uniform sampler2D cloudNoise;\r\n// uniform sampler2D dataBig;\r\n\r\n// out vec4 fragColor;\r\n\r\n// vec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n//   vec4 color = vec4(0.0);\r\n//   vec2 off1 = vec2(1.3333333333333333) * direction;\r\n//   color += texture(image, uv) * 0.29411764705882354;\r\n//   color += texture(image, uv + (off1 / resolution)) * 0.35294117647058826;\r\n//   color += texture(image, uv - (off1 / resolution)) * 0.35294117647058826;\r\n//   return color;\r\n// }\r\n\r\n// void main() {\r\n//     vec2 uv =  gl_FragCoord.xy/iResolution.xy;\r\n//     float st = sin(iTime);\r\n//     // vec2 uv = (-iResolution.xy* gl_FragCoord.xy)/iResolution.y;\r\n//     // vec2 uv = (gl_FragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\r\n//     // vec3 matCapCol = texture(matCap, uv, st*3.).rgb;\r\n//     float d = 9.;\r\n//     // float d = st;\r\n//     vec2 dir = vec2(d, d);\r\n//     vec3 blur = blur5(matCap, uv, iResolution, dir).rgb;\r\n//     // fragColor = matCapCol;\r\n//     // fragColor = vec4(uv.x);\r\n//     // fragColor = vec4(matCapCol, 1.0);\r\n//     fragColor = vec4(blur, 1.);\r\n//     // fragColor = vec4(1.0*sin(iTime));\r\n// }\r\n// `;\r\n","import React, { useState, useEffect, useRef, Suspense } from \"react\";\r\nimport * as twgl from \"twgl.js\";\r\nimport glsl from \"babel-plugin-glsl/macro\";\r\nimport { useAsyncTask, useFetch } from \"@hooks\";\r\nimport data from \"@static/TRACKS_DATA.json\";\r\nimport BasicSdf from \"@components/Testing/BasicSdf\";\r\nimport audioFragShader from \"@components/Testing/audioFragShader\";\r\nimport { GLSL } from \"gl-react\";\r\nimport RenderLoop from \"./RenderLoop\";\r\nimport { vs, fs } from \"./shaders\";\r\n// import audioFragShader from \"@components/Testing/audioFragShader\";\r\n\r\ninterface TrackData {\r\n  duration: number;\r\n  samplerate: number;\r\n  subsample: string;\r\n  data: number[];\r\n}\r\n\r\ninterface MyData {\r\n  [key: string]: TrackData;\r\n}\r\n\r\nconst SamplingTesting = (): JSX.Element => {\r\n  // \"use strict\";\r\n  let startTime = performance.now();\r\n\r\n  //element refs\r\n  const wrapperRef = useRef<HTMLDivElement>();\r\n  const canvasRef = useRef<HTMLCanvasElement>();\r\n  const buttonRef = useRef<HTMLButtonElement>();\r\n\r\n  const [imagesLoaded, setImagesLoaded] = useState(false);\r\n  const [htmlImages, setImages] = useState<HTMLImageElement[]>([]);\r\n\r\n  useEffect(() => {\r\n    loadImages(\r\n      [\r\n        `${process.env.PUBLIC_URL}/Textures/pinkMatcap.png`,\r\n        `${process.env.PUBLIC_URL}/Textures/bunny_thickness.jpg`,\r\n        `${process.env.PUBLIC_URL}/Textures/dataBig.jpg`,\r\n      ],\r\n      (images) => {\r\n        setImages(images);\r\n        // setImages(images);\r\n        // setImagesLoaded(true);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"DOING THIS USE EFFECT\");\r\n    if (canvasRef.current && buttonRef.current && wrapperRef.current) {\r\n      const textureCanvas = document.getElementsByClassName(\r\n        \"gradient-canvas\"\r\n      )[0].firstChild.firstChild as HTMLCanvasElement;\r\n      var textureContext = textureCanvas.getContext(\"2d\");\r\n\r\n      const textureWidth = textureCanvas.height;\r\n      const textureHeight = textureCanvas.width;\r\n\r\n      console.log(textureCanvas);\r\n\r\n      const wrapper = wrapperRef.current;\r\n      const { width: w, height: h } = wrapper.getBoundingClientRect();\r\n      const cvs = canvasRef.current;\r\n      canvasRef.current.width = w;\r\n      canvasRef.current.height = h;\r\n      console.log(w, h);\r\n\r\n      const { gl, program } = initGl(cvs, vs, fs);\r\n      // gl.enable(gl.SAMPLE_ALPHA_TO_COVERAGE);\r\n      // gl.enable(gl.SAMPLE_COVERAGE);\r\n      // gl.sampleCoverage(1.5, false);\r\n      const programInfo = twgl.createProgramInfo(gl, [vs, fs]);\r\n      const bufferInfo = initVBO(gl);\r\n\r\n      const textCanv = createCanvasTexture(gl, textureContext);\r\n\r\n      // console.log(htmlImages);\r\n      const t = [\r\n        `${process.env.PUBLIC_URL}/Textures/pinkMatcap.png`,\r\n        `${process.env.PUBLIC_URL}/Textures/cloudNoise.png`,\r\n        `${process.env.PUBLIC_URL}/Textures/dataBig.jpeg`,\r\n      ];\r\n      const textures = t.map((image, i) =>\r\n        makeTexture(gl, {\r\n          unit: i,\r\n          url: image,\r\n        })\r\n      );\r\n\r\n      // var textureCanvas = document.getElementById(\"texture\");\r\n\r\n      const { iResolution, iTime, matCap, cloudNoise, canvas } = getUniforms(\r\n        gl,\r\n        program,\r\n        [\"iResolution\", \"iTime\", \"matCap\", \"cloudNoise\", \"canvas\"]\r\n      );\r\n\r\n      const { width, height } = cvs.getBoundingClientRect();\r\n      gl.uniform2f(iResolution, width, height);\r\n      gl.uniform1i(matCap, 0);\r\n      gl.uniform1i(cloudNoise, 1);\r\n      gl.uniform1i(canvas, 2);\r\n\r\n      gl.activeTexture(gl.TEXTURE0);\r\n      gl.bindTexture(gl.TEXTURE_2D, textures[0]);\r\n      gl.activeTexture(gl.TEXTURE1);\r\n      gl.bindTexture(gl.TEXTURE_2D, textures[1]);\r\n      gl.activeTexture(gl.TEXTURE2);\r\n      gl.bindTexture(gl.TEXTURE_2D, textCanv);\r\n      // const uTimeIndex = gl.getUniformLocation(program, \"iTime\");\r\n\r\n      const RL = new RenderLoop(function (dt, tInMs) {\r\n        gl.uniform1f(iTime, tInMs / 1000.0);\r\n        // gl.uni\r\n        twgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);\r\n        twgl.drawBufferInfo(gl, bufferInfo);\r\n        updateTexture(gl, textCanv, textureCanvas);\r\n\r\n        // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        // gl.drawElements(gl.TRIANGLE_STRIP, 4, gl.UNSIGNED_SHORT, 0);\r\n      });\r\n      const startShader = () => {\r\n        RL.start();\r\n      };\r\n      buttonRef.current.addEventListener(\"click\", startShader);\r\n      //   return buttonRef.current.removeEventListener(\"click\", startShader);\r\n    }\r\n  }, [htmlImages]);\r\n\r\n  return (\r\n    <section ref={wrapperRef}>\r\n      <canvas\r\n        style={{ border: \"1px solid black\", width: \"100%\", height: \"30vh\" }}\r\n        ref={canvasRef}\r\n      ></canvas>\r\n      <button\r\n        ref={buttonRef}\r\n        style={{ border: \"1px solid black\", width: \"100%\", height: \"2vh\" }}\r\n      >\r\n        Press To Start\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SamplingTesting;\r\n\r\nfunction updateTexture(\r\n  gl: WebGL2RenderingContext,\r\n  texture: WebGLTexture,\r\n  canvas: HTMLCanvasElement\r\n) {\r\n  const level = 0;\r\n  const internalFormat = gl.RGBA;\r\n  const srcFormat = gl.RGBA;\r\n  const srcType = gl.UNSIGNED_BYTE;\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  gl.texImage2D(\r\n    gl.TEXTURE_2D,\r\n    level,\r\n    internalFormat,\r\n    srcFormat,\r\n    srcType,\r\n    canvas\r\n  );\r\n}\r\n\r\nfunction loadTexture(gl, url) {\r\n  const texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n  // Because images have to be downloaded over the internet\r\n  // they might take a moment until they are ready.\r\n  // Until then put a single pixel in the texture so we can\r\n  // use it immediately. When the image has finished downloading\r\n  // we'll update the texture with the contents of the image.\r\n  const level = 0;\r\n  const internalFormat = gl.RGBA;\r\n  const width = 1;\r\n  const height = 1;\r\n  const border = 0;\r\n  const srcFormat = gl.RGBA;\r\n  const srcType = gl.UNSIGNED_BYTE;\r\n  const pixel = new Uint8Array([0, 0, 255, 255]); // opaque blue\r\n  gl.texImage2D(\r\n    gl.TEXTURE_2D,\r\n    level,\r\n    internalFormat,\r\n    width,\r\n    height,\r\n    border,\r\n    srcFormat,\r\n    srcType,\r\n    pixel\r\n  );\r\n\r\n  const image = new Image();\r\n  image.onload = function () {\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      level,\r\n      internalFormat,\r\n      srcFormat,\r\n      srcType,\r\n      image\r\n    );\r\n    gl.generateMipmap(gl.TEXTURE_2D);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n  };\r\n  image.src = url;\r\n\r\n  return texture;\r\n}\r\n\r\nfunction loadImages(\r\n  urls: string[],\r\n  callback: (images: HTMLImageElement[]) => void\r\n) {\r\n  var images = [];\r\n  var imagesToLoad = urls.length;\r\n\r\n  // Called each time an image finished loading.\r\n  var onImageLoad = function () {\r\n    --imagesToLoad;\r\n    // If all the images are loaded call the callback.\r\n    if (imagesToLoad == 0) {\r\n      callback(images);\r\n    }\r\n  };\r\n\r\n  for (var ii = 0; ii < imagesToLoad; ++ii) {\r\n    var image = loadImage2(urls[ii], onImageLoad);\r\n    images.push(image);\r\n  }\r\n  console.log(images);\r\n  return images;\r\n}\r\n\r\nfunction loadImage2(url, callback) {\r\n  var image = new Image();\r\n  image.src = url;\r\n  image.onload = callback;\r\n  return image;\r\n}\r\n\r\nconst initGl = (\r\n  canvas: HTMLCanvasElement,\r\n  vertexShaderSrc: string,\r\n  fragShaderSrc: string\r\n): { gl: WebGL2RenderingContext; program: WebGLProgram } => {\r\n  const gl = canvas.getContext(\"webgl2\");\r\n  console.log(gl);\r\n  if (!gl) {\r\n    document.write(\"Please change to a browser which supports WebGl 2.0~\");\r\n    return;\r\n  }\r\n  // set background\r\n  gl.clearColor(0, 0, 0, 0.9);\r\n\r\n  const vertexShader = gl.createShader(gl.VERTEX_SHADER),\r\n    fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n\r\n  gl.shaderSource(vertexShader, vertexShaderSrc.trim());\r\n  gl.shaderSource(fragmentShader, fragShaderSrc.trim());\r\n\r\n  gl.compileShader(vertexShader);\r\n  gl.compileShader(fragmentShader);\r\n\r\n  if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\r\n    console.error(gl.getShaderInfoLog(vertexShader));\r\n    return;\r\n  }\r\n\r\n  if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n    console.error(gl.getShaderInfoLog(fragmentShader));\r\n    return;\r\n  }\r\n\r\n  let program = gl.createProgram();\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n  gl.linkProgram(program);\r\n\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    console.log(gl.getProgramInfoLog(program));\r\n  }\r\n\r\n  gl.useProgram(program);\r\n\r\n  return { gl, program };\r\n};\r\n\r\nconst initVBO = (gl: WebGL2RenderingContext): twgl.BufferInfo => {\r\n  gl.enable(gl.DEPTH_TEST);\r\n\r\n  const arrays = {\r\n    position: {\r\n      numComponents: 2,\r\n      // data: [-1, -1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1],\r\n      data: [-1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1],\r\n    },\r\n  };\r\n\r\n  const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\r\n  return bufferInfo;\r\n};\r\n\r\nconst getUniforms = (\r\n  gl: WebGL2RenderingContext,\r\n  program: WebGLProgram,\r\n  names: string[]\r\n) => {\r\n  const us = names.map((n) => [n, gl.getUniformLocation(program, n)]);\r\n  return Object.fromEntries(us);\r\n  // return { ...us };\r\n};\r\n\r\ninterface ImageProps {\r\n  // width: number;\r\n  // height: number;\r\n  // image: HTMLImageElement;\r\n  unit: number;\r\n  url: string;\r\n}\r\nconst makeTexture = (\r\n  gl: WebGL2RenderingContext,\r\n  props: ImageProps\r\n): WebGLTexture => {\r\n  // const { width, height, image, unit } = props;\r\n  const { url, unit } = props;\r\n  const texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n  const level = 0;\r\n  const internalFormat = gl.RGBA;\r\n  const width = 1;\r\n  const height = 1;\r\n  const border = 0;\r\n  const srcFormat = gl.RGBA;\r\n  const srcType = gl.UNSIGNED_BYTE;\r\n  const pixel = new Uint8Array([0, 0, 255, 255]); // opaque blue\r\n\r\n  gl.texImage2D(\r\n    gl.TEXTURE_2D,\r\n    level,\r\n    internalFormat,\r\n    width,\r\n    height,\r\n    border,\r\n    srcFormat,\r\n    srcType,\r\n    pixel\r\n  );\r\n\r\n  const image = new Image();\r\n  image.onload = function () {\r\n    console.log(\"LOADED TEXTURE\", image.src);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      // unit,\r\n      level,\r\n      internalFormat,\r\n      srcFormat,\r\n      srcType,\r\n      image\r\n    );\r\n    gl.generateMipmap(gl.TEXTURE_2D);\r\n  };\r\n  image.src = url;\r\n  console.log(image.src);\r\n\r\n  return texture;\r\n};\r\n\r\nfunction createCanvasTexture(\r\n  gl: WebGL2RenderingContext,\r\n  canvContext: CanvasRenderingContext2D\r\n) {\r\n  const texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n  // Because video has to be download over the internet\r\n  // they might take a moment until it's ready so\r\n  // put a single pixel in the texture so we can\r\n  // use it immediately.\r\n  const level = 0;\r\n  const internalFormat = gl.RGBA;\r\n  const width = 1;\r\n  const height = 1;\r\n  const border = 0;\r\n  const srcFormat = gl.RGBA;\r\n  const srcType = gl.UNSIGNED_BYTE;\r\n  const pixel = new Uint8Array([0, 0, 255, 255]); // opaque blue\r\n  gl.texImage2D(\r\n    gl.TEXTURE_2D,\r\n    level,\r\n    internalFormat,\r\n    width,\r\n    height,\r\n    border,\r\n    srcFormat,\r\n    srcType,\r\n    pixel\r\n  );\r\n\r\n  // Turn off mips and set  wrapping to clamp to edge so it\r\n  // will work regardless of the dimensions of the video.\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n  // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n  return texture;\r\n}\r\n","import Konva from \"konva\";\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Stage, Layer, Star, Text, Rect } from \"react-konva\";\r\nimport THREE, {Vector3} from \"three\";\r\n\r\nfunction generateShapes() {\r\n  return [...Array(10)].map((_, i) => ({\r\n    id: i.toString(),\r\n    x: Math.random() * window.innerWidth,\r\n    y: Math.random() * window.innerHeight,\r\n    rotation: Math.random() * 180,\r\n    isDragging: false,\r\n  }));\r\n}\r\n\r\nconst INITIAL_STATE = generateShapes();\r\nconst CanvasGradient = (): JSX.Element => {\r\n  const [scale, setScale] = useState(1);\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [anchorPoints, setAnchorPoints] = useState([]);\r\n  const [relativePosText, setRelativePosText] = useState(null);\r\n\r\n  const secondRectRef = useRef(null);\r\n  const stageRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (rectRef && rectRef.current) {\r\n      const rect = rectRef.current.getClientRect();\r\n      const anchorsPos = [];\r\n      anchorsPos.push({\r\n        x: rect.x + rect.width / 2,\r\n        y: rect.y\r\n      });\r\n      setAnchorPoints(anchorsPos);\r\n    }\r\n  }, [secondRectRef]);\r\n\r\n  function getRelativeNodePosition(node, relativeNode) {\r\n    if (!node.getStage()) {\r\n      return null;\r\n    }\r\n\r\n    // get pointer (say mouse or touch) position\r\n    var pos = relativeNode.position();\r\n    if (!pos) {\r\n      return null;\r\n    }\r\n\r\n    var transform = node.getAbsoluteTransform().copy();\r\n    // to detect relative position we need to invert transform\r\n    transform.invert();\r\n    // now we can find relative point\r\n    return transform.point(pos);\r\n  }\r\n\r\n  const handleWheel = (event) => {\r\n    event.evt.preventDefault();\r\n    const currentStageRef = stageRef.current;\r\n\r\n    if (currentStageRef) {\r\n      const stage = currentStageRef.getStage();\r\n\r\n      if (event.evt.ctrlKey) {\r\n        const oldScale = stage.scaleX();\r\n\r\n        const mousePointTo = {\r\n          x: stage.getPointerPosition().x / oldScale - stage.x() / oldScale,\r\n          y: stage.getPointerPosition().y / oldScale - stage.y() / oldScale\r\n        };\r\n\r\n        const unboundedNewScale = oldScale - event.evt.deltaY * 0.01;\r\n        let newScale = unboundedNewScale;\r\n        if (unboundedNewScale < 0.1) {\r\n          newScale = 0.1;\r\n        } else if (unboundedNewScale > 10.0) {\r\n          newScale = 10.0;\r\n        }\r\n\r\n        const newPosition = {\r\n          x:\r\n            -(mousePointTo.x - stage.getPointerPosition().x / newScale) *\r\n            newScale,\r\n          y:\r\n            -(mousePointTo.y - stage.getPointerPosition().y / newScale) *\r\n            newScale\r\n        };\r\n\r\n        setScale(newScale);\r\n        setPosition(newPosition);\r\n      } else {\r\n        const dragDistanceScale = 0.75;\r\n        const newPosition = {\r\n          x: position.x - dragDistanceScale * event.evt.deltaX,\r\n          y: position.y - dragDistanceScale * event.evt.deltaY\r\n        };\r\n\r\n        setPosition(newPosition);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleZoomIn = () => {\r\n    setScale((prevValue) =>\r\n      Math.min(10.0, Math.ceil(prevValue * 1.1 * 10) / 10)\r\n    );\r\n  };\r\n\r\n  const handleZoomOut = () => {\r\n    setScale((prevValue) =>\r\n      Math.max(0.1, Math.floor(prevValue * 0.9 * 10) / 10)\r\n    );\r\n  };\r\n\r\n  function getRelativePosition(e) {\r\n    const pos = getRelativeNodePosition(rectRef.current, e.target);\r\n    setRelativePosText(JSON.stringify(pos));\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    const textureCanvas = document.getElementsByClassName(\r\n      \"gradient-canvas\"\r\n    )[0].firstChild.firstChild as HTMLCanvasElement;\r\n    if (textureCanvas){\r\n      // const controls = new CanvasControls(new Vector3(0, 0, 0), textureCanvas)\r\n    }\r\n   \r\n  },[])\r\n\r\n  const height = 200;\r\n  const width = window.innerWidth;\r\n  const numStops = 200;\r\n  const arr = Array.from(Array(numStops).keys());\r\n  const stops: (string | number)[] = [];\r\n  //   const rectWidth = window.innerWidth * 4;\r\n  const rectWidth = 4000;\r\n  arr.forEach((element, i) => {\r\n    const mult = rectWidth / numStops;\r\n    const x = mult * i;\r\n    const y = 0;\r\n    const val = 200 * (i % 2);\r\n    const col = `rgb(${val}, ${val}, ${val})`;\r\n    stops.push(x / rectWidth);\r\n    // stops.push(x / rectWidth);\r\n    stops.push(col);\r\n    // return [x / rectWidth, col];\r\n  });\r\n  useEffect(() => {\r\n    console.log(stops);\r\n    console.log([...stops]);\r\n  }, [stops]);\r\n  console.log(stops);\r\n\r\n  const rectRef = useRef<Konva.Rect>();\r\n\r\n  React.useEffect(() => {\r\n    var period = 300;\r\n\r\n    // var anim = new Konva.Animation((frame) => {\r\n    //   //   rectRef.current.opacity((Math.sin(frame.time / period) + 1) / 2);\r\n    //   const curX = rectRef.current.x();\r\n    //   // rectRef.current.x(curX - 1);\r\n    //   // console.log(frame)\r\n    //   const newScale = Math.sin(frame.time*.001)\r\n    //   console.log(newScale);\r\n    //   // rectRef.current.scaleX(newScale)\r\n    // }, rectRef.current.getLayer());\r\n\r\n    // anim.start();\r\n    // return () => {\r\n    //   anim.stop();\r\n    // };\r\n  }, []);\r\n\r\n  return (\r\n    <Stage\r\n      width={window.innerWidth}\r\n      height={281}\r\n      id={\"gradient-canvas\"}\r\n      className=\"gradient-canvas\"\r\n    >\r\n      <Layer id={\"gradient-canvas\"}>\r\n        <Rect\r\n          ref={rectRef}\r\n          x={0}\r\n          y={0}\r\n          width={rectWidth}\r\n          height={height}\r\n          numPoints={5}\r\n          innerRadius={20}\r\n          outerRadius={40}\r\n          scaleX={30}\r\n          //   fill=\"#89b717\"\r\n          opacity={0.8}\r\n          draggable\r\n          shadowColor=\"black\"\r\n          shadowBlur={10}\r\n          shadowOpacity={0.6}\r\n          fillLinearGradientStartPoint={{ x: 0, y: height }}\r\n          fillLinearGradientEndPoint={{ x: width, y: height }}\r\n          fillLinearGradientColorStops={stops}\r\n          //   fillLinearGradientColorStops={[0, \"red\", 1, \"black\"]}\r\n        />\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default CanvasGradient;\r\n","export enum DropCategory {\r\n  SampleTraySample,\r\n  EDITOR,\r\n  PLACEHOLDER,\r\n  IFRAME,\r\n}\r\n\r\nexport enum DragSource {\r\n  SAMPLE_TRAY,\r\n}\r\n\r\nexport enum InteractionType {\r\n  ACTIVE = \"ACTIVE\",\r\n  STATIC = \"STATIC\",\r\n}\r\nexport enum AppMode {\r\n  DISPLAY = \"DISPLAY\",\r\n  EDIT = \"EDIT\",\r\n  CYCLE = \"CYCLE\",\r\n}\r\n\r\nexport enum Composition {\r\n  BACH_MOVEMENT_1 = \"BACH_MOVEMENT_1\",\r\n  BACH_MOVEMENT_2 = \"BACH_MOVEMENT_2\",\r\n  BACH_MOVEMENT_3 = \"BACH_MOVEMENT_3A\",\r\n  BACH_MOVEMENT_4 = \"BACH_MOVEMENT_4\",\r\n  BARTOK_MOVEMENT_1 = \"BARTOK_MOVEMENT_1\",\r\n  BARTOK_MOVEMENT_2 = \"BARTOK_MOVEMENT_2\",\r\n  YSAE_MOVEMENT_1 = \"YSAE_MOVEMENT_1\",\r\n}\r\n\r\nexport type HomeMode = \"player\" | \"notes\" | \"about\";\r\n","enum IFrameLoadError {\r\n  CROSS_ORIGIN = \"CROSS_ORIGIN\",\r\n}\r\n\r\nenum IFrameLoadWarning {\r\n  MALFORMED_URL = \"MALFORMED_URL\",\r\n}\r\n\r\nclass IFrameValidator {\r\n  url!: string;\r\n  errors!: IFrameLoadError[];\r\n  warnings!: IFrameLoadWarning[];\r\n  constructor(url: string) {\r\n    this.errors = [];\r\n    this.warnings = [];\r\n    this.url = url;\r\n  }\r\n  validate(event: React.SyntheticEvent<HTMLIFrameElement, Event>): void {\r\n    const xoCheckArray = checkForXO(event);\r\n    console.log(xoCheckArray);\r\n    this.errors.push(...xoCheckArray);\r\n    console.log(this.errors);\r\n    const malformedUrlCheckArray = validURL(this.url);\r\n    this.warnings.push(...malformedUrlCheckArray);\r\n    console.log(malformedUrlCheckArray);\r\n  }\r\n  isValid(): boolean {\r\n    return this.errors.length == 0;\r\n  }\r\n  errorMessages(): string[] {\r\n    let errors: string[] = [];\r\n    this.errors.map((e) => {\r\n      switch (e) {\r\n        case IFrameLoadError.CROSS_ORIGIN:\r\n          errors.push(\r\n            `Blocked a frame with origin ${this.url}; from accessing a cross-origin frame.`\r\n          );\r\n          break;\r\n        default:\r\n          console.log(\"error did not match an error enum\");\r\n      }\r\n    });\r\n    return errors;\r\n  }\r\n}\r\n\r\nexport default IFrameValidator;\r\n\r\nfunction checkForXO(\r\n  event: React.SyntheticEvent<HTMLIFrameElement, Event>\r\n): IFrameLoadError[] {\r\n  let errorsArray: IFrameLoadError[] = [];\r\n  const test = event.target as HTMLIFrameElement;\r\n//   console.log(test.contentDocument);\r\n//   console.log(test.contentWindow);\r\n  try { \r\n      \r\n    test.contentWindow?.name;\r\n  } catch (e) {\r\n    if (e.message.includes(\"cross-origin\")) {\r\n      console.log(e.message);\r\n      errorsArray.push(IFrameLoadError.CROSS_ORIGIN);\r\n    } else return [];\r\n  }\r\n  return errorsArray;\r\n}\r\n\r\nfunction validURL(str: string): IFrameLoadWarning[] {\r\n  let warningsArray = [];\r\n  const pattern = new RegExp(\r\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\r\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\r\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\r\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n    \"i\"\r\n  ); // fragment locator\r\n  if (!pattern.test(str)) {\r\n    warningsArray.push(IFrameLoadWarning.MALFORMED_URL);\r\n  }\r\n  return warningsArray;\r\n}\r\n","import React, { useState, useEffect, useRef, Suspense } from \"react\";\r\nimport * as twgl from \"twgl.js\";\r\nimport glsl from \"babel-plugin-glsl/macro\";\r\nimport { useAsyncTask, useFetch } from \"@hooks\";\r\nimport data from \"@static/TRACKS_DATA.json\";\r\nimport BasicSdf from \"@components/Testing/BasicSdf\";\r\nimport audioFragShader from \"@components/Testing/audioFragShader\";\r\nimport SamplingTesting from \"./SamplingTesting/SamplingTesting\";\r\nimport CanvasGradient from \"./CanvasGradient\";\r\nimport BasicAudioSetup from \"./BasicAudioSetup\";\r\n\r\ninterface TrackData {\r\n  duration: number;\r\n  samplerate: number;\r\n  subsample: string;\r\n  data: number[];\r\n}\r\n\r\ninterface MyData {\r\n  [key: string]: TrackData;\r\n}\r\n\r\nconst Testing = (): JSX.Element => {\r\n  return (\r\n    <section>\r\n      <SamplingTesting />\r\n      {/* <BasicAudioSetup /> */}\r\n      <CanvasGradient />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Testing;\r\n\r\nconst vs = /*glsl*/ `\r\nattribute vec4 position;\r\nvoid main() {\r\n  gl_Position = position;\r\n}\r\n`;\r\n","import \"@css/App.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useStoreActions, useToggle } from \"@hooks\";\nimport { useKeyboardShortcut } from \"crooks\";\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport Instrument from \"./pages/Instrument\";\nimport Home from \"./pages/Home\";\nimport Testing from \"./pages/Testing\";\nimport { StoreProvider } from \"easy-peasy\";\nimport homeStore from \"./stores/homeStore\";\n\nconst App = (): JSX.Element => {\n  const fetchCardDataGoogleSheetThunk = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchAppGoogleSheet\n  );\n  const processCompositions = useStoreActions(\n    (actions) => actions.compositionsModel.processCompositions\n  );\n  const fetchCompositionSheet = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchCompositionsSheet\n  );\n  const fetchSamples = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchSamplesSheet\n  );\n  const [isSampleTrayActive, toggleSampleTrayIsActive] = useToggle(false);\n\n  useKeyboardShortcut({\n    keyCode: 70, //f\n    action: () => {\n      toggleSampleTrayIsActive();\n    },\n    disabled: false, // This key is not required\n  });\n\n  useEffect(() => {\n    fetchCardDataGoogleSheetThunk();\n    processCompositions();\n    fetchCompositionSheet();\n    fetchSamples();\n  }, [fetchCardDataGoogleSheetThunk]);\n\n  return (\n    <Router>\n      <Route path=\"/app\" component={Instrument} />\n      <StoreProvider store={homeStore}>\n        <Route path=\"/\" exact component={Home} />\n      </StoreProvider>\n      <Route path=\"/testing\" component={Testing} />\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import type RawCardRow from \"@interfaces/RawCardRow\";\r\nimport { InteractionType } from \"@enums\";\r\nimport IFrameValidator from \"../IFrameValidator\";\r\n\r\nexport default class CardData {\r\n  src: string;\r\n  title: string;\r\n  added?: Date;\r\n  sourceId: string;\r\n  author: string;\r\n  interaction: InteractionType;\r\n  validator!: IFrameValidator;\r\n  isActive!: boolean;\r\n  failed!: boolean;\r\n\r\n  constructor(row: RawCardRow) {\r\n    this.src = row.src;\r\n    this.title = row.title;\r\n    this.added = new Date(row.added);\r\n    this.sourceId = row.src;\r\n    this.author = row.author;\r\n    this.interaction =\r\n      InteractionType[row.interaction as keyof typeof InteractionType];\r\n    this.isActive = false;\r\n    this.validator = new IFrameValidator(this.src);\r\n    this.failed = false;\r\n    // this.error = undefined;\r\n  }\r\n  setActive(b: boolean): void {\r\n    this.isActive = b;\r\n  }\r\n  fail() {\r\n    this.failed = true;\r\n  }\r\n}\r\n","import { Layout, Layouts } from \"react-grid-layout\";\r\n// const availableHandles: ResizeHandle[] = [\r\n//   \"s\",\r\n//   \"w\",\r\n//   \"e\",\r\n//   \"n\",\r\n//   \"sw\",\r\n//   \"nw\",\r\n//   \"se\",\r\n//   \"ne\",\r\n// ];\r\nconst defaultGridLayoutArray: Layout[] = [\r\n  {\r\n    i: \"https://seisolo.io\",\r\n    x: 0,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n  {\r\n    i: \"https://seisolo2.io\",\r\n    x: 1,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n  {\r\n    i: \"https://seisolo3.io\",\r\n    x: 2,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n  {\r\n    i: \"https://seisolo4.io\",\r\n    x: 3,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n];\r\n\r\n// const defaultGridLayoutArr: Layout[] = [\r\n//   { i: \"clock\", x: 0, y: 0, w: 2, h: 1, static: true },\r\n//   {\r\n//     i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_1\",\r\n//     x: 0,\r\n//     y: 1,\r\n//     w: 1,\r\n//     h: 1,\r\n//     static: true,\r\n//   },\r\n//   {\r\n//     i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_3\",\r\n//     x: 2,\r\n//     y: 0,\r\n//     w: 1,\r\n//     h: 1,\r\n//     minW: 2,\r\n//     maxW: 4,\r\n//   },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_3\", x: 2, y: 0, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_3\", x: 3, y: 0, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_5\", x: 0, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_6\", x: 1, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_7\", x: 2, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_8\", x: 3, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_9\", x: 0, y: 3, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_10\", x: 1, y: 3, w: 1, h: 1 },\r\n// ];\r\n\r\nconst defaultLayouts: Layouts = {\r\n  lg: defaultGridLayoutArray,\r\n  md: defaultGridLayoutArray,\r\n  sm: defaultGridLayoutArray,\r\n  xs: defaultGridLayoutArray,\r\n  xxs: defaultGridLayoutArray,\r\n};\r\n\r\nconsole.log(JSON.stringify(defaultLayouts));\r\nexport default defaultLayouts;\r\n","import { Layouts } from \"react-grid-layout\";\r\n/**\r\n *\r\n */\r\nexport default class History {\r\n  events!: Layouts[];\r\n  currentStep!: number;\r\n\r\n  constructor() {\r\n    const emptyLayoutsArray: Layouts[] = [];\r\n    this.events = emptyLayoutsArray;\r\n    this.currentStep = 0;\r\n  }\r\n  addEditEvent(event: Layouts) {\r\n    this.currentStep += 1;\r\n    this.events.push(event);\r\n  }\r\n  undo(): Layouts {\r\n    console.log(this.currentStep);\r\n    this.currentStep -= 1;\r\n    return this.events[this.currentStep];\r\n  }\r\n  redo(): Layouts {\r\n    console.log(this.currentStep);\r\n    this.currentStep += 1;\r\n    return this.events[this.currentStep];\r\n  }\r\n}\r\n","import {\r\n  action,\r\n  thunk,\r\n  Thunk,\r\n  Action,\r\n  ActionOn,\r\n  thunkOn,\r\n  ThunkOn,\r\n  debug,\r\n  actionOn,\r\n} from \"easy-peasy\";\r\nimport CardData from \"@classes/CardData\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport { Layouts } from \"react-grid-layout\";\r\nimport defaultGridLayout from \"../static/defaultLayouts\";\r\nimport { AppMode } from \"../enums\";\r\nimport History from \"@classes/History\";\r\nimport { StoreModel } from \"./index\";\r\n/**\r\n * Core app model\r\n * @param\r\n */\r\nexport interface AppDataModel {\r\n  //state\r\n  availableCards: CardData[];\r\n  activeCards: CardData[];\r\n  currentLayout: Layouts;\r\n  appMode: AppMode;\r\n  history: History;\r\n  // localStorageLayouts: any[];\r\n\r\n  //requests\r\n  // fetchGoogleSheet: Thunk<AppDataModel>;\r\n\r\n  //loaders\r\n  // loadLocalLayouts: Action<AppDataModel>;\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: ActionOn<AppDataModel, StoreModel>;\r\n  onSwapCardContent: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onSetActiveLayout: ThunkOn<AppDataModel, never, StoreModel>;\r\n  //managers\r\n  manageViewModeChange: Thunk<AppDataModel, AppMode>;\r\n  toggleViewMode: Thunk<AppDataModel, never>;\r\n  //simple setters\r\n  setAppMode: Action<AppDataModel, AppMode>;\r\n  setCurrentLayout: Action<AppDataModel, Layouts>;\r\n  setActiveCards: Action<AppDataModel, CardData[]>;\r\n  setAvailableCards: Action<AppDataModel, CardData[]>;\r\n  registerCardLoadFailure: Thunk<AppDataModel, CardData, never, StoreModel>;\r\n  //listeners\r\n  onUndoHistory: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onRedoHistory: ThunkOn<AppDataModel, never, StoreModel>;\r\n\r\n  //clear\r\n  // clearLocalLayouts: Action<AppDataModel>;\r\n\r\n  //local storage\r\n  // saveLayoutLocal: Thunk<AppDataModel>;\r\n}\r\n\r\nconst appModel: AppDataModel = {\r\n  //state\r\n  availableCards: [],\r\n  activeCards: [],\r\n  currentLayout: defaultGridLayout,\r\n  appMode: AppMode.DISPLAY,\r\n  history: new History(),\r\n  // localStorageLayouts: [],\r\n\r\n  //managers\r\n  /**Control side effects for altering the view state of the app, and dispatch a setter for the state */\r\n  manageViewModeChange: thunk((actions, viewModeEnum) => {\r\n    // console.log(viewModeEnum);\r\n    actions.setAppMode(viewModeEnum);\r\n    switch (viewModeEnum) {\r\n      case AppMode.EDIT:\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n      // console.log(\"reached default in set view mode thunk\");\r\n    }\r\n  }),\r\n  toggleViewMode: thunk((actions, _, { getState }) => {\r\n    console.log(\"toggling view mod \");\r\n\r\n    switch (getState().appMode) {\r\n      case AppMode.EDIT:\r\n        actions.setAppMode(AppMode.DISPLAY);\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        actions.setAppMode(AppMode.EDIT);\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n      // console.log(\"reached default in set view mode thunk\");\r\n    }\r\n    // console.log(getState().appMode);\r\n  }),\r\n  setCurrentLayout: action((state, layoutArray) => {\r\n    state.currentLayout = layoutArray;\r\n  }),\r\n  setAvailableCards: action((state, cardDataArray) => {\r\n    console.log(\"setting available cards\");\r\n    state.availableCards = cardDataArray;\r\n  }),\r\n  setActiveCards: action((state, cardDataArray) => {\r\n    console.log(\"setting active cards\");\r\n    console.log(cardDataArray);\r\n    state.activeCards = cardDataArray;\r\n  }),\r\n  setAppMode: action((state, viewModeEnum) => {\r\n    console.log(\"setting view mode\");\r\n    state.appMode = viewModeEnum;\r\n  }),\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: actionOn(\r\n    // targetResolver:\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    // handler:\r\n    (state, target) => {\r\n      // console.log(\"got on card sheet load success\");\r\n      const cardRowsArray = target.payload.getSheetRows(0);\r\n      const rawCardRowsArray = cardRowsArray.map((row) => {\r\n        return {\r\n          src: row.src,\r\n          title: row.title,\r\n          added: row.added,\r\n          sourceid: row.sourceid,\r\n          author: row.author,\r\n          interaction: row.interaction,\r\n        } as RawCardRow;\r\n      });\r\n      const cards = rawCardRowsArray.map((c: RawCardRow) => new CardData(c));\r\n      // console.log(cards);\r\n      state.availableCards = cards;\r\n      // console.log(debug(state.availableCards));\r\n    }\r\n  ),\r\n\r\n  onSetActiveLayout: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.setActiveLayout,\r\n    async (actions, layout, { getState }) => {\r\n      // console.log(\"listened for setActiveLayout at app_model\");\r\n      //if a card source is in the active layout, then it must be active\r\n      // const sources = layout.payload.sources();\r\n      // console.log(sources);\r\n      const activeSources = layout.payload\r\n        .sources()\r\n        .filter((s) => s !== \"clock\");\r\n\r\n      const availableCardsUpdated = getState().availableCards.map((card) => {\r\n        if (activeSources.includes(card.sourceId)) {\r\n          card.setActive(true);\r\n        } else {\r\n          card.setActive(false);\r\n        }\r\n        return card;\r\n      });\r\n      const activeCards = getState().availableCards.filter((card) => {\r\n        return activeSources.includes(card.sourceId);\r\n      });\r\n      // console.log(availableCardsUpdated);\r\n      actions.setAvailableCards(availableCardsUpdated);\r\n      actions.setActiveCards(activeCards);\r\n      // console.log(activeCards);\r\n    }\r\n  ),\r\n  registerCardLoadFailure: thunk(\r\n    (actions, failedCard, { getState, getStoreState }) => {\r\n      console.log(\"Got card Register Load Failure at Layouts Model\");\r\n      console.log(failedCard);\r\n      const { activeCards } = getState();\r\n      const failedId = failedCard.sourceId;\r\n      let newCards = activeCards.map((c) => {\r\n        if (c.sourceId === failedId) {\r\n          console.log(\"found failed\");\r\n          c.fail();\r\n        }\r\n        return c;\r\n      });\r\n      actions.setActiveCards(newCards);\r\n    }\r\n  ),\r\n  onSwapCardContent: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.swapCardContent,\r\n    async (actions, payload, { getState }) => {\r\n      console.log(\"got swap card content\");\r\n      console.log(payload.payload);\r\n      console.log(getState().activeCards);\r\n      const newCards = getState().activeCards.map((c) => {\r\n        if (c.sourceId === payload.payload.targetId) {\r\n          const newSource = getState().availableCards.find(\r\n            (c) => c.sourceId === payload.payload.sourceId\r\n          );\r\n          console.log(newSource);\r\n          return newSource;\r\n        } else {\r\n          return c;\r\n        }\r\n      });\r\n      if (newCards) {\r\n        actions.setActiveCards(newCards as CardData[]);\r\n      }\r\n      console.log(debug(payload));\r\n    }\r\n  ),\r\n\r\n  onUndoHistory: thunkOn(\r\n    (actions, storeActions) => storeActions.historyModel.setCurrentHistory,\r\n    async (actions, payload) => {\r\n      console.log(\"got undo\");\r\n      console.log(payload.payload);\r\n      actions.setCurrentLayout(payload.payload);\r\n      console.log(debug(payload));\r\n    }\r\n  ),\r\n  onRedoHistory: thunkOn(\r\n    (actions, storeActions) => storeActions.historyModel.setCurrentHistory,\r\n    async (actions, payload) => {\r\n      console.log(\"got redo\");\r\n      console.log(payload.payload);\r\n      actions.setCurrentLayout(payload.payload);\r\n      console.log(debug(payload));\r\n    }\r\n  ),\r\n  //local storage\r\n  // clearLocalLayouts: action((state) => {\r\n  //   localStorage.clear();\r\n  //   state.localStorageLayouts = [];\r\n  // }),\r\n  // loadLocalLayouts: action((state) => {\r\n  //   const layouts: any = Object.keys(localStorage)\r\n  //     .filter((k) => k.startsWith(\"curLayout\"))\r\n  //     .map((k) => ({\r\n  //       name: k,\r\n  //       layout: JSON.parse(localStorage[k]) as Layout[],\r\n  //     }));\r\n  //   state.localStorageLayouts = layouts;\r\n  // }),\r\n  // saveLayoutLocal: thunk((actions, _, { getState }) => {\r\n  //   localStorage.setItem(\r\n  //     `curLayout_${localStorage.length}`,\r\n  //     JSON.stringify(getState().currentLayout)\r\n  //   );\r\n  //   actions.loadLocalLayouts();\r\n  // }),\r\n};\r\n\r\nexport default appModel;\r\n","import WaveformData from \"waveform-data\";\nimport SampleData from \"./SampleData\";\nimport SVGCatmullRomSpline from \"svg-catmull-rom-spline\";\nimport { mapRange } from \"@utils\";\n\nexport default class WaveFormBuilder {\n  generateSVG(original: SampleData): Promise<SampleData> {\n    console.log(original.src);\n    return this.getAudio(original.src)\n      .then((a) => {\n        // console.log(a);\n        // original.calculateDimensions(document.window.innerWidth)\n        const pathData = this.collectSamplePoints(a, original);\n        original.setPath(pathData);\n        // console.log(original.path);\n        return original;\n      })\n      .catch((e) => {\n        return original;\n      });\n  }\n  collectSamplePoints = (data: WaveformData, sample: SampleData) => {\n    const numberOfPoints = 10;\n    const duration = data.duration;\n    const trueWidth = 0;\n    const yOffset = 10;\n    const mapToMax = 40;\n    const mapToMin = 0;\n    const maxSampleLengthSeconds = 2.5;\n    const minSampleLengthSeconds = 0;\n    const minSvgViewBoxWidth = 100;\n    const maxSvgViewBoxWidth = 400;\n    const sampleDuration = data.duration;\n    const svgViewBoxWidth = mapRange(\n      sampleDuration,\n      minSampleLengthSeconds,\n      maxSampleLengthSeconds,\n      minSvgViewBoxWidth,\n      maxSvgViewBoxWidth\n      // maxSvgViewBoxWidth\n    );\n    console.log(sampleDuration);\n\n    const points: DataPoint[] = [];\n    for (let index = 0; index < numberOfPoints; index++) {\n      const currentTime = index * (1 / numberOfPoints) * duration;\n      const channel1 = data.channel(0);\n      const valueAtTime = data.at_time(currentTime);\n      const maxSampleVal = channel1.max_sample(valueAtTime);\n      // console.log(maxSampleVal);\n      const percentageComplete = index / numberOfPoints;\n      const xValue = percentageComplete * svgViewBoxWidth;\n\n      console.log(percentageComplete);\n\n      let yValue = mapRange(maxSampleVal, 0, 100, mapToMin, mapToMax);\n      yValue += yOffset;\n      // console.log(yValue);\n      // const xValue = Math.round(currentTime*200);\n      const timePointValue = { x: xValue, y: Math.round(yValue) };\n      points.push(timePointValue);\n      // console.log(`audio point value ${index} is ${timePointValue.x}, ${timePointValue.y}`)\n    }\n    // const testpoints = [[0, 0], [200, -200], [200, 0], [0, 200]];\n    const tolerance = 4;\n    const highestQuality = true;\n    // const attribute = SVGCatmullRomSpline.toPath(testpoints, tolerance, highestQuality);\n\n    //top line\n    const topPoints = points.map((p) => [p.x, p.y]);\n    //add a point between the top and bottom\n    topPoints.push([topPoints[topPoints.length - 1][0], 0]);\n\n    //reverse points to conenct\n\n    const reversePoints = points.map((p) => [p.x, trueWidth - p.y]).reverse();\n\n    const nextPointX = reversePoints[reversePoints.length - 1][0];\n    const nextPointY = topPoints[0][1];\n    const newPoint = [nextPointX, nextPointY];\n    reversePoints.push(newPoint);\n\n    const allPoints = [...topPoints, ...reversePoints];\n    const newTestedPoints = SVGCatmullRomSpline.toPath(\n      allPoints,\n      tolerance,\n      highestQuality\n    );\n\n    // console.log(newTestedPoints);\n    return newTestedPoints;\n    // return svgPath\n  };\n  data!: any[];\n  audioContext!: AudioContext;\n\n  constructor() {\n    this.data = [];\n    this.audioContext = new AudioContext();\n  }\n\n  getAudio = (url: string): Promise<WaveformData> => {\n    // const audioContext = new AudioContext();\n    return fetch(url)\n      .then((response) => response.arrayBuffer())\n      .then((buffer) => {\n        const options = {\n          audio_context: this.audioContext,\n          array_buffer: buffer,\n          scale: 128,\n        };\n\n        return new Promise((resolve, reject) => {\n          WaveformData.createFromAudio(options, (err, waveform) => {\n            if (err) {\n              console.error(`FAILED TO CREATE AUDIO FROM URL ${url}`);\n              reject(err);\n            } else {\n              resolve(waveform);\n            }\n          });\n        });\n      });\n  };\n}\n\ninterface DataPoint {\n  x: number;\n  y: number;\n}\n\nfunction catmullRom2bezier(points: DataPoint[]): DataPoint[] {\n  var result = [];\n  for (var i = 0; i < points.length - 1; i++) {\n    var p = [];\n\n    p.push({\n      x: points[Math.max(i - 1, 0)].x,\n      y: points[Math.max(i - 1, 0)].y,\n    });\n    p.push({\n      x: points[i].x,\n      y: points[i].y,\n    });\n    p.push({\n      x: points[i + 1].x,\n      y: points[i + 1].y,\n    });\n    p.push({\n      x: points[Math.min(i + 2, points.length - 1)].x,\n      y: points[Math.min(i + 2, points.length - 1)].y,\n    });\n\n    // Catmull-Rom to Cubic Bezier conversion matrix\n    //    0       1       0       0\n    //  -1/6      1      1/6      0\n    //    0      1/6      1     -1/6\n    //    0       0       1       0\n\n    var bp = [];\n    bp.push({\n      x: (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n      y: (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n    });\n    bp.push({\n      x: (p[1].x + 6 * p[2].x - p[3].x) / 6,\n      y: (p[1].y + 6 * p[2].y - p[3].y) / 6,\n    });\n    bp.push({\n      x: p[2].x,\n      y: p[2].y,\n    });\n    result.push(bp);\n  }\n\n  return result;\n}\n\nfunction makePath(points: DataPoint[]): string {\n  let result = \"M\" + points[0].x + \",\" + points[0].y + \" \";\n  const catmull = catmullRom2bezier(points);\n  for (const element of catmull) {\n    result +=\n      \"C\" +\n      element[0].x +\n      \",\" +\n      element[0].y +\n      \" \" +\n      element[1].x +\n      \",\" +\n      element[1].y +\n      \" \" +\n      element[2].x +\n      \",\" +\n      element[2].y +\n      \" \";\n  }\n  return result;\n}\n\nfunction generateSVG() {\n  var graph = [2, 2, 5, 8, 5, 4, 3, 9];\n  var points = [];\n  for (var i = 0; i < graph.length; i++) {\n    let newPoint = { x: i * 50 + 20, y: graph[i] * 40 * -1 + 400 };\n    console.log(newPoint);\n    points.push({ x: i * 50 + 20, y: graph[i] * 40 * -1 + 400 });\n  }\n  document.querySelector(\"#svg path\").setAttribute(\"d\", makePath(points));\n  for (var i = 0; i < points.length; i++) {\n    var circle = points[i];\n    var c = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    c.setAttribute(\"cx\", circle.x);\n    c.setAttribute(\"cy\", circle.y);\n    c.setAttribute(\"r\", \"3\");\n    document.querySelector(\"#svg\").appendChild(c);\n  }\n}\n\n// window.onload = function () {\n//     var graph = [2, 2, 5, 8, 5, 4, 3, 9];\n//     var points = [];\n//     for (var i = 0; i < graph.length; i++) {\n//         let newPoint = {x: i * 50 + 20, y: graph[i] * 40 * -1 + 400};\n//         console.log(newPoint);\n//         points.push({x: i * 50 + 20, y: graph[i] * 40 * -1 + 400});\n//     }\n//     document.querySelector('#svg path').setAttribute('d', makePath(points));\n//     for (var i = 0; i < points.length; i++) {\n//         var circle = points[i];\n//         var c = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n//         c.setAttribute(\"cx\", circle.x);\n//         c.setAttribute(\"cy\", circle.y);\n//         c.setAttribute(\"r\", \"3\");\n//         document.querySelector('#svg').appendChild(c);\n//     }\n// };\n","import WaveformData from \"waveform-data\"\n\nexport type CompositionTitle = \"Bartok Movement 1\" | \"Bach Movement 1\" | \"Bach Movement 2\"\n\n\nclass CompositionData{\n    title!: CompositionTitle\n    url!: string;\n    waveFormData: WaveformData | undefined\n    constructor(title: CompositionTitle, url: string) {\n        this.title = title\n        this.waveFormData\n        this.url = url\n    }\n\n    buildWaveform(): Promise<WaveformData>{\n        return getAudio(this.url).then(d=>{\n          this.waveFormData = d\n          return new Promise((resolve, reject)=>{\n            resolve(d)\n          })\n        })\n    }\n\n}\n\nexport default CompositionData\n\n\nconst getAudio = (url: string): Promise<WaveformData>=>{\n    // const audioContext = new AudioContext();\n    const audioContext = new AudioContext();\n    return fetch(url)\n    .then(response => response.arrayBuffer())\n    .then(buffer => {\n      const options = {\n        audio_context: audioContext,\n        array_buffer: buffer,\n        scale: 128\n      };\n  \n      return new Promise((resolve, reject) => {\n        WaveformData.createFromAudio(options, (err, waveform) => {\n          if (err) {\n            reject(err);\n          }\n          else {\n            resolve(waveform);\n          }\n        });\n      });\n    })\n  }","import CompositionData from \"@classes/ðŸŽ»CompositionData\";\n\nconst genearteDefaultCompositions = (): CompositionData =>{\n    // const url = `${process.env.PUBLIC_URL}/`+\"RECORDINGS/Bach Mov 2 v2.wav\"\n    const url = `${process.env.PUBLIC_URL}/`+\"BACH2.mp3\"\n    const bachMovement1 = new CompositionData(\"Bach Movement 2\", url)\n    console.log(bachMovement1);\n    return bachMovement1\n}\n\nconst defaultCompositions: CompositionData[] = [genearteDefaultCompositions()]\n\nexport default defaultCompositions","\n\n\nimport { action, Action, thunk, Thunk, thunkOn, ThunkOn } from \"easy-peasy\";\nimport History from \"@classes/History\";\nimport { Layouts } from \"react-grid-layout\";\nimport WaveFormBuilder from \"@classes/WaveFormBuilder\";\nimport SampleData from \"@classes/SampleData\";\nimport placeHolderSamples from \"@static/placeHolderSamples\"\nimport { StoreModel } from \"model\";\nimport WaveformData from \"waveform-data\";\nimport CompositionData from \"@classes/ðŸŽ»CompositionData\";\nimport defaultCompositions from \"@static/defaultCompositions\";\nimport FileSaver from \"file-saver\"\nimport Papa from \"papaparse\"\nimport { RawCompositionRow } from \"@interfaces/RawCompositionRow\";\n\nexport interface CompositionsModel{\n    //state\n    compositions: CompositionData[],\n    //thunks\n    //simple setters\n    setCompositions: Action<CompositionsModel, CompositionData[]>\n    //proccessing\n    processCompositions: Thunk<CompositionsModel, never, StoreModel>\n    downloadAnalysis: Action<CompositionsModel>\n}\n\n\nconst compositionsModel: CompositionsModel = {\n    //state\n    compositions: defaultCompositions,\n    //processing\n    processCompositions: thunk((actions, _, {getState})=>{\n        console.log(\"processing compositions\")\n        const state = getState()\n        const { compositions: compositions }  = {...state}\n\n        console.log(compositions)\n        const processor = new WaveFormBuilder()\n\n        //TODO: ERROR HANDLING\n        const analysisResults = compositions.map(c=>processor.getAudio(c.url))\n        \n        // const waveformData = processor.getAudio()\n        // const processedCompositions = compositions.map(composition=>composition.buildWaveform());\n        Promise.allSettled(analysisResults).then(results=>{\n            const succesfulAnalaysisCompositions: CompositionData[] = [];\n            for (let index = 0; index < results.length; index++) {\n                const result = results[index];\n                const compClone = [...compositions]\n                const comp = compClone[index]   \n                console.log(result);\n                if (result.status == \"fulfilled\"){\n                    comp.waveFormData = result.value \n                    succesfulAnalaysisCompositions.push(comp)\n                }\n            }\n            console.log(\"SETTINGS COMPOSITOINS\");\n            console.log(succesfulAnalaysisCompositions);\n            actions.setCompositions(succesfulAnalaysisCompositions)\n            actions.downloadAnalysis()\n        })\n        // console.log(processedCompositions);\n    }),\n    //simple setters\n    setCompositions: action((state, samplesArray) => {\n        console.log(\"setting samples\")\n        state.compositions = samplesArray;\n        // state.tempLayout = layouts;\n      }),\n    downloadAnalysis: action((state)=>{\n        console.log(state.compositions[0].waveFormData.toJSON().data);\n        const rows: RawCompositionRow[] = state.compositions.map(c=>({title: c.title, url: c.url , data: JSON.stringify(c.waveFormData)}))\n        const csv = Papa.unparse(rows)\n        console.log(rows[0].data.length);\n        \n        var csvData = new Blob([csv], {type: 'text/csv;charset=utf-8;'});\n        // FileSaver.saveAs(csvData, \"test.csv\")\n    })\n}\n\nexport default compositionsModel\n\n","import type SheetId from \"../interfaces/SheetId\";\r\n\r\nconst cardDataSheetKey: SheetId = {\r\n  key: \"1eq33_1yJS6EZjqBvxWgL7nDP0OxC8bMdJJqU7Akp_3E\",\r\n  // key: \"1o-R04VC8cIbcmqM68q4ESguaaNYb-0jhoPNgEuKa0i4\",\r\n  sheet_number: 1,\r\n};\r\nexport default cardDataSheetKey;\r\n\r\n// 1o-R04VC8cIbcmqM68q4ESguaaNYb-0jhoPNgEuKa0i4\r\n// key: \"181P-SDszUOj_xn1HJ1DRrO8pG-LXyXNmINcznHeoK8k\",\r\n","import { ConsoleIcon } from \"evergreen-ui\";\r\nimport {\r\n  GoogleSpreadsheet,\r\n  GoogleSpreadsheetRow,\r\n  GoogleSpreadsheetWorksheet,\r\n} from \"google-spreadsheet\";\r\n\r\nexport default class GoogleSheetData {\r\n  title!: string;\r\n  sheetId!: string;\r\n  sheets!: GoogleSpreadsheetRow[][];\r\n\r\n  constructor(\r\n    title: string,\r\n    sheetId: string,\r\n    sheets: GoogleSpreadsheetRow[][]\r\n  ) {\r\n    this.title = title;\r\n    this.sheetId = sheetId;\r\n    this.sheets = sheets;\r\n  }\r\n  getSheetRows(sheetIndex: number): GoogleSpreadsheetRow[] {\r\n    return this.sheets[sheetIndex];\r\n  }\r\n  loadSheets(\r\n    sheetId: string,\r\n    apikey: string\r\n  ): Promise<Promise<GoogleSpreadsheetRow[]>[]> {\r\n    const document = new GoogleSpreadsheet(sheetId);\r\n    document.useApiKey(apikey);\r\n    const sheetPromiseArray: Promise<GoogleSpreadsheetRow[]>[] = [];\r\n    return document.loadInfo().then(() => {\r\n      document.sheetsByIndex.forEach((element) => {\r\n        const myTest = element.getRows();\r\n        // console.log(myTest);\r\n        sheetPromiseArray.push(myTest);\r\n      });\r\n      return sheetPromiseArray;\r\n    });\r\n  }\r\n}\r\n","import { action, Action, thunk, Thunk } from \"easy-peasy\";\r\nimport type GoogleSheet from \"../interfaces/GoogleSheet\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport cardDataSheetKey from \"@static/cardDataSheetKey\";\r\nimport layoutsGoogleSheetKey from \"@static/layoutsGoogleSheetKey\";\r\nimport GoogleSheetData from \"@classes/ðŸ“‹GoogleSheetData\";\r\nimport Papa, { ParseConfig } from \"papaparse\";\r\nimport { RawCompositionRow } from \"@interfaces/RawCompositionRow\";\r\nimport { ParagraphProps } from \"evergreen-ui\";\r\nimport RawSampleRow from \"@interfaces/RawSampleRow\";\r\nimport analyzeClips from \"@static/analyzeClips\";\r\n\r\ntype Result =\r\n  | { success: true; value: unknown }\r\n  | { success: false; error: Error };\r\n\r\nexport interface GoogleSheetsModel {\r\n  //state\r\n  compositionsSheet: GoogleSheetData | undefined;\r\n  appGoogleSheet: GoogleSheetData | undefined;\r\n  cardDataGoogleSheet: RawCardRow[] | null;\r\n  samplesSheet: RawSampleRow[];\r\n  // cardDataGoogleSheet: GoogleSheet<RawCardRow> | null;\r\n  layoutDataGoogleSheet: GoogleSheet<RawLayoutRow> | null;\r\n\r\n  //requests\r\n  fetchAppGoogleSheet: Thunk<GoogleSheetsModel>;\r\n  fetchCompositionsSheet: Thunk<GoogleSheetsModel>;\r\n  fetchSamplesSheet: Thunk<GoogleSheetsModel>;\r\n  // fetchLayoutDataGoogleSheet: Thunk<GoogleSheetsModel>;\r\n\r\n  //setters\r\n  setAppGoogleSheetData: Action<GoogleSheetsModel, GoogleSheetData>;\r\n  setCardDataGoogleSheet: Action<GoogleSheetsModel, RawCardRow[]>;\r\n  setCompositionsSheet: Action<GoogleSheetsModel, Papa.ParseResult<unknown>>;\r\n  setSamplesSheet: Action<GoogleSheetsModel, unknown[]>;\r\n  // setCardDataGoogleSheet: Action<GoogleSheetsModel, GoogleSheet<RawCardRow>>;\r\n  setLayoutDataGoogleSheet: Action<\r\n    GoogleSheetsModel,\r\n    GoogleSheet<RawLayoutRow>\r\n  >;\r\n}\r\n/**\r\n * Responsible for making requestst to google sheets. Other models must listen this model to intercept the sheet payload.\r\n * Also stores the fetch data purely for debugging purposes.\r\n */\r\n\r\nconst googleSheetsModel: GoogleSheetsModel = {\r\n  //state\r\n  layoutDataGoogleSheet: null,\r\n  cardDataGoogleSheet: null,\r\n  appGoogleSheet: undefined,\r\n  samplesSheet: [],\r\n  compositionsSheet: undefined,\r\n\r\n  //request\r\n  fetchCompositionsSheet: thunk(async (actions) => {\r\n    // console.log(\"FETCHING COMPOSITIONS SHEET\");\r\n    const url = publicSheetUrl(\"/TEST_ANALYSIS.csv\");\r\n    parseSheet(url, (r) => {\r\n      actions.setCompositionsSheet(r);\r\n    });\r\n  }),\r\n  fetchSamplesSheet: thunk(async (actions) => {\r\n    console.log(\"Fetching Samples\");\r\n    if (analyzeClips) {\r\n      console.log(\"USING UNPROCESSED SAMPLE SHEET\");\r\n      const url = publicSheetUrl(\"/out_csv.csv\");\r\n      parseSheet(url, (r) => {\r\n        actions.setSamplesSheet(r.data);\r\n      });\r\n    } else {\r\n      console.log(\"USING PREPROCESSED SAMPLE SHEET\");\r\n      const url = publicSheetUrl(\"/CLIPS_4.csv\");\r\n      parseSheet(url, (r) => {\r\n        actions.setSamplesSheet(r.data);\r\n      });\r\n    }\r\n  }),\r\n  fetchAppGoogleSheet: thunk(async (actions) => {\r\n    GoogleSheetData.prototype\r\n      .loadSheets(\r\n        cardDataSheetKey.key,\r\n        process.env.REACT_APP_GCP_TOKEN as string\r\n      )\r\n      .then((response) => {\r\n        Promise.all(response).then((responseData) => {\r\n          const studentsGoogleSheet = new GoogleSheetData(\r\n            \"DSC App\",\r\n            cardDataSheetKey.key,\r\n            responseData\r\n          );\r\n          // console.log(studentsGoogleSheet);\r\n          actions.setAppGoogleSheetData(studentsGoogleSheet);\r\n        });\r\n      });\r\n  }),\r\n  //Simple Setters\r\n  setAppGoogleSheetData: action((state, googleSheet) => {\r\n    state.appGoogleSheet = googleSheet;\r\n  }),\r\n  setCardDataGoogleSheet: action((state, sheet) => {\r\n    state.cardDataGoogleSheet = sheet;\r\n  }),\r\n  setLayoutDataGoogleSheet: action((state, sheet) => {\r\n    state.layoutDataGoogleSheet = sheet;\r\n  }),\r\n  setCompositionsSheet: action((state, compositionSheet) => {\r\n    compositionSheet.data = compositionSheet.data as RawCompositionRow[];\r\n  }),\r\n  setSamplesSheet: action((state, samplesSheet) => {\r\n    state.samplesSheet = samplesSheet as RawSampleRow[];\r\n  }),\r\n};\r\n\r\nexport default googleSheetsModel;\r\n\r\n// console.log(url);\r\n// Papa.parse(url, {\r\n//     download: true,\r\n//     header: true,\r\n//     complete: function(results) {\r\n//       console.log(results);\r\n//       actions.setSamplesSheet(results.data)\r\n//     }\r\n// });\r\n\r\nconst parseSheet = (\r\n  url: string,\r\n  complete: (results: Papa.ParseResult<unknown>) => void\r\n) => {\r\n  Papa.parse(url, {\r\n    download: true,\r\n    header: true,\r\n    complete: function (results) {\r\n      // console.log(results);\r\n      complete(results);\r\n    },\r\n  });\r\n};\r\n\r\nconst publicSheetUrl = (file: string) => {\r\n  if (!file.endsWith(\".csv\")) {\r\n    console.error(\"Failed to load csv, wrong extension (not .csv)\");\r\n  }\r\n  return process.env.PUBLIC_URL + file;\r\n};\r\n","import { action, Action, thunk, Thunk, thunkOn, ThunkOn } from \"easy-peasy\";\r\nimport History from \"@classes/History\";\r\nimport { Layouts } from \"react-grid-layout\";\r\n\r\nexport interface HistoryModel {\r\n  history: History;\r\n  addEditHistory: Action<HistoryModel, Layouts>;\r\n  undoIt: Action<HistoryModel>;\r\n  redoIt: Action<HistoryModel>;\r\n  undoHistory: Thunk<HistoryModel>;\r\n  setCurrentHistory: Action<HistoryModel, Layouts>;\r\n  // onAddTodo: ThunkOn<HistoryModel, any, StoreModel>;\r\n}\r\nconst historyModel: HistoryModel = {\r\n  history: new History(),\r\n  undoHistory: thunk((actions, _, { getState }) => {\r\n    // console.log(payload);\r\n    actions.undoIt();\r\n    actions.setCurrentHistory(getState().history.undo());\r\n    // const newLayouts = state.history.undo();\r\n    // console.log(newLayouts);\r\n  }),\r\n  undoIt: action((state) => {\r\n    state.history.undo();\r\n    console.log(state.history.currentStep);\r\n    // console.log(payload);\r\n  }),\r\n  redoIt: action((state) => {\r\n    state.history.redo();\r\n    console.log(state.history.currentStep);\r\n    // console.log(payload);\r\n  }),\r\n  setCurrentHistory: action((state, payload) => {\r\n    console.log(payload);\r\n  }),\r\n  // undoHistory: action((state, layouts) => {\r\n  //   console.log(layouts);\r\n  //   const newLayouts = state.history.undo();\r\n  //   console.log(newLayouts);\r\n  // }),\r\n\r\n  // undoHistory: action((state, layouts) => {\r\n  //   console.log(layouts);\r\n  //   const newLayouts = state.history.undo();\r\n  //   console.log(newLayouts);\r\n  // }),\r\n  addEditHistory: action((state, layouts) => {\r\n    console.log(\"adding edit history\");\r\n    console.log(layouts);\r\n    const test = JSON.stringify(layouts);\r\n    console.log(test);\r\n    state.history.addEditEvent(layouts);\r\n  }),\r\n};\r\n\r\nexport default historyModel;\r\n","import { Layout, Layouts } from \"react-grid-layout\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport type { CardSwapEvent, CardAddEvent } from \"../interfaces/CardEvents\";\r\nimport CardData from \"./CardData\";\r\n// import { Ok, Err, Result } from \"ts-results\";\r\nimport defaultLayouts from \"../static/defaultLayouts\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport type { GridPosition } from \"../interfaces/GridPosition\";\r\n\r\n//TODO: Google form columns and layoutData fields should have the same capitilization\r\nexport default class LayoutData {\r\n  readonly title: string;\r\n  readonly author: string;\r\n  readonly added: Date;\r\n  readonly id: string;\r\n  layout: Layouts;\r\n  constructor(row: RawLayoutRow) {\r\n    this.id = row.title + \"_\" + row.timestamp;\r\n    this.title = row.title;\r\n    this.author = row.author;\r\n    //7/26/2021 14:38:57\r\n    //7/26/2021\r\n    this.added = new Date(row.timestamp.split(\" \")[0]);\r\n    const startLayout: Layouts = JSON.parse(row.layout);\r\n    this.layout = startLayout;\r\n  }\r\n  swapCard(swapInfo: CardSwapEvent): void {\r\n    for (const [k, v] of Object.entries(this.layout)) {\r\n      for (const [index, layoutValue] of v.entries()) {\r\n        if (layoutValue.i == swapInfo.targetId) {\r\n          v[index].i = swapInfo.sourceId;\r\n        }\r\n      }\r\n      this.layout[k] = v;\r\n    }\r\n  }\r\n  removeCard(toRemove: CardData): void {\r\n    console.log(this.layout);\r\n    for (const [k, v] of Object.entries(this.layout)) {\r\n      for (const [index, layoutValue] of v.entries()) {\r\n        // console.log(layoutVal);\r\n        this.layout[k] = v.filter((l) => l.i !== toRemove.sourceId);\r\n        // if (layoutVal.i == toRemove.sourceId) {\r\n        //   console.log(layoutVal);\r\n        // }\r\n      }\r\n    }\r\n  }\r\n  addCard(toAdd: CardData, pos: GridPosition): void {\r\n    console.log(\"ADDING CARD AT LAYOUT DATA\");\r\n    console.log(this.layout);\r\n    for (const [k, v] of Object.entries(this.layout)) {\r\n      const newItem: Layout = {\r\n        x: pos.x,\r\n        y: pos.y,\r\n        w: 1,\r\n        h: 1,\r\n        i: toAdd.sourceId,\r\n      };\r\n      this.layout[k].push(newItem);\r\n    }\r\n  }\r\n  failCard(toFail: CardData){\r\n    console.log(\"FAILING CARD AT LAYOUT DATA\");\r\n    // console.log()\r\n  }\r\n  setGridLayout(newGridLayout: Layouts): void {\r\n    console.log(newGridLayout);\r\n    this.layout = newGridLayout;\r\n  }\r\n  sources(): string[] {\r\n    const lg = Object.entries(this.layout)[0][1];\r\n    return lg.map((l: any) => l.i);\r\n  }\r\n}\r\n\r\nfunction findEmptyGridPositions(\r\n  layouts: Layout[],\r\n  rows: number,\r\n  cols: number\r\n): GridPosition[] {\r\n  const allGridSpots: GridPosition[] = [];\r\n  for (let y = 0; y < rows; y++) {\r\n    for (let x = 0; x < cols; x++) {\r\n      allGridSpots.push({ x: x, y: y });\r\n    }\r\n  }\r\n  const filledSpots = findFilledPositions(layouts);\r\n  const stringFilledSpots = new Set(\r\n    filledSpots.map((fs) => [fs.x, fs.y].toString())\r\n  );\r\n\r\n  return allGridSpots.filter(\r\n    (gs) => !stringFilledSpots.has([gs.x, gs.y].toString())\r\n  );\r\n}\r\n\r\nfunction findFilledPositions(layouts: Layout[]): GridPosition[] {\r\n  const takenSpots: GridPosition[] = [];\r\n  for (const l of layouts) {\r\n    takenSpots.push({ x: l.x, y: l.y });\r\n    for (let index = 1; index < l.w; index++) {\r\n      const fullSpotX: GridPosition = {\r\n        x: l.x + index,\r\n        y: l.y,\r\n      };\r\n      takenSpots.push(fullSpotX);\r\n    }\r\n    for (let index = 1; index < l.h; index++) {\r\n      const fullSpotY: GridPosition = {\r\n        x: l.x,\r\n        y: l.y + index,\r\n      };\r\n      takenSpots.push(fullSpotY);\r\n    }\r\n  }\r\n  return takenSpots;\r\n}\r\n\r\n// function parseLayout(\r\n//   data: string\r\n// ): Result<Layouts, \"failed to parse layoutJSON\"> {\r\n//   try {\r\n//     const layouts = JSON.parse(data);\r\n//     return Ok(layouts);\r\n//   } catch {\r\n//     return Err(\"failed to parse layoutJSON\");\r\n//   }\r\n// }\r\n\r\nfunction generateFilledLayout(\r\n  layout: Layout[],\r\n  emptyPosArray: GridPosition[]\r\n): Layouts {\r\n  const emptyCards = emptyPosArray.map((rr) => {\r\n    return {\r\n      x: rr.x,\r\n      y: rr.y,\r\n      w: 1,\r\n      h: 1,\r\n      i: `empty_card_${uuidv4()}`,\r\n      minW: 1,\r\n      maxW: 1,\r\n      minH: 1,\r\n      maxH: 1,\r\n      static: true,\r\n      isDraggable: false,\r\n      isResizable: false,\r\n      resizeHandles: [],\r\n    } as Layout;\r\n  });\r\n  const filled = layout.concat(emptyCards);\r\n  return {\r\n    lg: filled,\r\n    md: filled,\r\n    sm: filled,\r\n    xs: filled,\r\n    xxs: filled,\r\n  };\r\n}\r\n// function getCount(): Promise<Result<number, Error>> {\r\n//   return fetch(\"/index-count\")\r\n//     .then((res) => res.json())\r\n//     .then((body): Ok<number, Error> => ok(body[\"count\"]))\r\n//     .catch(() => err(new Error(\"Something when wrong while fetching count\")));\r\n// }\r\n\r\n// // To access the count, we'll first have to check if the calculation succeeded.\r\n// if (res.isOk()) {\r\n//   // Now we can access the value.\r\n//   console.log(\"Count is:\", res.value);\r\n// }\r\n\r\n// if (res.isErr()) {\r\n//   // Now we can access the error.\r\n//   console.error(\"Oh no, there was an error:\", res.error);\r\n// }\r\n\r\n// // https://dev.to/duunitori/mimicing-rust-s-result-type-in-typescript-3pn1\r\n// // type Result =\r\n// //   | { success: true; value: unknown }\r\n// //   | { success: false; error: Error };\r\n\r\n// export type Result<T, E> = Ok<T, E> | Err<T, E>;\r\n\r\n// export class Ok<T, E> {\r\n//   public constructor(public readonly value: T) {}\r\n\r\n//   public isOk(): this is Ok<T, E> {\r\n//     return true;\r\n//   }\r\n\r\n//   public isErr(): this is Err<T, E> {\r\n//     return false;\r\n//   }\r\n// }\r\n\r\n// export class Err<T, E> {\r\n//   public constructor(public readonly error: E) {}\r\n\r\n//   public isOk(): this is Ok<T, E> {\r\n//     return false;\r\n//   }\r\n\r\n//   public isErr(): this is Err<T, E> {\r\n//     return true;\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * Construct a new Ok result value.\r\n//  */\r\n// export const ok = <T, E>(value: T): Ok<T, E> => new Ok(value);\r\n\r\n// /**\r\n//  * Construct a new Err result value.\r\n//  */\r\n// export const err = <T, E>(error: E): Err<T, E> => new Err(error);\r\n","import {\r\n  action,\r\n  thunk,\r\n  Thunk,\r\n  Action,\r\n  thunkOn,\r\n  ThunkOn,\r\n  debug,\r\n} from \"easy-peasy\";\r\nimport CardData from \"@classes/CardData\";\r\nimport LayoutData from \"@classes/LayoutData\";\r\nimport { StoreModel } from \"./index\";\r\nimport { Layout, Layouts } from \"react-grid-layout\";\r\nimport { CardAddEvent, CardSwapEvent } from \"../interfaces/CardEvents\";\r\nimport defaultLayouts from \"../static/defaultLayouts\";\r\nimport { AppMode } from \"../enums\";\r\nimport RawCardRow from \"../interfaces/RawCardRow\";\r\nimport RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport IFrameValidator from \"../IFrameValidator\";\r\nimport defaultLayout from \"@static/defaultLayouts\";\r\nexport interface LayoutsModel {\r\n  //state\r\n  activeLayout: LayoutData | undefined;\r\n  externalLayouts: LayoutData[];\r\n  bufferLayout: Layouts;\r\n  tempLayout: Layouts;\r\n  //listeners\r\n  onSetAppGoogleSheetData: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  onToggleViewModeListener: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  //requests\r\n\r\n  //simple setters\r\n  setActiveLayout: Action<LayoutsModel, LayoutData>;\r\n  setExternalLayouts: Action<LayoutsModel, LayoutData[]>;\r\n  setBufferLayout: Action<LayoutsModel, Layouts>;\r\n  setTempLayout: Action<LayoutsModel, Layouts>;\r\n  updateLayout: Action<LayoutsModel, CardSwapEvent>;\r\n\r\n  // storeBufferLayout: Action<LayoutsModel>;\r\n\r\n  //update\r\n  swapCardContent: Thunk<LayoutsModel, CardSwapEvent, StoreModel>;\r\n  deleteCard: Thunk<LayoutsModel, CardData, StoreModel>;\r\n  addCard: Thunk<LayoutsModel, CardAddEvent, never, StoreModel>;\r\n  registerCardLoadFailure: Thunk<LayoutsModel, CardData, never, StoreModel>;\r\n}\r\n\r\nconst layoutsModel: LayoutsModel = {\r\n  //state\r\n  activeLayout: undefined,\r\n  externalLayouts: [],\r\n  bufferLayout: defaultLayouts,\r\n  tempLayout: defaultLayouts,\r\n\r\n  //listeners\r\n  /**On setAppGoogleSheetData, create an array of LayoutData objects from the provided rows */\r\n  onSetAppGoogleSheetData: thunkOn(\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    (actions, target) => {\r\n      //extract only the needed properties from the GoogleSheetRow\r\n      const rawLayoutRows = target.payload.getSheetRows(1).map((l) => {\r\n        return {\r\n          title: l.title,\r\n          author: l.author,\r\n          timestamp: l.timestamp,\r\n          layout: l.layout,\r\n          interaction: l.interaction,\r\n        } as RawLayoutRow;\r\n      });\r\n      const layouts = rawLayoutRows.map((l) => new LayoutData(l));\r\n      // const defaultLayout = layouts[0];\r\n      // const defaultLayout = defa\r\n      // layouts.\r\n      const dLayout = layouts[0];\r\n      dLayout.layout = defaultLayout;\r\n      actions.setActiveLayout(dLayout);\r\n      // const bufferLayout = layouts[0]\r\n      // if (defaultLayout) {\r\n      //   actions.setActiveLayout(defaultLayout);\r\n      // }\r\n      actions.setExternalLayouts(layouts);\r\n      actions.setBufferLayout(layouts[0].layout);\r\n    }\r\n  ),\r\n  onToggleViewModeListener: thunkOn(\r\n    // targetResolver:\r\n    (actions, storeActions) => storeActions.appModel.toggleViewMode,\r\n    // handler:\r\n    (actions, target, { getState, getStoreState }) => {\r\n      // console.log(\r\n      //   \"listened to on toggle view mode in layout model, setting layout from buffer\"\r\n      // );\r\n      const { activeLayout } = getState();\r\n      const buf = getState().bufferLayout;\r\n      if (getStoreState().appModel.appMode === AppMode.DISPLAY) {\r\n        // console.log(\"IT WAS IN DISPLAY MODE\");\r\n        if (activeLayout?.layout) {\r\n          activeLayout.layout = buf;\r\n          actions.setActiveLayout(activeLayout);\r\n        }\r\n      }\r\n    }\r\n  ),\r\n  //simple setters\r\n  setActiveLayout: action((state, newActiveLayout) => {\r\n    // console.log(\"setting active layout\");\r\n    // console.log(newActiveLayout);\r\n    state.activeLayout = newActiveLayout;\r\n  }),\r\n  setExternalLayouts: action((state, newLayoutArray) => {\r\n    // console.log(\"setting external layouts\");\r\n    state.externalLayouts = newLayoutArray;\r\n  }),\r\n  //mutators\r\n  swapCardContent: thunk(\r\n    (actions, swapInfo, { getState, getStoreState, getStoreActions }) => {\r\n      const currentModel = getStoreState() as StoreModel;\r\n      // const activeCards = curModel.appModel.activeCards;\r\n      const { activeLayout } = getState();\r\n      if (activeLayout) {\r\n        const buf = getState().bufferLayout;\r\n        activeLayout.layout = buf;\r\n        activeLayout.swapCard(swapInfo);\r\n        actions.setActiveLayout(activeLayout);\r\n        // actions.setBufferLayout(activeLayout.layout);\r\n      }\r\n    }\r\n  ),\r\n  deleteCard: thunk(\r\n    (actions, cardToDelete, { getState, getStoreState, getStoreActions }) => {\r\n      // console.log(\"deleting card at layotus model\");\r\n      // // console.log(cardToDelete);\r\n      // let buf = getState().bufferLayout;\r\n      const previousLayout = getState().activeLayout;\r\n      console.log(\"got here\");\r\n      const { activeLayout } = getState();\r\n      if (activeLayout) {\r\n        const buf = getState().bufferLayout;\r\n        activeLayout.layout = buf;\r\n        activeLayout.removeCard(cardToDelete);\r\n        actions.setActiveLayout(activeLayout);\r\n      }\r\n    }\r\n  ),\r\n  addCard: thunk((actions, cardAddEvent, { getState, getStoreState }) => {\r\n    console.log(\"adding card\");\r\n    console.log(cardAddEvent);\r\n    const { availableCards } = getStoreState().appModel;\r\n    const { sourceId, targetPosition } = cardAddEvent;\r\n    const cardToAdd = availableCards.find((c) => c.sourceId == sourceId);\r\n    const { activeLayout } = getState();\r\n    if (activeLayout && cardToAdd) {\r\n      const buf = getState().bufferLayout;\r\n      console.log(debug(buf));\r\n      activeLayout.setGridLayout(buf);\r\n      activeLayout?.addCard(cardToAdd, targetPosition);\r\n      actions.setActiveLayout(activeLayout);\r\n      // actions.setBufferLayout(activeLayout.layout);\r\n      console.log(cardToAdd);\r\n    }\r\n  }),\r\n  registerCardLoadFailure: thunk(\r\n    (actions, failedCard, { getState, getStoreState }) => {\r\n      console.log(\"Got card Register Load Failure at Layouts Model\");\r\n      console.log(failedCard);\r\n      const { activeLayout } = getState();\r\n      if (activeLayout) {\r\n        activeLayout.failCard(failedCard);\r\n      }\r\n      // if (activeLayout && cardToAdd) {\r\n      //   const buf = getState().bufferLayout;\r\n      //   console.log(debug(buf));\r\n      //   activeLayout.setGridLayout(buf);\r\n      //   activeLayout?.addCard(cardToAdd, targetPosition);\r\n      //   actions.setActiveLayout(activeLayout);\r\n      //   // actions.setBufferLayout(activeLayout.layout);\r\n      //   console.log(cardToAdd);\r\n      // }\r\n    }\r\n  ),\r\n  setBufferLayout: action((state, layouts) => {\r\n    console.log(\"setting buffer layout\");\r\n    console.log(layouts);\r\n    state.bufferLayout = layouts;\r\n    // state.tempLayout = layouts;\r\n  }),\r\n  setTempLayout: action((state, layouts) => {\r\n    console.log(\"setting buffer layout\");\r\n    console.log(layouts);\r\n    state.tempLayout = layouts;\r\n  }),\r\n  updateLayout: action((state, swap) => {\r\n    const old = state.activeLayout;\r\n    if (old) {\r\n      old.swapCard(swap);\r\n      console.log(old.layout);\r\n      state.activeLayout = old;\r\n    }\r\n  }),\r\n};\r\n\r\nexport default layoutsModel;\r\n","import { action, Action, ActionOn, actionOn, thunkOn, ThunkOn, thunk, Thunk } from \"easy-peasy\";\r\nimport { StoreModel } from \"./index\";\r\n\r\nexport interface LogModel{\r\n  //state\r\n  data: string[]\r\n\r\n  //requests\r\n    // onUpdate: ThunkOn<LogModel, never, StoreModel>\r\n  //setter\r\n  setData: Action<LogModel, string[]>\r\n\r\n}\r\n\r\nconst logModel: LogModel= {\r\n    //state\r\n    data: [],\r\n    \r\n    //requests\r\n\r\n    //setters\r\n    setData: action((state, data) => {\r\n    state.data = data\r\n    }),\r\n    //listeners\r\n    // onUpdate: thunkOn(\r\n    //     (actions, storeActions) =>\r\n    //         [\r\n\t// \t\t storeActions.samplesModel.loadSamples,\r\n\t// \t\t storeActions.samplesModel.setSamples\r\n    //         ],\r\n    //     (actions, target) => {\r\n\r\n\r\n    //     }\r\n    //   ),\r\n};\r\n\r\nexport default logModel;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let log = {\r\n// \tinfo: function info(message) {\r\n// \t\tconst callerInfo = getFileName(info.caller.name);\r\n// \t\tconsole.log(\r\n// \t\t\tnew Date() +\r\n// \t\t\t\t' ' +\r\n// \t\t\t\targuments.callee.name.toUpperCase() +\r\n// \t\t\t\t' ' +\r\n// \t\t\t\tcallerInfo.filename +\r\n// \t\t\t\t':' +\r\n// \t\t\t\tcallerInfo.line +\r\n// \t\t\t\t':' +\r\n// \t\t\t\tcallerInfo.column +\r\n// \t\t\t\t' ' +\r\n// \t\t\t\tinfo.caller.name +\r\n// \t\t\t\t'() ' +\r\n// \t\t\t\tmessage\r\n// \t\t);\r\n// \t},\r\n// };\r\n\r\n// function getFileName(caller) {\r\n//   const STACK_FUNC_NAME = new RegExp(/at\\s+((\\S+)\\s)?\\((\\S+):(\\d+):(\\d+)\\)/);\r\n// \tlet err = new Error();\r\n// \tError.captureStackTrace(err);\r\n// \tlet stacks = err.stack.split('\\n').slice(1);\r\n\r\n// \tlet callerInfo = null;\r\n// \tfor (let i = 0; i < stacks.length; i++) {\r\n// \t\tcallerInfo = STACK_FUNC_NAME.exec(stacks[i]);\r\n    \r\n// \t\tif (callerInfo[2] === caller) {\r\n// \t\t\treturn {\r\n// \t\t\t\tfilename: callerInfo[3],\r\n// \t\t\t\tline: callerInfo[4],\r\n// \t\t\t\tcolumn: callerInfo[5],\r\n// \t\t\t};\r\n// \t\t}\r\n// \t}\r\n\r\n// \treturn null;\r\n// }\r\n\r\n// function iWantToLog() {\r\n// \tlog.info('Testing my log');\r\n// }\r\n\r\n// iWantToLog();","import { PackNode } from \"@components/SampleTray/NewSampleTray/Packer\";\r\nimport RawSampleRow from \"@interfaces/RawSampleRow\";\r\nimport { mapRange } from \"@utils\";\r\nimport Konva from \"konva\";\r\n\r\nclass SampleData {\r\n  id!: string;\r\n  src!: string;\r\n  tags!: string[];\r\n  svgPath!: string;\r\n  filename!: string;\r\n  length!: number;\r\n  composition: string;\r\n  startTime: Date;\r\n  endTime: Date;\r\n  w: number;\r\n  h: number;\r\n  konvaObject: Konva.Path | undefined;\r\n  // node: PackNode | undefined;\r\n  fit: PackNode | undefined;\r\n\r\n  constructor(sampleDataRow: RawSampleRow) {\r\n    const {\r\n      filename,\r\n      tags,\r\n      composition,\r\n      starTime: start,\r\n      endTime: end,\r\n      hour,\r\n      svgPath,\r\n      length,\r\n    } = sampleDataRow;\r\n\r\n    const url = `${process.env.PUBLIC_URL}/Clips/` + filename;\r\n    const defaultStartTime = new Date(\"1995-12-17T03:24:00\");\r\n    const defaultEndTime = new Date(\"1995-12-17T03:24:01\");\r\n    this.id = filename;\r\n    this.src = url;\r\n    this.tags = tags.split(\",\");\r\n    this.startTime = defaultStartTime;\r\n    this.endTime = defaultEndTime;\r\n    this.composition = composition;\r\n    this.filename = filename;\r\n    this.svgPath = svgPath;\r\n    this.length = length;\r\n    this.konvaObject = undefined;\r\n    this.w = undefined;\r\n    this.h = undefined;\r\n    // this.node = undefined;\r\n    this.fit = undefined;\r\n  }\r\n\r\n  setPath = (path: string): void => {\r\n    this.svgPath = path;\r\n  };\r\n  calculateDimensions(containerWidth: number, rowHeight: number): void {\r\n    const margin = 0;\r\n    this.w = mapRange(this.length, 0, 6.5, 0 + margin, containerWidth - margin);\r\n    this.h = rowHeight;\r\n  }\r\n  // createKonvaObject() {\r\n  //   this.konvaObject = new Konva.Path({\r\n  //     x: this.fit.x,\r\n  //     y: this.fit.y,\r\n  //     data: this.svgPath,\r\n  //     fill: \"green\",\r\n  //     scale: {\r\n  //       x: 2,\r\n  //       y: 2,\r\n  //     },\r\n  //   });\r\n  // }\r\n}\r\nexport default SampleData;\r\n","import SampleData from \"@classes/SampleData\"\nimport RawSampleRow from \"@interfaces/RawSampleRow\";\nimport {randomElements} from \"@utils\"\nimport tags from \"./tags\";\n\nconst placeHolderSamplePaths = [\"DNB_BREAK_134-1.wav\", \"Samples/s1.wav\"]\nconst recitalrecordings = [\"RECORDINGS/Bach Move 2 v2.wav\", \"RECORDINGS/Bach Move 3 v2.wav\"]\n\n\nconst makeDefaultSamples = (count: number): SampleData[] =>{\n    const defaultSamples: SampleData[] = [];\n    // const defaultUrl = `${process.env.PUBLIC_URL}/Samples/s1.wav`\n    // const defaultUrl = `${process.env.PUBLIC_URL}/DNB_BREAK_134-1.wav`\n    const defaultStartTime = new Date(\"1995-12-17T03:24:00\")\n    const defaultEndTime = new Date(\"1995-12-17T03:24:01\")\n\n\n    for (let i = 0; i < count; i++) {\n        const sampleUrl = `${process.env.PUBLIC_URL}/`+randomElements(placeHolderSamplePaths, 1)[0]\n        const basicRow: RawSampleRow = {\n            composition:`placeHolderSample_${i}`,\n            starTime: \"1995-12-17T03:24:00\",\n            endTime: \"1995-12-17T03:24:01\",\n            tags: \"MR, FD\",\n            date: \"2021-09-24\",\n            hour: \"222332\",\n            svgPath: \"\",\n            length: 1.0,\n            filename: sampleUrl\n        }\n        const tagNames = randomElements(tags, 3)\n\n        const sampleD = new SampleData(basicRow)\n        defaultSamples.push(sampleD)\n    }\n    return defaultSamples\n}\n\nconst placeHolderSamples = makeDefaultSamples(30)\n\nexport default placeHolderSamples","import { action, Action, thunk, Thunk, thunkOn, ThunkOn } from \"easy-peasy\";\nimport History from \"@classes/History\";\nimport { Layouts } from \"react-grid-layout\";\nimport WaveFormBuilder from \"@classes/WaveFormBuilder\";\nimport SampleData from \"@classes/SampleData\";\nimport placeHolderSamples from \"@static/placeHolderSamples\";\nimport { StoreModel } from \"model\";\nimport WaveformData from \"waveform-data\";\nimport { actions } from \"react-table\";\nimport RawSampleRow from \"@interfaces/RawSampleRow\";\nimport Papa from \"papaparse\";\nimport { downloadBlob } from \"@utils\";\nimport analyzeClips from \"@static/analyzeClips\";\nexport interface SamplesModel {\n  //state\n  samples: SampleData[];\n  draggingSample: string;\n  //listeners\n\n  //thunks\n\n  //simple setters\n  setSamples: Action<SamplesModel, SampleData[]>;\n  setDraggingSample: Action<SamplesModel, string>;\n\n  onSetSamplesSheets: ThunkOn<SamplesModel, never, StoreModel>;\n  //proccessing\n  processSamples: Thunk<SamplesModel, never, StoreModel>;\n  loadSamples: Thunk<SamplesModel>;\n}\n\nconst samplesModel: SamplesModel = {\n  //state\n  samples: placeHolderSamples,\n  draggingSample: placeHolderSamples[0].id,\n  //listeners\n  onSetSamplesSheets: thunkOn(\n    (actions, storeActions) => storeActions.googleSheetsModel.setSamplesSheet,\n    (actions, target) => {\n      // console.log(target.payload);\n      const rawSampleRows = target.payload as RawSampleRow[];\n      if (analyzeClips) {\n        processSamples(rawSampleRows).then((samples) => {\n          actions.setSamples(samples);\n          const csv = Papa.unparse(samples);\n          downloadBlob(csv, \"test.csv\", \"text/csv;charset=utf-8;\");\n        });\n      } else {\n        const sampleDataArray = rawSampleRows.map((r) => new SampleData(r));\n        actions.setSamples(sampleDataArray);\n      }\n    }\n  ),\n  //processing\n  processSamples: thunk((actions, _, { getState }) => {\n    console.log(\"processing samples\");\n    const state = getState();\n    const { samples } = { ...state };\n    console.log(samples);\n    const processor = new WaveFormBuilder();\n    const processedSamples = samples.map((s) => processor.generateSVG(s));\n    Promise.allSettled(processedSamples).then((results) => {\n      const succesfulAnalaysisSamples: SampleData[] = [];\n      for (const result of results) {\n        if (result.status === \"fulfilled\") {\n          succesfulAnalaysisSamples.push(result.value);\n        }\n      }\n      actions.setSamples(succesfulAnalaysisSamples);\n    });\n    console.log(processedSamples);\n  }),\n  loadSamples: thunk((actions) => {\n    console.log(\"processing samples\");\n  }),\n  setSamples: action((state, samplesArray) => {\n    // console.log(\"setting samples\");\n    state.samples = samplesArray;\n  }),\n  setDraggingSample: action((state, id) => {\n    console.log(\"setting samples\");\n    state.draggingSample = id;\n  }),\n};\n\nexport default samplesModel;\n\nconst processSamples = (\n  sampleRows: RawSampleRow[],\n  max?: number\n): Promise<SampleData[]> => {\n  if (max) {\n    sampleRows = sampleRows.filter((r) => r.tags !== undefined).slice(max);\n  } else {\n    sampleRows = sampleRows.filter((r) => r.tags !== undefined);\n  }\n  const sampleDataArray = sampleRows.map((s) => new SampleData(s));\n  const processor = new WaveFormBuilder();\n  const processedSamples = sampleDataArray.map((s) => processor.generateSVG(s));\n  return Promise.allSettled(processedSamples).then((results) => {\n    const succesfulAnalaysisSamples: SampleData[] = [];\n    for (const result of results) {\n      if (result.status === \"fulfilled\") {\n        succesfulAnalaysisSamples.push(result.value);\n      }\n    }\n    return succesfulAnalaysisSamples;\n  });\n};\n","import appData, { AppDataModel } from \"./appModel\";\r\nimport compositonsModel, {CompositionsModel} from \"./ðŸŽ»compositionsModel\";\r\nimport googleSheetsModel, { GoogleSheetsModel } from \"./googleSheetsModel\";\r\nimport historyData, { HistoryModel } from \"./historyModel\";\r\nimport layoutsModel, { LayoutsModel } from \"./layoutsModel\";\r\nimport logModel, {LogModel} from \"./logModel\";\r\nimport samplesModel, { SamplesModel } from \"./samplesModel\";\r\n\r\n// https://codesandbox.io/s/easy-peasy-typescript-v3-riqbl?file=/src/model/todos.ts\r\n\r\nexport interface StoreModel {\r\n  appModel: AppDataModel;\r\n  historyModel: HistoryModel;\r\n  layoutsModel: LayoutsModel;\r\n  googleSheetsModel: GoogleSheetsModel;\r\n  samplesModel: SamplesModel; \r\n  compositionsModel: CompositionsModel;\r\n  logModel: LogModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  appModel: appData,\r\n  historyModel: historyData,\r\n  layoutsModel: layoutsModel,\r\n  googleSheetsModel: googleSheetsModel,\r\n  samplesModel: samplesModel,\r\n  compositionsModel: compositonsModel,\r\n  logModel: logModel, \r\n};\r\n\r\nexport default model;\r\n","import { createStore, action } from \"easy-peasy\";\r\nimport model from \"./model\";\r\nimport logger from \"redux-logger\";\r\n// const store = createStore(model);\r\n\r\nconst store = createStore(model, {\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: [\r\n    // logger\r\n  ],\r\n  // initialState: { commentsModel: { comments }, postsModel: { posts } },\r\n});\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  if (module.hot) {\r\n    module.hot.accept(\"./model\", () => {\r\n      store.reconfigure(model); // ðŸ‘ˆ Here is the magic\r\n    });\r\n  }\r\n}\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StoreProvider } from \"easy-peasy\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}