{"version":3,"sources":["hooks.tsx","enums.ts","components/UI/Section.tsx","components/Editor/ViewCard/ViewCard.tsx","components/IXDrop.tsx","static/defaultLayouts.ts","components/Editor/WidgetGrid.tsx","components/Editor/TrackContainer.tsx","components/Editor/Editor.tsx","components/UI/IconButton.tsx","components/SampleTray/CloseButton/CloseButton.tsx","components/UI/Heading.tsx","components/SampleTray/SampleLayout/react-stonecutter/layouts/simple.js","components/SampleTray/SampleLayout/react-stonecutter/enter-exit-styles/simple.js","components/SampleTray/SampleLayout/react-stonecutter/utils/commonProps.js","components/SampleTray/SampleLayout/react-stonecutter/utils/easings.js","components/SampleTray/SampleLayout/react-stonecutter/utils/transformHelpers.js","components/SampleTray/SampleLayout/react-stonecutter/components/CSSGridItem.jsx","components/SampleTray/SampleLayout/react-stonecutter/components/CSSGrid.jsx","components/SampleTray/SampleLayout/react-stonecutter/components/SpringGrid.jsx","components/SampleTray/SampleLayout/react-stonecutter/higher-order-components/makeResponsive.jsx","components/SampleTray/SampleLayout/react-stonecutter/higher-order-components/measureItems.jsx","components/SampleTray/SampleLayout/react-stonecutter/layouts/horizontal.js","components/SampleTray/SampleLayout/react-stonecutter/enter-exit-styles/foldUp.js","components/SampleTray/SampleLayout/react-stonecutter/enter-exit-styles/fromCenter.js","components/SampleTray/SampleLayout/react-stonecutter/enter-exit-styles/fromLeftToRight.js","components/SampleTray/SampleLayout/react-stonecutter/enter-exit-styles/fromTop.js","components/SampleTray/SampleLayout/react-stonecutter/enter-exit-styles/fromBottom.js","components/SampleTray/SampleLayout/react-stonecutter/enter-exit-styles/newspaper.js","components/SampleTray/SampleLayout/react-stonecutter/enter-exit-styles/skew.js","components/SampleTray/SampleLayout/react-stonecutter/index.js","components/SampleTray/SampleLayout/react-stonecutter/layouts/pinterest.js","utils.ts","components/SampleTray/Sample/Waveform.tsx","components/SampleTray/Sample/Sample.tsx","components/XDrag.tsx","IFrameValidator.ts","components/SampleTray/Sample/DraggableSample.tsx","components/SampleTray/SampleLayout/Grid.jsx","components/SampleTray/SampleLayout/SampleLayout.tsx","components/SampleTray/SampleLayout/easings.tsx","components/UI/Tag.tsx","static/tags.ts","components/SampleTray/TagBar/TagBar.tsx","components/SampleTray/SampleTray.tsx","App.tsx","reportWebVitals.ts","classes/CardData.ts","classes/History.ts","model/appModel.ts","classes/WaveFormBuilder.ts","classes/ðŸŽ»CompositionData.ts","static/defaultCompositions.ts","model/ðŸŽ»compositionsModel.ts","static/cardDataSheetKey.ts","classes/ðŸ“‹GoogleSheetData.ts","model/googleSheetsModel.ts","model/historyModel.ts","classes/LayoutData.ts","model/layoutsModel.ts","model/logModel.ts","classes/SampleData.ts","static/placeHolderSamples.ts","model/samplesModel.ts","model/index.ts","store.ts","index.tsx"],"names":["typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","DropCategory","DragSource","InteractionType","AppMode","Composition","Section","React","forwardRef","ref","children","className","backgroundColor","column","padding","width","height","flexStatus","style","borderRadius","backdropFilter","backgroundBlur","ViewCard","cardStyle","IXDrop","dropCategory","isDropDisabled","droppableId","provided","snapshot","innerRef","isDraggingOver","placeholder","defaultGridLayoutArray","i","x","y","w","h","static","defaultLayouts","lg","md","sm","xs","xxs","console","log","JSON","stringify","WidgetGrid","viewModeState","state","appModel","appMode","setBufferLayoutAction","actions","layoutsModel","setBufferLayout","currentLayoutState","activeLayout","activeCards","useMemo","EDIT","useState","setPlaceholderCards","setFilledLayout","layout","realLayout","setRealLayout","localLayout","useRef","WidthProvider","Responsive","useEffect","allBlank","rows","cols","allGridSpots","push","emptyCards","map","rr","minW","maxW","minH","maxH","isDraggable","isResizable","resizeHandles","shift","generateFilledLayout","justPlaceholders","filter","l","startsWith","current","sharedGridSettings","breakpoints","rowHeight","margin","preventCollision","compactType","isBounded","maxRows","useCSSTransfroms","layouts","onDragStart","oldItem","newItem","e","element","border","onDrop","item","onLayoutChange","newLayout","card","index","key","sourceId","IFRAME","title","memo","TrackContainer","Editor","trackHeight","IconButton","icon","CaretDownIcon","CloseButton","onMouseUp","position","left","top","Heading","Pane","paddingBottom","items","props","columnWidth","itemHeight","columns","gutterWidth","gutterHeight","positions","itemProps","row","Math","floor","gridWidth","gridHeight","ceil","length","enterExit","scale","opacity","enter","exit","entered","commonPropTypes","PropTypes","number","isRequired","component","string","func","perspective","lengthUnit","angleUnit","commonDefaultProps","simpleLayout","simpleEnterExit","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","sineIn","sineOut","sineInOut","expoIn","expoOut","expoInOut","circIn","circOut","circInOut","backIn","backOut","backInOut","properties","name","unit","positionToProperties","translateX","translateY","buildTransform","units","arr","forEach","prop","val","isNaN","join","createClassReact","getInitialState","zIndex","componentDidMount","this","_isMounted","componentWillReceiveProps","nextProps","shallowEqual","requestAnimationFrame","setEndStyle","componentWillUnmount","clearTimeout","leaveTimeout","componentWillAppear","done","componentWillEnter","wasLeaving","_isLeaving","gridProps","gridState","setState","componentDidEnter","componentWillLeave","_remove","setTimeout","duration","render","Children","only","itemStyle","transition","transform","angle","cloneElement","WebkitTransform","WebkitTransition","propTypes","easing","getDefaultProps","componentWillMount","doLayout","toArray","rest","wrappedItems","CSSGridItem","springConfig","shape","stiffness","damping","precision","data","styles","springify","willEnter","transitionStyle","stripStyle","willLeave","exitStyle","interpolatedStyles","createElement","config","msTransform","Object","keys","reduce","obj","spring","Grid","maxWidth","minPadding","defaultColumns","getWidth","Boolean","breakpoint","handler","enquire","register","match","unregister","measureImages","background","rects","_updateRectsDebounced","debounce","updateRects","_rects","_loading","measureElements","componentDidUpdate","_elementsToMeasureContainer","elements","Array","from","el","dataset","stonecutterkey","imagesLoaded","getBoundingClientRect","acc","partition","newElements","existingElements","elementsToMeasure","measuredElements","itemRect","overflow","visibility","buildRow","filled","findSuitableRow","findIndex","counter","rotateX","rotate","skew","CSSGrid","SpringGrid","measureItems","makeResponsive","easings","horizontal","ratio","dataRatio","rowNumber","startFrom","blocked","r","fillRow","pinterest","columnHeights","indexOf","min","apply","Error","round","max","simple","enterExitStyle","foldUp","fromCenter","fromLeftToRight","fromTop","fromBottom","newspaper","randomElements","count","len","lookup","tmp","random","mapRange","value","inMin","inMax","outMin","outMax","Waveform","sampleData","sampleProgress","hovered","setHovered","svgPath","containerClass","classNames","boxWidth","playheadPosition","maskId","pathRef","onMouseEnter","onMouseLeave","xmlns","viewBox","createViewBox","x1","y1","x2","y2","id","offset","stop-color","d","stdDeviation","stroke","fill","strokeWidth","clipPath","PlayHead","distance","playHeadStyle","Sample","url","label","setSampleProgress","playing","setPlaying","onClick","progressInterval","onProgress","played","playedSeconds","loaded","loadedSeconds","src","XDrag","dndType","dragAll","isValidElement","disableInteractiveElementBlocking","shouldRespectForcePress","dragHandleProperties","dragHandleProps","isDragging","ReactDOM","createPortal","draggableProps","display","document","body","defaultProps","IFrameLoadError","IFrameLoadWarning","DraggableSample","draggableId","SampleTraySample","createGrid","isEqualWith","a","b","useCSS","measured","responsive","gutters","gridLayout","reactBrickwork","gridEnterExitStyle","Component","SampleLayout","activeTags","samples","samplesModel","activeSamples","setActiveSamples","droppableProps","isDropDisable","direction","isCombineOnly","disabled","active","sample","tags","every","t","includes","sD","widthRatio","getSampleWidth2","mapped","tagToFull","tag","fullName","PopupWindow","boxShadow","size","Text","Tag","fullTagName","buttonStyle","lineHeight","fontWeight","paddingLeft","paddingRight","trigger","open","on","closeOnDocumentClick","TagBar","onTagClick","tagsState","setActive","removeTag","addTag","SampleTray","initialValue","setValue","useToggle","toggleValue","useLocalStore","action","_state","sampleTrayClass","tagFilter","setTagFilter","useKeyboardShortcut","keyCode","enable","disable","onDragEnd","response","destination","source","App","fetchCardDataGoogleSheetThunk","googleSheetsModel","fetchAppGoogleSheet","processCompositions","compositionsModel","fetchCompositionSheet","fetchCompositionsSheet","fetchSamples","fetchSamplesSheet","onBeforeDragStart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","IFrameValidator","errors","warnings","event","xoCheckArray","errorsArray","test","target","contentWindow","message","CROSS_ORIGIN","checkForXO","malformedUrlCheckArray","str","warningsArray","RegExp","MALFORMED_URL","validURL","CardData","added","author","interaction","validator","isActive","failed","Date","History","events","currentStep","availableCards","currentLayout","defaultGridLayout","DISPLAY","history","manageViewModeChange","thunk","viewModeEnum","setAppMode","CYCLE","toggleViewMode","_","getState","setCurrentLayout","layoutArray","setAvailableCards","cardDataArray","setActiveCards","onCardSheetLoadSuccess","actionOn","storeActions","setAppGoogleSheetData","cards","payload","getSheetRows","sourceid","c","debug","onSetActiveLayout","thunkOn","setActiveLayout","activeSources","sources","s","availableCardsUpdated","registerCardLoadFailure","failedCard","getStoreState","failedId","newCards","fail","onSwapCardContent","swapCardContent","targetId","newSource","find","onUndoHistory","historyModel","setCurrentHistory","onRedoHistory","WaveFormBuilder","collectSamplePoints","sampleDuration","svgViewBoxWidth","points","currentTime","channel1","channel","valueAtTime","at_time","maxSampleVal","max_sample","percentageComplete","xValue","yValue","timePointValue","topPoints","p","reversePoints","reverse","newPoint","allPoints","SVGCatmullRomSpline","toPath","audioContext","getAudio","fetch","arrayBuffer","buffer","options","audio_context","array_buffer","Promise","resolve","reject","WaveformData","createFromAudio","err","waveform","error","AudioContext","original","pathData","setPath","catch","CompositionData","waveFormData","defaultCompositions","process","bachMovement1","genearteDefaultCompositions","compositions","processor","analysisResults","allSettled","results","succesfulAnalaysisCompositions","result","comp","status","setCompositions","downloadAnalysis","samplesArray","toJSON","csv","Papa","unparse","Blob","type","cardDataSheetKey","sheet_number","GoogleSheetData","sheetId","sheets","sheetIndex","apikey","GoogleSpreadsheet","useApiKey","sheetPromiseArray","loadInfo","sheetsByIndex","myTest","getRows","layoutDataGoogleSheet","cardDataGoogleSheet","appGoogleSheet","undefined","samplesSheet","compositionsSheet","publicSheetUrl","parseSheet","setCompositionsSheet","setSamplesSheet","prototype","loadSheets","all","responseData","studentsGoogleSheet","googleSheet","setCardDataGoogleSheet","sheet","setLayoutDataGoogleSheet","compositionSheet","complete","parse","download","header","file","endsWith","undoHistory","undoIt","undo","redoIt","redo","addEditHistory","addEditEvent","LayoutData","timestamp","split","startLayout","swapInfo","entries","k","v","toRemove","toAdd","pos","toFail","newGridLayout","externalLayouts","bufferLayout","tempLayout","onSetAppGoogleSheetData","dLayout","defaultLayout","setExternalLayouts","onToggleViewModeListener","buf","newActiveLayout","newLayoutArray","getStoreActions","swapCard","deleteCard","cardToDelete","removeCard","addCard","cardAddEvent","targetPosition","cardToAdd","setGridLayout","failCard","setTempLayout","updateLayout","swap","old","logModel","setData","SampleData","sampleDataRow","filename","composition","startTime","endTime","path","starTime","hour","defaultStartTime","defaultEndTime","placeHolderSamplePaths","defaultSamples","sampleUrl","basicRow","date","sampleD","makeDefaultSamples","onSetSamplesSheets","rawSampleRows","sampleDataArray","setSamples","processSamples","processedSamples","generateSVG","succesfulAnalaysisSamples","loadSamples","model","appData","historyData","compositonsModel","store","createStore","devTools","middleware","logger","getElementById"],"mappings":"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","file":"static/js/main.e717f58a.chunk.js","sourcesContent":["import { createTypedHooks } from \"easy-peasy\";\r\nimport { StoreModel } from \"./model\";\r\nimport React, {useState} from 'react';\r\nimport { useArray } from \"react-hanger\";\r\n\r\nconst typedHooks = createTypedHooks<StoreModel>();\r\n\r\n// We export the hooks from our store as they will contain the\r\n// type information on them\r\n// see https://easy-peasy.vercel.app/docs/api/use-store-actions.html for more on store hooks\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\n\r\n\r\nexport function useToggle(initialValue: boolean): [boolean, () => void] {\r\n    const [value, setValue] = useState<boolean>(initialValue);\r\n  \r\n    const toggleValue = () => setValue(!value);\r\n  \r\n    return [value, toggleValue];\r\n}\r\n\r\nexport {useArray}\r\n","export enum DropCategory{\r\n    SampleTraySample,\r\n    EDITOR,\r\n    PLACEHOLDER,\r\n    IFRAME,\r\n}\r\n\r\nexport enum DragSource {\r\n    SAMPLE_TRAY\r\n}\r\n  \r\nexport enum InteractionType {\r\n    ACTIVE = \"ACTIVE\",\r\n    STATIC = \"STATIC\",\r\n  }\r\n  export enum AppMode {\r\n    DISPLAY = \"DISPLAY\",\r\n    EDIT = \"EDIT\",\r\n    CYCLE = \"CYCLE\",\r\n  }\r\n\r\nexport enum Composition{\r\n  BACH_MOVEMENT_1 = \"BACH_MOVEMENT_1\",\r\n  BACH_MOVEMENT_2 = \"BACH_MOVEMENT_2\",\r\n  BACH_MOVEMENT_3 = \"BACH_MOVEMENT_3A\",\r\n  BACH_MOVEMENT_4 = \"BACH_MOVEMENT_4\",\r\n  BARTOK_MOVEMENT_1 = \"BARTOK_MOVEMENT_1\", \r\n  BARTOK_MOVEMENT_2 = \"BARTOK_MOVEMENT_2\",\r\n  YSAE_MOVEMENT_1 = \"YSAE_MOVEMENT_1\",\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport {Pane} from \"evergreen-ui\";\r\nimport \"@css/Section.scss\";\r\n\r\ninterface SectionProperties{\r\n  children: JSX.Element | JSX.Element[];\r\n  className?: string;\r\n  backgroundColor?: string\r\n  column?: boolean; \r\n  padding?: string;\r\n  width?: string | number;\r\n  height?: string | number;\r\n  backgroundBlur?: boolean;\r\n}\r\n// const Component = React.forwardRef<RefType, PropsType>((props, ref) => {\r\n// eslint-disable-next-line react/display-name\r\nconst Section = React.forwardRef<HTMLDivElement, SectionProperties>(({children, className, backgroundColor, column, padding, width, height, backgroundBlur}, ref) => {\r\n  const flexStatus = column?\"flex-column \":\"flex-row \"\r\n  const style = {\r\n    backgroundColor: backgroundColor??\"rgba(0,0,0,0)\",\r\n    padding: padding,\r\n    borderRadius: \"1em\",\r\n    width: width??\"100%\", \r\n    height: height??\"100%\",\r\n    backdropFilter: backgroundBlur?\"blur(10px)\":\"\",\r\n  }\r\n  return(\r\n    <div className = {\"ui-section \" + flexStatus + className??\"\"}style = {style} ref = {ref}>\r\n    {/* <Pane ref = {ref} className = {\"ui-section \" + flexStatus + className??\"\"}width = {\"100%\"} height = {\"100%\"} backgroundColor = {backgroundColor??\"lightgrey\"} padding = {padding??\"1em\"} borderRadius = {\"1em\"}> */}\r\n        {children} \r\n    {/* </Pane> */}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Section\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"@hooks\";\r\nimport classNames from \"classnames\";\r\nimport { Pane } from \"evergreen-ui\";\r\nimport Section from \"@components/UI/Section\";\r\nimport \"./ViewCard.scss\";\r\nimport \"@css/Knob.scss\";\r\n\r\ninterface ViewCardProperties {\r\n  width?: number | string;\r\n  height?: number | string;\r\n  children?: JSX.Element | JSX.Element[];\r\n}\r\n\r\nconst ViewCard = ({ children, width, height }: ViewCardProperties): JSX.Element => {\r\n  const cardStyle = {\r\n      width: width??\"100%\",\r\n      height: height??\"100%\",\r\n      \r\n  } as React.CSSProperties\r\n  return (\r\n  <div className=\"dimmer-container\" style= {cardStyle}>\r\n  <div className=\"dimmer\">\r\n      <div className=\"dimmer-inner\">\r\n        {children}\r\n      </div>\r\n  </div>\r\n  </div>\r\n  )\r\n\r\n};\r\n\r\nexport default ViewCard;\r\n","import \"../css/droppable.scss\";\r\n\r\nimport { Droppable, DroppableProps } from \"react-beautiful-dnd\";\r\nimport React, { FC, ReactNode, useEffect } from \"react\";\r\n\r\nimport { AddIcon } from \"evergreen-ui\";\r\nimport { DropCategory } from \"@enums\";\r\n\r\n// import Pulsar from \"./Shared/Pulsar\";\r\n\r\ninterface IXDrop extends Omit<DroppableProps, \"children\"> {\r\n  children: ReactNode;\r\n  dropCategory: DropCategory;\r\n  className?: string;\r\n}\r\n\r\n/**A droppable container. Wraps child widgets in a react-beautiful-dnd Droppable component, and renders a \"+\" if a draggable is dragging over the container */\r\nconst IXDrop: FC<IXDrop> = ({\r\n  children,\r\n  className,\r\n  dropCategory,\r\n  ...properties\r\n}) => {\r\n  // const droppableContainert className = {\"droppable \" + className}\r\n  return (\r\n    // <Droppable {...properties} type={\"some\"}>\r\n    // <Droppable isDropDisabled={true} droppableId = \"sample tray\">\r\n    <Droppable isDropDisabled={false} droppableId = \"sample tray\">\r\n    {/* <Droppable {...properties} type={\"DEFAULT\"}> */}\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <div\r\n            {...provided.innerRef}\r\n            ref={provided.innerRef}\r\n            className={\r\n              snapshot.isDraggingOver\r\n                ? \"droppable-hovered\" + \" \" + className\r\n                : \"droppable\" + \" \" + className\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                snapshot.isDraggingOver\r\n                  ? \"droppable-overlay droppable-overlay-visible\"\r\n                  : \"droppable-overlay droppable-overlay-hidden\"\r\n              }\r\n            >\r\n              {/* <Pulsar /> */}\r\n            </div>\r\n            {children}\r\n            {provided.placeholder}\r\n          </div>\r\n        );\r\n      }}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default IXDrop;\r\n","import { Layout, Layouts } from \"react-grid-layout\";\r\n// const availableHandles: ResizeHandle[] = [\r\n//   \"s\",\r\n//   \"w\",\r\n//   \"e\",\r\n//   \"n\",\r\n//   \"sw\",\r\n//   \"nw\",\r\n//   \"se\",\r\n//   \"ne\",\r\n// ];\r\nconst defaultGridLayoutArray: Layout[] = [\r\n  {\r\n    i: \"https://seisolo.io\",\r\n    x: 0,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n  {\r\n    i: \"https://seisolo2.io\",\r\n    x: 1,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n  {\r\n    i: \"https://seisolo3.io\",\r\n    x: 2,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n  {\r\n    i: \"https://seisolo4.io\",\r\n    x: 3,\r\n    y: 0,\r\n    w: 1,\r\n    h: 1,\r\n    static: false,\r\n  },\r\n];\r\n\r\n// const defaultGridLayoutArr: Layout[] = [\r\n//   { i: \"clock\", x: 0, y: 0, w: 2, h: 1, static: true },\r\n//   {\r\n//     i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_1\",\r\n//     x: 0,\r\n//     y: 1,\r\n//     w: 1,\r\n//     h: 1,\r\n//     static: true,\r\n//   },\r\n//   {\r\n//     i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_3\",\r\n//     x: 2,\r\n//     y: 0,\r\n//     w: 1,\r\n//     h: 1,\r\n//     minW: 2,\r\n//     maxW: 4,\r\n//   },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_3\", x: 2, y: 0, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_3\", x: 3, y: 0, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_5\", x: 0, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_6\", x: 1, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_7\", x: 2, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_8\", x: 3, y: 1, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_9\", x: 0, y: 3, w: 1, h: 1 },\r\n//   { i: \"b2d9c003-8edc-4304-a05e-d78b9e8f782f_10\", x: 1, y: 3, w: 1, h: 1 },\r\n// ];\r\n\r\nconst defaultLayouts: Layouts = {\r\n  lg: defaultGridLayoutArray,\r\n  md: defaultGridLayoutArray,\r\n  sm: defaultGridLayoutArray,\r\n  xs: defaultGridLayoutArray,\r\n  xxs: defaultGridLayoutArray,\r\n};\r\n\r\nconsole.log(JSON.stringify(defaultLayouts));\r\nexport default defaultLayouts;\r\n","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport GridLayout, {\r\n  WidthProvider,\r\n  Responsive,\r\n  Layout,\r\n  Layouts,\r\n} from \"react-grid-layout\";\r\n// import \"../css/cardLayout.css\";\r\nimport ViewCard from \"./ViewCard/ViewCard\";\r\nimport { useStoreState, useStoreActions } from \"@hooks\";\r\nimport CardData from \"@classes/CardData\";\r\nimport { AppMode, DropCategory, DragSource } from \"@enums\";\r\nimport IXDrop from \"@components/IXDrop\";\r\nimport type { GridPosition } from \"@interfaces/GridPosition\";\r\nimport defaultLayouts from \"@static/defaultLayouts\";\r\nimport \"@css/Knob.scss\";\r\nimport \"@css/WidgetGrid.scss\";\r\n/**\r\n * Responsible for managing the layout of card components. Accesses a list of available card data from the store, then maps them into Card Components\r\n * @component\r\n *\r\n */\r\n\r\ninterface WidgetGridProperties {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport const WidgetGrid = ({\r\n  width,\r\n  height,\r\n}: WidgetGridProperties): JSX.Element => {\r\n  const rows = 1;\r\n  const cols = 4;\r\n  const viewModeState = useStoreState((state) => state.appModel.appMode);\r\n  const setBufferLayoutAction = useStoreActions(\r\n    (actions) => actions.layoutsModel.setBufferLayout\r\n  );\r\n\r\n  const currentLayoutState = useStoreState(\r\n    (state) => state.layoutsModel.activeLayout\r\n  );\r\n\r\n  const testViewMode = useMemo(() => {\r\n    return viewModeState === AppMode.EDIT;\r\n  }, [viewModeState]);\r\n\r\n  const activeCards = useStoreState((state) => state.appModel.activeCards);\r\n  const [placeholderCards, setPlaceholderCards] = useState<string[]>([]);\r\n  const [filledLayout, setFilledLayout] = useState(defaultLayouts);\r\n  const [realLayout, setRealLayout] = useState(currentLayoutState?.layout);\r\n\r\n  //keep a local mutable reference to a layout in order to avoid making excess calls to store and causing re-renders on each new edit\r\n  const localLayout = useRef<null | Layouts>(null);\r\n  type compactType = \"vertical\" | \"horizontal\" | null | undefined;\r\n  //each card has a unique key. Clicking a card sets the current active key. If a card's key is equal to the active key\r\n  //then it will be rendered into the modal popup\r\n  const activeKeyReference = useRef(\"\");\r\n\r\n  const removeItem = (id: string, layout: Layouts): void => {\r\n    const old = { ...localLayout.current };\r\n    if (old) {\r\n      for (const [k, v] of Object.entries(old)) {\r\n        old[k] = v.filter((l) => l.i !== id);\r\n      }\r\n    }\r\n    localLayout.current = old;\r\n  };\r\n\r\n  const ResponsiveGridLayout = WidthProvider(Responsive);\r\n  // const ResponsiveGridLayout = WidthProvider(Responsive);\r\n\r\n  useEffect(() => {\r\n    const allBlank = generateFilledLayout(rows, cols);\r\n    const justPlaceholders = allBlank.lg\r\n      .filter((l) => l.i.startsWith(\"empty\"))\r\n      .map((l) => l.i);\r\n\r\n    setPlaceholderCards(justPlaceholders);\r\n    setFilledLayout(allBlank);\r\n    setRealLayout(currentLayoutState?.layout);\r\n    if (currentLayoutState?.layout) {\r\n      localLayout.current = currentLayoutState?.layout;\r\n    }\r\n  }, [activeCards, currentLayoutState]);\r\n\r\n  const sharedGridSettings = {\r\n    breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\r\n    cols: { lg: 4, md: 4, sm: 4, xs: 4, xxs: 4 },\r\n    // rowHeight: size.y / 3.5,\r\n    width: width,\r\n    rowHeight: height ?? 100,\r\n    margin: [0, 0] as [number, number],\r\n    preventCollision: true,\r\n    // compactType: 2,\r\n    // compactType:\r\n    compactType: \"horizontal\" as compactType,\r\n    isBounded: true,\r\n    maxRows: 1,\r\n    useCSSTransfroms: true,\r\n  };\r\n  // fff\r\n  return (\r\n    <>\r\n      {realLayout ? (\r\n        <Responsive\r\n          // <ResponsiveGridLayout\r\n          {...sharedGridSettings}\r\n          className=\"card-layout\"\r\n          // containerWidth = {100}\r\n          layouts={realLayout}\r\n          resizeHandles={[\"se\"]}\r\n          preventCollision={false}\r\n          cols={{ lg: 4, md: 4, sm: 4, xs: 4 }}\r\n          // verticalCompact={true}\r\n          // horizontalCompact = {true}\r\n          onDragStart={(layout, oldItem, newItem, placeholder, e, element) => {\r\n            const previousStyle = element.style;\r\n            previousStyle.border = \"2px solid cyan\";\r\n            element.style.border = \"4px solid cyan\";\r\n          }}\r\n          onDrop={(layout, item, e) => {\r\n            console.log(layout, item, e);\r\n          }}\r\n          onLayoutChange={(l) => {\r\n            const newLayout: Layouts = {\r\n              lg: l,\r\n              md: l,\r\n              sm: l,\r\n              xs: l,\r\n              xxs: l,\r\n            };\r\n            localLayout.current = newLayout;\r\n            setBufferLayoutAction(localLayout.current);\r\n          }}\r\n          isDraggable={true}\r\n          // isDraggable={testViewMode}\r\n          isResizable={false}\r\n        >\r\n          {activeCards.map((card: CardData, index: number) => {\r\n            return (\r\n              <div\r\n                //key provided here is the means of accessing a unique identifier for the cards\r\n                key={card.sourceId}\r\n                // draggable={true}\r\n                className={\"draggable-widget\"}\r\n                // className = {\"dimmer-container\"}\r\n                // className = {cardContainerClass(card, viewModeState)}\r\n              >\r\n                <IXDrop\r\n                  key={index}\r\n                  droppableId={card.sourceId}\r\n                  dropCategory={DropCategory.IFRAME}\r\n                >\r\n                  <ViewCard width={width / 4} height={height}>\r\n                    <div>{card.title}</div>\r\n                  </ViewCard>\r\n                </IXDrop>\r\n              </div>\r\n            );\r\n          })}\r\n        </Responsive>\r\n      ) : (\r\n        <div className={\"centered-flex\"}>not loaded</div>\r\n      )}\r\n\r\n      {/* <div>\r\n        {filledLayout ? (\r\n          <ResponsiveGridLayout\r\n            {...sharedGridSettings}\r\n            className=\"card-layout\"\r\n            layouts={filledLayout}\r\n            resizeHandles={[]}\r\n            preventCollision={true}\r\n            isDraggable={false}\r\n            isResizable={false}\r\n          >\r\n            {placeholderCards.map((p, index) => {\r\n              return (\r\n                <div key={p}>\r\n                  <IXDrop\r\n                    key={index}\r\n                    droppableId={p}\r\n                    dropCategory={DropCategory.PLACEHOLDER}\r\n                  >\r\n                    <ViewCard\r\n                      // key={p}\r\n                      // cardId={p}\r\n                      // activeKey={activeKeyReference}\r\n                      // cardType={DropCategory.PLACEHOLDER}\r\n                    ></ViewCard>\r\n                  </IXDrop>\r\n                </div>\r\n              );\r\n            })}\r\n          </ResponsiveGridLayout>\r\n        ) : (\r\n          <div className={\"centered-flex\"}>not loaded</div>\r\n        )}\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\nexport default React.memo(WidgetGrid);\r\n\r\nconst cardContainerClass = (card: CardData, appMode: AppMode): string => {\r\n  const isFailed = card.failed;\r\n  if (isFailed && appMode === AppMode.DISPLAY) {\r\n    return \"card-container-hidden\";\r\n  } else if (isFailed && appMode === AppMode.EDIT) {\r\n    return \"card-container-error\";\r\n  } else {\r\n    return \"card-container\";\r\n  }\r\n};\r\n\r\nconst createLayout = (cards: CardData[], cols: number, rows: number) => {\r\n  const pos: GridPosition = { x: 0, y: 0 };\r\n  for (let y = 0; y < rows; y++) {\r\n    for (let x = 0; x < cols; x++) {\r\n      // allGridSpots.push({ x: x, y: y });\r\n    }\r\n  }\r\n};\r\n\r\nfunction generateFilledLayout(rows: number, cols: number): Layouts {\r\n  const allGridSpots: GridPosition[] = [];\r\n  for (let y = 0; y < rows; y++) {\r\n    for (let x = 0; x < cols; x++) {\r\n      allGridSpots.push({ x: x, y: y });\r\n    }\r\n  }\r\n\r\n  const emptyCards = allGridSpots.map((rr) => {\r\n    return {\r\n      x: rr.x,\r\n      y: rr.y,\r\n      w: 1,\r\n      h: 1,\r\n      i: `empty_card_[${rr.x}, ${rr.y}]`,\r\n      minW: 1,\r\n      maxW: 1,\r\n      minH: 1,\r\n      maxH: 1,\r\n      static: false,\r\n      // static: true,\r\n      isDraggable: false,\r\n      isResizable: false,\r\n      resizeHandles: [],\r\n    } as Layout;\r\n  });\r\n  //TODO: MORE FUNCTIONAL SOLUTION\r\n  // const filled = layout.concat(emptyCards);\r\n  //pop off the first two positions where the clock is\r\n  emptyCards.shift();\r\n  emptyCards.shift();\r\n  return {\r\n    lg: emptyCards,\r\n    md: emptyCards,\r\n    sm: emptyCards,\r\n    xs: emptyCards,\r\n    xxs: emptyCards,\r\n  };\r\n}\r\n\r\nfunction findFilledPositions(layouts: Layout[]): GridPosition[] {\r\n  const takenSpots: GridPosition[] = [];\r\n  for (const l of layouts) {\r\n    takenSpots.push({ x: l.x, y: l.y });\r\n    for (let index = 1; index < l.w; index++) {\r\n      const fullSpotX: GridPosition = {\r\n        x: l.x + index,\r\n        y: l.y,\r\n      };\r\n      takenSpots.push(fullSpotX);\r\n    }\r\n    for (let index = 1; index < l.h; index++) {\r\n      const fullSpotY: GridPosition = {\r\n        x: l.x,\r\n        y: l.y + index,\r\n      };\r\n      takenSpots.push(fullSpotY);\r\n    }\r\n  }\r\n  return takenSpots;\r\n}\r\nfunction findEmptyGridPositions(\r\n  layouts: Layout[],\r\n  rows: number,\r\n  cols: number\r\n): GridPosition[] {\r\n  const allGridSpots: GridPosition[] = [];\r\n  for (let y = 0; y < rows; y++) {\r\n    for (let x = 0; x < cols; x++) {\r\n      allGridSpots.push({ x: x, y: y });\r\n    }\r\n  }\r\n  const filledSpots = findFilledPositions(layouts);\r\n  const stringFilledSpots = new Set(\r\n    filledSpots.map((fs) => [fs.x, fs.y].toString())\r\n  );\r\n\r\n  return allGridSpots.filter(\r\n    (gs) => !stringFilledSpots.has([gs.x, gs.y].toString())\r\n  );\r\n}\r\n\r\n// import React, { useState, useEffect} from \"react\";\r\n// import {useStoreActions, useStoreState} from \"@easyhooks\";\r\n// import classNames from \"classnames\";\r\n// import {Pane} from \"evergreen-ui\";\r\n// import { WidthProvider, Responsive, Layout, Layouts } from \"react-grid-layout\";\r\n\r\n// const WidgetLayout = (): JSX.Element =>{\r\n//    const rows = 3;\r\n//    const cols = 4;\r\n//    const [size, setSize] = useState({\r\n//     x: window.innerWidth,\r\n//     y: window.innerHeight,\r\n//   });\r\n\r\n//   const activeWidgets =  Array.from(Array(45).keys());\r\n\r\n//   return(\r\n//     <div>hello</div>\r\n//   )\r\n// }\r\n\r\n// export default WidgetLayout\r\n","import React, { useState, useEffect} from \"react\";\r\nimport classNames from \"classnames\";\r\nimport {Pane} from \"evergreen-ui\";\r\nimport Section from \"@components/UI/Section\";\r\nimport \"@css/TrackContainer.scss\";\r\n\r\ninterface TrackContainerProperties{\r\n  height: string | number;\r\n  children: JSX.Element | JSX.Element[]\r\n}\r\n\r\nconst TrackContainer = ({children, height}:TrackContainerProperties): JSX.Element =>{\r\n  return(\r\n      <Section width= {\"80%\"} height = {height} backgroundColor= {\"green\"} className = {\"track-container\"} padding = {\"0em\"}>\r\n          {children}\r\n      </Section>\r\n\r\n  )\r\n}\r\n\r\nexport default TrackContainer\r\n","import React, { useState, useEffect, useRef} from \"react\";\r\nimport {useStoreActions, useStoreState} from \"@hooks\";\r\nimport classNames from \"classnames\";\r\nimport IXDrop from \"@components/IXDrop\";\r\nimport { DropCategory } from \"@enums\";\r\nimport Section from \"@components/UI/Section\";\r\nimport \"./Editor.scss\";\r\nimport WidgetGrid from \"./WidgetGrid\";\r\nimport TrackContainer from \"./TrackContainer\";\r\nimport Knob from \"./Knob\";\r\n\r\nconst Editor = (): JSX.Element =>{\r\n  const WidgetGridSectionRef= useRef<HTMLDivElement|undefined>();\r\n  const trackWidth = 1500;\r\n  const [trackHeight, setTrackHeight] = useState(200)\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  return(\r\n\r\n      <Section height= {\"100vh\"} className=\"editor-container\">\r\n        <TrackContainer height = {trackHeight}>\r\n            <WidgetGrid height = {trackHeight} width = {trackWidth}/>\r\n        </TrackContainer>\r\n      </Section>\r\n \r\n  )\r\n}\r\n\r\nexport default Editor\r\n","import React, { useState, useEffect} from \"react\";\r\nimport {useStoreActions, useStoreState} from \"@hooks\";\r\nimport { IconButton as EvergreenIconButton, CaretDownIcon} from \"evergreen-ui\";\r\n\r\nconst IconButton = (): JSX.Element =>{\r\n  return(\r\n    <EvergreenIconButton icon = {CaretDownIcon}></EvergreenIconButton>\r\n  )\r\n}\r\n\r\nexport default IconButton\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {useStoreActions, useStoreState} from \"@hooks\";\r\n\r\nimport IconButton from \"@components/UI/IconButton\";\r\nimport {Pane} from \"evergreen-ui\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface CloseButtonProperties{\r\n  onMouseUp: React.MouseEventHandler<HTMLDivElement>\r\n}\r\n\r\nconst CloseButton = ({onMouseUp}:CloseButtonProperties): JSX.Element =>{\r\n  const closeButtonStyle = {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: -50,\r\n  } as React.CSSProperties\r\n\r\n  return(\r\n    <div onMouseUp={onMouseUp} style = {closeButtonStyle} className = {\"close-button-container\"} >\r\n      <IconButton></IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CloseButton\r\n","import React, { useState, useEffect} from \"react\";\r\nimport {useStoreActions, useStoreState} from \"@hooks\";\r\nimport classNames from \"classnames\";\r\nimport {Pane} from \"evergreen-ui\";\r\n\r\nconst Heading = ({children}:{children: JSX.Element | JSX.Element[]}): JSX.Element =>{\r\n    return(\r\n      <Pane paddingBottom = {\".5em\"}>\r\n          {children}\r\n      </Pane>\r\n    )\r\n  }\r\n  \r\nexport default Heading\r\n","\nexport default function(items, props) {\n  const { columnWidth, itemHeight = 150, columns,\n    gutterWidth, gutterHeight } = props;\n\n  const positions = items.map((itemProps, i) => {\n    const column = i % columns;\n    const row = Math.floor(i / columns);\n\n    const x = column * columnWidth + column * gutterWidth;\n    const y = row * itemHeight + row * gutterHeight;\n\n    return [x, y];\n  });\n\n  const gridWidth = columns * columnWidth + ((columns - 1) * gutterWidth);\n  const gridHeight = Math.ceil(items.length / columns) *\n    (itemHeight + gutterHeight) - gutterHeight;\n\n  return { positions, gridWidth, gridHeight };\n}\n","\nconst enterExit = () => ({ scale: 0, opacity: 0 });\n\nexport const enter = enterExit;\nexport const exit = enterExit;\n\nexport const entered = () => ({ scale: 1, opacity: 1 });\n","import PropTypes from \"prop-types\";\nimport simpleLayout from \"../layouts/simple\";\nimport * as simpleEnterExit from \"../enter-exit-styles/simple\";\n\nexport const commonPropTypes = {\n  columns: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  gutterWidth: PropTypes.number,\n  gutterHeight: PropTypes.number,\n  component: PropTypes.string,\n  layout: PropTypes.func,\n  enter: PropTypes.func,\n  entered: PropTypes.func,\n  exit: PropTypes.func,\n  perspective: PropTypes.number,\n  lengthUnit: PropTypes.string,\n  angleUnit: PropTypes.string\n};\n\nexport const commonDefaultProps = {\n  lengthUnit: \"px\",\n  angleUnit: \"deg\",\n  component: \"div\",\n  gutterWidth: 0,\n  gutterHeight: 0,\n  layout: simpleLayout,\n  enter: simpleEnterExit.enter,\n  entered: simpleEnterExit.entered,\n  exit: simpleEnterExit.exit\n};","\n// Values https://matthewlein.com/ceaser/\nexport const quadIn     = 'cubic-bezier(0.55, 0.085, 0.68, 0.53)';\nexport const quadOut    = 'cubic-bezier(0.25, 0.46, 0.45, 0.94)';\nexport const quadInOut  = 'cubic-bezier(0.455, 0.03, 0.515, 0.955)';\nexport const cubicIn    = 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';\nexport const cubicOut   = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\nexport const cubicInOut = 'cubic-bezier(0.645, 0.045, 0.355, 1)';\nexport const quartIn    = 'cubic-bezier(0.895, 0.03, 0.685, 0.22)';\nexport const quartOut   = 'cubic-bezier(0.165, 0.84, 0.44, 1)';\nexport const quartInOut = 'cubic-bezier(0.77, 0, 0.175, 1)';\nexport const quintIn    = 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';\nexport const quintOut   = 'cubic-bezier(0.23, 1, 0.32, 1)';\nexport const quintInOut = 'cubic-bezier(0.86, 0, 0.07, 1)';\nexport const sineIn     = 'cubic-bezier(0.47, 0, 0.745, 0.715)';\nexport const sineOut    = 'cubic-bezier(0.39, 0.575, 0.565, 1)';\nexport const sineInOut  = 'cubic-bezier(0.445, 0.05, 0.55, 0.95)';\nexport const expoIn     = 'cubic-bezier(0.95, 0.05, 0.795, 0.035)';\nexport const expoOut    = 'cubic-bezier(0.19, 1, 0.22, 1)';\nexport const expoInOut  = 'cubic-bezier(1, 0, 0, 1)';\nexport const circIn     = 'cubic-bezier(0.6, 0.04, 0.98, 0.335)';\nexport const circOut    = 'cubic-bezier(0.075, 0.82, 0.165, 1)';\nexport const circInOut  = 'cubic-bezier(0.785, 0.135, 0.15, 0.86)';\nexport const backIn     = 'cubic-bezier(0.6, -0.28, 0.735, 0.045)';\nexport const backOut    = 'cubic-bezier(0.175, 0.885, 0.32, 1.275)';\nexport const backInOut  = 'cubic-bezier(0.68, -0.55, 0.265, 1.55)';\n","\nconst properties = [\n  { name: 'translateX', unit: 'length' },\n  { name: 'translateY', unit: 'length' },\n  { name: 'perspective', unit: 'length' },\n  { name: 'translateZ', unit: 'length' },\n  { name: 'skew', unit: 'angle' },\n  { name: 'skewX', unit: 'angle' },\n  { name: 'skewY', unit: 'angle' },\n  { name: 'scale' },\n  { name: 'scaleX' },\n  { name: 'scaleY' },\n  { name: 'scaleZ' },\n  { name: 'rotate', unit: 'angle' },\n  { name: 'rotateX', unit: 'angle' },\n  { name: 'rotateY', unit: 'angle' }\n];\n\nexport const positionToProperties = position => ({\n  translateX: position[0],\n  translateY: position[1]\n});\n\nexport const buildTransform = (style, perspective, units) => {\n  const arr = [];\n\n  properties.forEach(prop => {\n    if (prop.name === 'perspective') {\n      if (typeof perspective !== 'undefined') {\n        arr.push(`perspective(${perspective}${units[prop.unit]})`);\n      }\n    } else if (typeof style[prop.name] !== 'undefined') {\n      const val = isNaN(style[prop.name]) ? 0 : style[prop.name];\n      arr.push(`${prop.name}(${val}${prop.unit ? units[prop.unit] : ''})`);\n    }\n  });\n\n  return arr.join(' ');\n};\n","import React from 'react';\nimport shallowEqual from 'shallowequal';\nimport { buildTransform, positionToProperties } from '../utils/transformHelpers';\nimport createClassReact from 'create-react-class';\nexport default createClassReact({\n\n  getInitialState() {\n    return {\n      style: {\n        zIndex: 2\n      }\n    };\n  },\n\n  componentDidMount() {\n    this._isMounted = true;\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (!shallowEqual(nextProps, this.props)) {\n      requestAnimationFrame(() => {\n        this.setEndStyle(nextProps, 2);\n      });\n    }\n  },\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    clearTimeout(this.leaveTimeout);\n  },\n\n  componentWillAppear(done) {\n    this.setEndStyle(this.props, 2);\n    done();\n  },\n\n  componentWillEnter(done) {\n    const wasLeaving = this._isLeaving;\n    this._isLeaving = false;\n    clearTimeout(this.leaveTimeout);\n\n    const { position, gridProps, gridState } = this.props;\n\n    requestAnimationFrame(() => {\n      if (!wasLeaving) {\n        this.setState({\n          style: {\n            ...this.state.style,\n            ...positionToProperties(position),\n            zIndex: 1,\n            ...gridProps.enter(this.props, gridProps, gridState)\n          }\n        });\n      }\n\n      done();\n    });\n  },\n\n  componentDidEnter() {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        this.setEndStyle(this.props, 1);\n      });\n    });\n  },\n\n  componentWillLeave(done) {\n    this._remove = done;\n    const { gridProps, gridState } = this.props;\n\n    requestAnimationFrame(() => {\n      if (this._isMounted) {\n        this._isLeaving = true;\n\n        this.setState({\n          style: {\n            ...this.state.style,\n            zIndex: 0,\n            ...gridProps.exit(this.props, gridProps, gridState)\n          }\n        });\n\n        this.leaveTimeout = setTimeout(done, this.props.duration);\n      }\n    });\n  },\n\n  setEndStyle(props, zIndex) {\n    clearTimeout(this.leaveTimeout);\n\n    if (this._remove) {\n      this._remove();\n      this._remove = null;\n      return;\n    }\n\n    if (!this._isMounted) return;\n\n    const { position, gridProps, gridState } = props;\n\n    this.setState({\n      style: {\n        ...this.state.style,\n        zIndex,\n        ...gridProps.entered(props, gridProps, gridState),\n        ...positionToProperties(position)\n      }\n    });\n  },\n\n  render() {\n    const item = React.Children.only(this.props.children);\n    const { style: itemStyle } = item.props;\n    const { transition, perspective, lengthUnit, angleUnit } = this.props;\n\n    const { style: { translateX, translateY, opacity, zIndex } } = this.state;\n\n    if (typeof translateX === 'undefined' || typeof translateY === 'undefined') {\n      return null;\n    }\n\n    const transform = buildTransform(this.state.style, perspective, {\n      length: lengthUnit, angle: angleUnit\n    });\n\n    return React.cloneElement(item, {\n      style: {\n        ...itemStyle,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        zIndex,\n        opacity,\n        transform,\n        transition,\n        WebkitTransform: transform,\n        WebkitTransition: transition\n      }\n    });\n  }\n\n});\n","import React from 'react';\nimport ReactTransitionGroup from 'react-addons-transition-group';\nimport shallowEqual from 'shallowequal';\nimport { commonPropTypes, commonDefaultProps } from '../utils/commonProps';\nimport { cubicOut } from '../utils/easings';\nimport CSSGridItem from './CSSGridItem';\nimport createClassReact from 'create-react-class';\nimport PropTypes from \"prop-types\";\n\nexport default createClassReact({\n\n  propTypes: {\n    ...commonPropTypes,\n    duration: PropTypes.number.isRequired,\n    easing: PropTypes.string\n  },\n\n  getDefaultProps() {\n    return {\n      ...commonDefaultProps,\n      easing: cubicOut\n    };\n  },\n\n  componentWillMount() {\n    this.setState(this.doLayout(this.props));\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (!shallowEqual(nextProps, this.props)) {\n      this.setState(this.doLayout(nextProps));\n    }\n  },\n\n  doLayout(props) {\n    const { positions, gridWidth, gridHeight } =\n      props.layout(React.Children.toArray(props.children)\n        .map(item => ({\n          ...item.props,\n          key: item.key\n        })), props);\n\n    return { gridWidth, gridHeight, positions };\n  },\n\n  render() {\n    const { component, style, children, duration, easing, lengthUnit, ...rest } = this.props;\n    const items = React.Children.toArray(children);\n    const { positions, gridWidth, gridHeight } = this.state;\n\n    const transition = ['opacity', 'transform'].map(prop =>\n      `${prop} ${duration}ms ${easing}`).join(', ');\n\n    const wrappedItems = items.map((item, i) =>\n      <CSSGridItem\n        key={item.key}\n        position={positions[i]}\n        {...this.props}\n        transition={transition}\n        gridProps={this.props}\n        gridState={this.state}\n      >\n        {item}\n      </CSSGridItem>);\n\n    return (\n      <ReactTransitionGroup\n        component={component}\n        style={{\n          position: 'relative',\n          ...style,\n          width: `${gridWidth}${lengthUnit}`,\n          height: `${gridHeight}${lengthUnit}`\n        }}\n        {...rest}\n      >\n        {wrappedItems}\n      </ReactTransitionGroup>\n    );\n  }\n\n});\n","import React from 'react';\nimport { TransitionMotion, spring } from 'react-motion';\nimport stripStyle from 'react-motion/lib/stripStyle';\nimport { buildTransform, positionToProperties } from '../utils/transformHelpers';\nimport shallowEqual from 'shallowequal';\nimport { commonPropTypes, commonDefaultProps } from '../utils/commonProps';\nimport createClassReact from 'create-react-class';\nimport PropTypes from \"prop-types\";\n\n\nexport default createClassReact({\n\n  propTypes: {\n    ...commonPropTypes,\n    springConfig: PropTypes.shape({\n      stiffness: PropTypes.number,\n      damping: PropTypes.number,\n      precision: PropTypes.number\n    })\n  },\n\n  getDefaultProps() {\n    return {\n      ...commonDefaultProps,\n      springConfig: { stiffness: 60, damping: 14, precision: 0.1 }\n    };\n  },\n\n  componentWillMount() {\n    this.setState(this.doLayout(this.props));\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (!shallowEqual(nextProps, this.props)) {\n      this.setState(this.doLayout(nextProps));\n    }\n  },\n\n  doLayout(props) {\n    const items = React.Children.toArray(props.children)\n      .map(element => ({\n        key: element.key,\n        data: {\n          element\n        }\n      }));\n\n    const { positions, gridWidth, gridHeight } =\n      props.layout(items.map(item => ({\n        ...item.data.element.props,\n        key: item.data.element.key\n      })), props);\n\n    const styles = positions.map((position, i) => ({\n      ...items[i],\n      style: {\n        ...items[i].style,\n        zIndex: 2,\n        ...springify(props.entered(items[i].data.element.props,\n          props, { gridWidth, gridHeight }), props.springConfig),\n        ...springify(positionToProperties(position), props.springConfig)\n      }\n    }));\n\n    return { styles, gridWidth, gridHeight };\n  },\n\n  willEnter(transitionStyle) {\n    const { gridWidth, gridHeight } = this.state;\n\n    return {\n      ...stripStyle(transitionStyle.style),\n      zIndex: 1,\n      ...this.props.enter(transitionStyle.data.element.props,\n        this.props, { gridWidth, gridHeight })\n    };\n  },\n\n  willLeave(transitionStyle) {\n    const { gridWidth, gridHeight } = this.state;\n    const exitStyle = this.props.exit(transitionStyle.data.element.props,\n      this.props, { gridWidth, gridHeight });\n\n    return {\n      ...transitionStyle.style,\n      zIndex: 0,\n      ...springify(exitStyle, this.props.springConfig)\n    };\n  },\n\n  render() {\n    const { component, style, perspective, lengthUnit, angleUnit, ...rest } = this.props;\n\n    return (\n      <TransitionMotion\n        styles={this.state.styles}\n        willEnter={this.willEnter}\n        willLeave={this.willLeave}\n      >\n        {interpolatedStyles =>\n          React.createElement(component, {\n            style: {\n              position: 'relative',\n              ...style,\n              width: `${this.state.gridWidth}${lengthUnit}`,\n              height: `${this.state.gridHeight}${lengthUnit}`\n            },\n            ...rest\n          }, interpolatedStyles.map(config => {\n            const { style: { opacity, zIndex }, data } = config;\n\n            const transform = buildTransform(config.style, perspective, {\n              length: lengthUnit, angle: angleUnit\n            });\n\n            return React.cloneElement(data.element, {\n              style: {\n                ...data.element.props.style,\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                zIndex,\n                opacity,\n                transform,\n                WebkitTransform: transform,\n                msTransform: transform\n              }\n            });\n          }))}\n      </TransitionMotion>\n    );\n  }\n\n});\n\nfunction springify(style, springConfig) {\n  return Object.keys(style).reduce((obj, key) => {\n    obj[key] = spring(style[key], springConfig);\n    return obj;\n  }, {});\n}\n","import React from 'react';\nimport enquire from 'enquire.js';\nimport createClassReact from 'create-react-class';\n\nexport default (Grid, { maxWidth, minPadding = 0, defaultColumns = 4 } = {}) =>\n    createClassReact({\n\n    getDefaultProps() {\n      return {\n        minPadding: 0\n      };\n    },\n\n    getInitialState() {\n      return {\n        columns: defaultColumns\n      };\n    },\n\n    componentWillMount() {\n      const { columnWidth, gutterWidth } = this.props;\n      const breakpoints = [];\n      const getWidth = i => i * (columnWidth + gutterWidth) - gutterWidth + minPadding;\n\n      for (let i = 1; getWidth(i) <= maxWidth + columnWidth + gutterWidth; i++) {\n        breakpoints.push(getWidth(i));\n      }\n\n      this.breakpoints = breakpoints\n        .map((width, i, arr) => [\n          'screen',\n          (i > 0 && `(min-width: ${arr[i - 1]}px)`),\n          (i < arr.length - 1 && `(max-width: ${width}px)`)\n        ].filter(Boolean).join(' and '))\n        .map((breakpoint, i) => ({\n          breakpoint,\n          handler: () => this.setState({ columns: i })\n        }));\n\n      this.breakpoints.forEach(({ breakpoint, handler }) =>\n        enquire.register(breakpoint, { match: handler }));\n    },\n\n    componentWillUnmount() {\n      this.breakpoints.forEach(({ breakpoint, handler }) =>\n        enquire.unregister(breakpoint, handler));\n    },\n\n    render() {\n      return <Grid {...this.props} {...this.state} />;\n    }\n\n  });\n","import React from 'react';\nimport imagesLoaded from 'imagesloaded';\nimport partition from 'lodash.partition';\nimport debounce from 'lodash.debounce';\nimport createClassReact from 'create-react-class';\n\nexport default (Grid, { measureImages, background } = {}) => createClassReact({\n\n  getDefaultProps() {\n    return {\n      component: 'span'\n    };\n  },\n\n  getInitialState() {\n    return {\n      rects: {}\n    };\n  },\n\n  componentWillMount() {\n    this._updateRectsDebounced = debounce(this.updateRects, 20);\n    this._rects = {};\n    this._loading = {};\n  },\n\n  componentDidMount() {\n    this.measureElements();\n  },\n\n  componentDidUpdate() {\n    this.measureElements();\n  },\n\n  measureElements() {\n    if (this._elementsToMeasureContainer) {\n      const elements = this._elementsToMeasureContainer.children;\n\n      if (elements.length) {\n        if (measureImages) {\n          Array.from(elements)\n            .filter(el => !this._loading[el.dataset.stonecutterkey])\n            .forEach(el => {\n              this._loading[el.dataset.stonecutterkey] = true;\n\n              imagesLoaded(el, { background }, () => {\n                this._rects[el.dataset.stonecutterkey] = el.getBoundingClientRect();\n                delete this._loading[el.dataset.stonecutterkey];\n\n                this._updateRectsDebounced();\n              });\n            });\n        } else {\n          this._rects = Array.from(elements).reduce((acc, el) => {\n            acc[el.dataset.stonecutterkey] = el.getBoundingClientRect();\n            return acc;\n          }, {});\n\n          this.updateRects();\n        }\n      }\n    }\n  },\n\n  updateRects() {\n    this.setState({\n      rects: {\n        ...this.state.rects,\n        ...this._rects\n      }\n    });\n\n    this._rects = {};\n  },\n\n  render() {\n    const { component } = this.props;\n\n    const [newElements, existingElements] = partition(\n      React.Children.toArray(this.props.children),\n      element => !this.state.rects[element.key]);\n\n    const elementsToMeasure = newElements.map(element =>\n      React.cloneElement(element, {\n        'style': {\n          ...element.props.style,\n          width: this.props.columnWidth\n        },\n        'data-stonecutterkey': element.key\n      })\n    );\n\n    const measuredElements = existingElements.map(element =>\n      React.cloneElement(element, {\n        itemRect: this.state.rects[element.key]\n      })\n    );\n\n    return (\n      <span>\n        {measuredElements.length > 0 &&\n          <Grid\n            {...this.props}\n          >\n            {measuredElements}\n          </Grid>}\n        {elementsToMeasure.length > 0 &&\n          React.createElement(component, {\n            style: {\n              width: 0,\n              height: 0,\n              padding: 0,\n              margin: 0,\n              overflow: 'hidden',\n              visibility: 'hidden'\n            },\n            ref: el => { this._elementsToMeasureContainer = el; }\n          }, elementsToMeasure)}\n      </span>\n    );\n  }\n\n});\n","\nfunction buildRow(columns) {\n  const row = [];\n  for (let i = 0; i < columns; i++) {\n    row.push({\n      filled: false\n    });\n  }\n  return row;\n}\n\nfunction findSuitableRow(rows, shift) {\n  return rows.findIndex(row => {\n    let counter = 0;\n    for (let i = 0, l = row.length; i < l; i++) {\n      if (!row[i].filled) {\n        counter++;\n      }\n      if (counter >= shift) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n\nfunction fillRow(rows, rowNumber, shift) {\n  let counter = 0;\n  // index of the column from which the element starts\n  const startFrom = { index: 0, blocked: false };\n  const row = rows[rowNumber];\n\n  for (let i = 0, r = row.length; i < r; i++) {\n    if (counter < shift && !row[i].filled) {\n      if (!startFrom.blocked) {\n        startFrom.index = i;\n        startFrom.blocked = true;\n      }\n      row[i].filled = true;\n      counter++;\n    }\n    if (counter === shift) {\n      return startFrom.index;\n    }\n  }\n}\n\nexport default function(items, props) {\n  const { columnWidth, itemHeight = 150, columns,\n    gutterWidth, gutterHeight } = props;\n  let index = 0;\n  const rows = [];\n  // build the first row\n  rows.push(buildRow(columns));\n\n  const positions = items.map((itemProps) => {\n    const ratio = itemProps.dataRatio || 1;\n    const shift = index + ratio;\n    let row = findSuitableRow(rows, ratio);\n    if (row === -1) {\n      rows.push(buildRow(columns));\n      row = findSuitableRow(rows, ratio);\n    }\n    const column = fillRow(rows, row, ratio);\n\n    const x = column * columnWidth + column * gutterWidth;\n    const y = row * itemHeight + row * gutterHeight;\n    index = shift;\n\n    return [x, y];\n  });\n\n  const gridWidth = columns * columnWidth + ((columns - 1) * gutterWidth);\n  const gridHeight = rows.length * (itemHeight + gutterHeight) - gutterHeight;\n\n  return { positions, gridWidth, gridHeight };\n}\n","\nexport const enter = () => ({ rotateX: -90, scale: 1, opacity: 1 });\nexport const exit = () => ({ rotateX: -90, scale: 0, opacity: 0 });\nexport const entered = () => ({ rotateX: 0, scale: 1, opacity: 1 });\n","\nconst enterExit = (itemProps, gridProps, gridState) => {\n  const { columns, columnWidth, gutterWidth } = gridProps;\n\n  return {\n    translateX: (columns * columnWidth + (columns - 1) * gutterWidth - columnWidth) / 2,\n    translateY: gridState.gridHeight / 2,\n    scale: 0,\n    opacity: 0\n  };\n};\n\nexport const enter = enterExit;\nexport const exit = enterExit;\n\nexport const entered = () => ({ scale: 1, opacity: 1 });\n","\nexport const enter = () => ({ translateX: -500, opacity: 0 });\n\nexport const exit = (itemProps, gridProps, gridState) => ({\n  translateX: gridState.gridWidth + 500,\n  opacity: 0\n});\n\nexport const entered = () => ({ opacity: 1 });\n","\nconst enterExit = () => ({ translateY: 0, opacity: 0 });\n\nexport const enter = enterExit;\nexport const exit = enterExit;\n\nexport const entered = () => ({ opacity: 1 });\n","\nexport const enterExit = (itemProps, gridProps, gridState) => ({\n  translateY: gridState.gridHeight + 500,\n  opacity: 0\n});\n\nexport const enter = enterExit;\nexport const exit = enterExit;\n\nexport const entered = () => ({ opacity: 1 });\n","\nexport const enter = () => ({\n  scale: 0,\n  opacity: 0,\n  rotate: -720\n});\n\nexport const exit = () => ({ scale: 0, opacity: 0 });\n\nexport const entered = () => ({ scale: 1, opacity: 1, rotate: 0 });\n","\nexport const enter = () => ({\n  skew: 90,\n  rotate: 45,\n  scale: 0,\n  opacity: 0\n});\n\nexport const exit = () => ({\n  skew: -90,\n  rotate: -45,\n  scale: 0,\n  opacity: 0\n});\n\nexport const entered = () => ({\n  skew: 0,\n  rotate: 0,\n  scale: 1,\n  opacity: 1\n});\n","import { default as CSSGrid } from './components/CSSGrid';\nimport { default as SpringGrid } from './components/SpringGrid';\n\nimport { default as makeResponsive } from './higher-order-components/makeResponsive';\nimport { default as measureItems } from './higher-order-components/measureItems';\n\nimport { default as pinterest } from './layouts/pinterest';\nimport { default as simpleLayout } from './layouts/simple';\nimport { default as horizontalLayout } from './layouts/horizontal';\n\nimport * as foldUp from './enter-exit-styles/foldUp';\nimport * as fromCenter from './enter-exit-styles/fromCenter';\nimport * as fromLeftToRight from './enter-exit-styles/fromLeftToRight';\nimport * as fromTop from './enter-exit-styles/fromTop';\nimport * as fromBottom from './enter-exit-styles/fromBottom';\nimport * as newspaper from './enter-exit-styles/newspaper';\nimport * as simpleEnterExit from './enter-exit-styles/simple';\nimport * as skew from './enter-exit-styles/skew';\n\nimport * as easings from './utils/easings';\n\nexport const layout = {\n  horizontal: horizontalLayout,\n  pinterest,\n  simple: simpleLayout\n};\n\nexport const enterExitStyle = {\n  foldUp,\n  fromCenter,\n  fromLeftToRight,\n  fromTop,\n  fromBottom,\n  newspaper,\n  simple: simpleEnterExit,\n  skew\n};\n\nexport {\n  CSSGrid,\n  SpringGrid,\n  measureItems,\n  makeResponsive,\n  easings\n};\n\nexport default {\n  CSSGrid,\n  SpringGrid,\n  measureItems,\n  makeResponsive,\n  easings,\n  layout,\n  enterExitStyle\n};\n","\nexport default function(items, props) {\n  const { columns, columnWidth, gutterWidth, gutterHeight } = props;\n\n  const columnHeights = [];\n  for (let i = 0; i < columns; i++) { columnHeights.push(0); }\n\n  const positions = items.map(itemProps => {\n    const column = columnHeights.indexOf(Math.min.apply(null, columnHeights));\n\n    const height = itemProps.itemHeight || (itemProps.itemRect && itemProps.itemRect.height);\n\n    if (!(height && typeof height === 'number')) {\n      throw new Error('Each child must have an \"itemHeight\" prop or an \"itemRect.height\" prop.');\n    }\n\n    const x = column * columnWidth + column * gutterWidth;\n    const y = columnHeights[column];\n\n    columnHeights[column] += Math.round(height) + gutterHeight;\n\n    return [x, y];\n  });\n\n  const gridWidth = columns * columnWidth + ((columns - 1) * gutterWidth);\n  const gridHeight = Math.max.apply(null, columnHeights) - gutterHeight;\n\n  return { positions, gridWidth, gridHeight };\n}\n","export function randomElements(arr: any[], count: number) {\n    let len = arr.length;\n    let lookup = {};\n    let tmp = [];\n  \n    if (count > len)\n      count = len;\n  \n    for (let i = 0; i < count; i++) {\n      let index;\n      do {\n        index = ~~(Math.random() * len);\n      } while (index in lookup);\n      lookup[index] = null;\n      tmp.push(arr[index]);\n    }\n  \n    return tmp;\n}\n\nexport function mapRange(value: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  return (value - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n}\n\nexport function downloadBlob(content: any, filename: string, contentType: string): void{\n  // Create a blob\n  const blob = new Blob([content], { type: contentType });\n  const url = URL.createObjectURL(blob);\n\n  // Create a link to download it\n  const pom = document.createElement('a');\n  pom.href = url;\n  pom.setAttribute('download', filename);\n  pom.click();\n}\n\n","import \"@css/Waveform.scss\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {useStoreActions, useStoreState} from \"@hooks\";\r\n\r\nimport {Pane} from \"evergreen-ui\";\r\nimport SampleData from \"@classes/SampleData\";\r\nimport classNames from \"classnames\";\r\nimport {mapRange} from '@utils';\r\n\r\nconst Waveform = ({sampleData, sampleProgress}: {sampleProgress: number, sampleData:SampleData}): JSX.Element =>{\r\n  // useEffect(()=>{\r\n  //   console.log(path);\r\n  // })\r\nconst imgStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n} as React.CSSProperties\r\nconst [hovered, setHovered] = useState(false)\r\nconst {length, svgPath} = sampleData\r\n\r\nconst createViewBox= (length: number):string =>{\r\n  return `0 0 ${mapRange(length, 0, 3, 0, 400)} 100.0`\r\n}\r\n\r\nconst containerClass = classNames(\"waveform-container\", {\r\n  \"popup-3d\": hovered,\r\n  // \"popdown-3d\": !hovered,\r\n});\r\nconst playHeadWidth = 10; \r\nconst boxWidth = mapRange(length, 0, 3, 0, 400);\r\nconst playheadPosition = mapRange(sampleProgress, 0, 1, 0, boxWidth+playHeadWidth )\r\nconst strokeWidth = 0;\r\nconst maskId = `playHeadMask_${sampleData.length}`\r\nconst pathRef = `url(#${maskId})`\r\n\r\nconsole.log(maskId);\r\nconsole.log(pathRef);\r\n  return(\r\n    <div className ={containerClass} onMouseEnter = {(e)=>{setHovered(true)}} onMouseLeave = {(e)=>{setHovered(false)}}>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox={createViewBox(length)} style = {{width: \"fit-content\", height: 90}}>\r\n      {/* <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400.0 100.0\" style = {{width: \"fit-content\", height: 90}}> */}\r\n      <defs>\r\n        <linearGradient   x1='.258%' y1='49.75%' x2='101.258%' y2='49.75%' id='bgGradient' > \r\n              <stop offset='20.525%'  stop-color='#3023AE'  />\r\n              <stop offset='47.525%' stop-color='#53A0FD'  /> \r\n              {/* <stop offset='100%' stop-color='#B4EC51'  />  */}\r\n        </linearGradient>\r\n        <clipPath id={maskId}>\r\n           <path d={svgPath}/>\r\n        </clipPath>\r\n        <filter id=\"blur\">\r\n        <feGaussianBlur stdDeviation=\"2\" />\r\n        </filter>\r\n      </defs>\r\n        <g transform={\"translate(0 50)\"}>  \r\n          <path d={svgPath} stroke = {\"red\"} fill = {\"url(#bgGradient)\"} strokeWidth ={strokeWidth}/>\r\n          <rect filter = \"url(#blur)\" x = {playheadPosition-playHeadWidth} y ={-100} id = \"playhead\" width ={playHeadWidth} fill = {\"white\"} height={400} clipPath={pathRef}></rect> \r\n        </g>\r\n      </svg>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Waveform\r\n\r\n","import \"./Sample.scss\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Sound, {ReactSoundProps} from 'react-sound';\r\nimport {useStoreActions, useStoreState} from \"@hooks\";\r\n\r\nimport ReactPlayer from 'react-player'\r\nimport SampleData from \"@classes/SampleData\";\r\nimport Waveform from \"./Waveform\";\r\nimport { mapRange } from \"@utils\";\r\n\r\ninterface SampleProperties{\r\n  sampleData: SampleData\r\n  url?: string\r\n  label?: string\r\n}\r\n\r\nconst Sample = ({sampleData, url, label}: SampleProperties): JSX.Element =>{\r\n\r\nconst [sampleProgress, setSampleProgress] = useState(0.0)\r\nfunction statusLabel(status: ReactSoundProps['playStatus']): string {\r\n    switch(status) {\r\n      case 'STOPPED':\r\n        return 'PLAY';\r\n      case 'PLAYING':\r\n        return 'STOP';\r\n      default:\r\n        return 'STOP';\r\n    }\r\n  }\r\nconst [playing, setPlaying] = useState(false)\r\n  return(\r\n    <div onClick = {(e)=>{setPlaying(!playing)}} className = {\"sample-container\"}>\r\n      {/* <SampleDebug sampleData= {sampleData}/> */}\r\n      {/* {label} */}\r\n      {/* <NewPlayHead sampleData= {sampleData} distance={sampleProgress}/> */}\r\n      <PlayHead distance={sampleProgress}/>\r\n      <ReactPlayer\r\n      playing= {playing}\r\n      width = {10}\r\n      height = {10}\r\n      progressInterval ={1}\r\n      onProgress = {({played, playedSeconds, loaded, loadedSeconds})=>{\r\n      setSampleProgress(played)\r\n    }}\r\n      url={sampleData.src} />\r\n      \r\n      <Waveform sampleData= {sampleData} sampleProgress = {sampleProgress}></Waveform>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst SampleDebug = ({sampleData}:{sampleData: SampleData}): JSX.Element =>{\r\n  const debugStyle = {\r\n      position: \"absolute\",\r\n      top: 0, \r\n      left: 0,\r\n      display: \"flex\",\r\n      \r\n  } as React.CSSProperties\r\n  const {length, id, tags, filename, composition} = sampleData\r\n  \r\n  return(\r\n    <ul style = {debugStyle}>\r\n      <li>{length}</li>\r\n      <li>{filename}</li>\r\n      <li>{composition}</li>\r\n      <li>{tags}</li>\r\n      <li>{id}</li>\r\n    </ul>\r\n  )\r\n}\r\n\r\n\r\nconst PlayHead = ({distance}:{distance: number}): JSX.Element =>{\r\n  const playHeadStyle = {\r\n    position: \"absolute\",\r\n    left: `${distance*100}%`,\r\n    width: 2,\r\n    height: \"100%\",\r\n    // backgroundColor: \"red\",\r\n  } as React.CSSProperties\r\n\r\n  return( \r\n    \r\n    <div style = {playHeadStyle}>\r\n      {distance}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst NewPlayHead = ({sampleData, distance}:{sampleData: SampleData, distance: number}): JSX.Element =>{\r\n  const {length, svgPath} = sampleData\r\n\r\n  const createViewBox= (length: number):string =>{\r\n    return `0 0 ${mapRange(length, 0, 3, 0, 400)} 100.0`\r\n  }\r\n\r\n  const playHeadStyle = {\r\n    position: \"absolute\",\r\n    // left: `${distance*100}%`,\r\n    // width: 2,\r\n    height: \"100%\",\r\n    // backgroundColor: \"red\",\r\n  } as React.CSSProperties\r\n  const strokeWidth = 0;\r\n  \r\n  return( \r\n    \r\n    <div style = {playHeadStyle}>\r\n      <div className = \"playhead-container\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox={createViewBox(length)} style = {{width: \"fit-content\", height: 90}}>\r\n      {/* <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400.0 100.0\" style = {{width: \"fit-content\", height: 90}}> */}\r\n        <defs>\r\n        <clipPath id=\"myClip\">\r\n          <path d={svgPath} stroke = {\"red\"} fill = {\"url(#bgGradient)\"} strokeWidth ={strokeWidth}/>\r\n        </clipPath>\r\n      </defs>\r\n        <g fill=\"#61DAFB\"   transform={\"translate(0 50)\"} clipPath=\"url(#myClip)\">  \r\n          <rect x = {distance*100} id = \"playhead\" width ={100} fill = {\"green\"} height={100}></rect> \r\n        </g>\r\n\r\n      </svg>\r\n\r\n    </div>\r\n      {distance}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Sample\r\n\r\n","import { Draggable, DraggableProps } from \"react-beautiful-dnd\";\r\nimport React, { FC, ReactNode } from \"react\";\r\n\r\nimport { DropCategory } from \"@enums\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactTable from \"react-table\";\r\n\r\ninterface IXDrag extends Omit<DraggableProps, \"children\"> {\r\n  dndType: DropCategory;\r\n  className?: string;\r\n  children: ReactNode;\r\n  dragAll?: boolean;\r\n}\r\n\r\n/**\r\n * A draggable table row.\r\n * @param param0\r\n * @returns\r\n */\r\nconst XDrag: FC<IXDrag> = ({\r\n  dndType,\r\n  className,\r\n  children,\r\n  dragAll,\r\n  ...properties\r\n}) => {\r\n  console.log(React.isValidElement(children));\r\n  // console.log(props);\r\n  if (!React.isValidElement(children)) return <div />;\r\n  // const child = React.memo(children, []);\r\n  return (\r\n    <Draggable {...properties} disableInteractiveElementBlocking = {true} shouldRespectForcePress ={true}>\r\n    {/* <Draggable {...properties} disableInteractiveElementBlocking = {true} shouldRespectForcePress ={true}> */}\r\n      {(provided, snapshot) => {\r\n        const dragHandleProperties = dragAll ? provided.dragHandleProps : {};\r\n        if (snapshot.isDragging) {\r\n          return ReactDOM.createPortal(          <>\r\n            <div\r\n              className={className}\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...dragHandleProperties}\r\n            >\r\n              {React.cloneElement(children, { provided })}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: snapshot.isDragging ? \"block\" : \"none\",\r\n                backgroundColor: snapshot.isDragging ? \"green\" : \"none\",\r\n              }}\r\n            >\r\n              {React.cloneElement(children, { provided })}\r\n            </div>\r\n          </>, document.body);\r\n        }\r\n        return (\r\n          <>\r\n            <div\r\n              className={className}\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...dragHandleProperties}\r\n            >\r\n              {React.cloneElement(children, { provided })}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: snapshot.isDragging ? \"block\" : \"none\",\r\n                backgroundColor: snapshot.isDragging ? \"green\" : \"none\",\r\n              }}\r\n            >\r\n              {React.cloneElement(children, { provided })}\r\n            </div>\r\n          </>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nXDrag.defaultProps = {\r\n  dragAll: true,\r\n};\r\n\r\nexport default React.memo(XDrag);\r\n","enum IFrameLoadError {\r\n  CROSS_ORIGIN = \"CROSS_ORIGIN\",\r\n}\r\n\r\nenum IFrameLoadWarning {\r\n  MALFORMED_URL = \"MALFORMED_URL\",\r\n}\r\n\r\nclass IFrameValidator {\r\n  url!: string;\r\n  errors!: IFrameLoadError[];\r\n  warnings!: IFrameLoadWarning[];\r\n  constructor(url: string) {\r\n    this.errors = [];\r\n    this.warnings = [];\r\n    this.url = url;\r\n  }\r\n  validate(event: React.SyntheticEvent<HTMLIFrameElement, Event>): void {\r\n    const xoCheckArray = checkForXO(event);\r\n    console.log(xoCheckArray);\r\n    this.errors.push(...xoCheckArray);\r\n    console.log(this.errors);\r\n    const malformedUrlCheckArray = validURL(this.url);\r\n    this.warnings.push(...malformedUrlCheckArray);\r\n    console.log(malformedUrlCheckArray);\r\n  }\r\n  isValid(): boolean {\r\n    return this.errors.length == 0;\r\n  }\r\n  errorMessages(): string[] {\r\n    let errors: string[] = [];\r\n    this.errors.map((e) => {\r\n      switch (e) {\r\n        case IFrameLoadError.CROSS_ORIGIN:\r\n          errors.push(\r\n            `Blocked a frame with origin ${this.url}; from accessing a cross-origin frame.`\r\n          );\r\n          break;\r\n        default:\r\n          console.log(\"error did not match an error enum\");\r\n      }\r\n    });\r\n    return errors;\r\n  }\r\n}\r\n\r\nexport default IFrameValidator;\r\n\r\nfunction checkForXO(\r\n  event: React.SyntheticEvent<HTMLIFrameElement, Event>\r\n): IFrameLoadError[] {\r\n  let errorsArray: IFrameLoadError[] = [];\r\n  const test = event.target as HTMLIFrameElement;\r\n//   console.log(test.contentDocument);\r\n//   console.log(test.contentWindow);\r\n  try { \r\n      \r\n    test.contentWindow?.name;\r\n  } catch (e) {\r\n    if (e.message.includes(\"cross-origin\")) {\r\n      console.log(e.message);\r\n      errorsArray.push(IFrameLoadError.CROSS_ORIGIN);\r\n    } else return [];\r\n  }\r\n  return errorsArray;\r\n}\r\n\r\nfunction validURL(str: string): IFrameLoadWarning[] {\r\n  let warningsArray = [];\r\n  const pattern = new RegExp(\r\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\r\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\r\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\r\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n    \"i\"\r\n  ); // fragment locator\r\n  if (!pattern.test(str)) {\r\n    warningsArray.push(IFrameLoadWarning.MALFORMED_URL);\r\n  }\r\n  return warningsArray;\r\n}\r\n","import { DragSource, DropCategory } from '@enums';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {useStoreActions, useStoreState} from \"@hooks\";\r\n\r\nimport IXDrop from \"@components/IXDrop\";\r\nimport {Pane} from \"evergreen-ui\";\r\nimport Sample from \"./Sample\";\r\nimport SampleData from \"@classes/SampleData\";\r\nimport XDrag from \"@components/XDrag\";\r\nimport classNames from \"classnames\";\r\n\r\nconst DraggableSample = ({sampleData, droppableId, draggableId, index}: {sampleData: SampleData, droppableId: string, draggableId: string, index: number}): JSX.Element =>{\r\n  return(\r\n    <XDrag index= {index} draggableId = {draggableId} dndType= {DropCategory.SampleTraySample}>\r\n      <Sample sampleData = {sampleData} label= {draggableId}/>\r\n    </XDrag>\r\n  )\r\n}\r\n\r\nexport default React.memo(DraggableSample)\r\n\r\n","import React from 'react';\nimport isEqualWith from 'lodash.isequalwith';\nimport reactBrickwork, { SpringGrid, CSSGrid,\n  makeResponsive, measureItems } from './react-stonecutter';\n\n//test\nexport default class Grid extends React.Component {\n\n  componentWillMount() {\n    let Grid = CSSGrid;\n\n    Grid = measureItems(Grid);\n\n  //   Grid = makeResponsive(measureItems(Grid), {\n  //     // maxWidth: 1920,\n  //     // minPadding: 100\n  // });\n    Grid = makeResponsive(Grid);\n    this.setState({ Grid })\n    this.createGrid(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!isEqualWith(nextProps, this.props, (a, b, key) => {\n      if (key === 'children') return true;\n    })) {\n      this.createGrid(nextProps);\n    }\n  }\n  \n\n  createGrid({ useCSS, measured, responsive }) {\n    let Grid = useCSS ? CSSGrid : SpringGrid;\n\n    if (measured) {\n      Grid = measureItems(Grid);\n    }\n\n    if (responsive) {\n      Grid = makeResponsive(Grid, {\n        maxWidth: 1920,\n        minPadding: 100\n      });\n    }\n\n    this.setState({ Grid });\n  }\n\n  render() {\n    const { children, useCSS, responsive, layout, enterExitStyle,\n      duration, easing, stiffness, damping, gutters, columnWidth, columns, ...rest } = this.props;\n    const { Grid } = this.state;\n    const gridLayout = reactBrickwork.layout[layout];\n    const gridEnterExitStyle = reactBrickwork.enterExitStyle[enterExitStyle];\n\n\n    return (\n      <Grid\n        {...rest}\n        className=\"grid\"\n        component=\"ul\"\n        columns={9}\n        columnWidth={columnWidth}\n        gutterWidth={gutters}\n        gutterHeight={gutters}\n        layout={gridLayout}\n        enter={gridEnterExitStyle.enter}\n        entered={gridEnterExitStyle.entered}\n        exit={gridEnterExitStyle.exit}\n        perspective={1000}\n        duration = {200}\n        duration={useCSS ? duration : null}\n        easing={useCSS ? easing : null}\n        springConfig={!useCSS && stiffness && damping ?\n          { stiffness, damping } : null}\n      >\n        {children}\n      </Grid>\n    );\n  }\n\n};\n","import \"@css/react-grid-layout.css\";\r\nimport \"@css/react-resizable.css\";\r\nimport \"@css/SampleLayout.scss\";\r\nimport \"./react-stonecutter/\"\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  SpringGrid,\r\n  layout,\r\n  makeResponsive,\r\n  measureItems,\r\n} from \"./react-stonecutter\";\r\nimport { useArray, useStoreActions, useStoreState } from \"@hooks\";\r\n\r\nimport {Direction} from 'react-beautiful-dnd';\r\nimport DraggableSample from \"../Sample/DraggableSample\";\r\nimport { DropCategory } from \"@enums\";\r\nimport Grid from './Grid';\r\nimport IXDrop from \"@components/IXDrop\";\r\nimport Sample from \"../Sample/Sample\";\r\nimport SampleData from \"@classes/SampleData\";\r\nimport {cubicOut} from './easings';\r\nimport { mapRange } from \"@utils\";\r\nimport { sample } from \"lodash\";\r\nimport { string } from \"prop-types\";\r\nimport tags from \"@static/tags\";\r\n\r\nconst springGridOptions = { stiffness: 170, damping: 26 };\r\n\r\ninterface SampleLayoutProperties {\r\n  activeTags: string[];\r\n}\r\nconst gridProps = {};\r\nconst SampleLayout = ({ activeTags }: SampleLayoutProperties): JSX.Element => {\r\n  const samples = useStoreState((state) => state.samplesModel.samples);\r\n  const [activeSamples, setActiveSamples] = useState(samples);\r\n  \r\n  const widths = [1, 2, 3]; // this is width ratio\r\n\r\n  const enterExitStyles = ['Simple', 'Skew', 'Newspaper',\r\n    'Fold Up', 'From Center', 'From Left to Right', 'From Top', 'From Bottom'];\r\n  const gutters = 5;\r\n  const columnWidth = 15;\r\n\r\n  const itemHeight = 100;\r\n  const gridProps = {\r\n    // data: data,\r\n    useCSS: false,\r\n    responsive: true,\r\n    layout: \"horizontal\",\r\n    enterExitStyle: \"simple\",\r\n    duration: 400,\r\n    stiffness: 60,\r\n    damping: 14,\r\n    columns: 20,\r\n    gutters: gutters,\r\n    easing: cubicOut,\r\n    columnWidth: columnWidth,\r\n  }\r\n\r\n  const droppableProps = {\r\n    isDropDisable: true,\r\n    dropCategory: DropCategory.SampleTraySample,\r\n    droppableId: \"Sample Tray\",\r\n    // isCombineEnabled: false,\r\n    direction: \"horizontal\" as Direction,\r\n    isCombineOnly: true, \r\n    disabled: true, \r\n    \r\n  }\r\n  \r\n  useEffect(() => {\r\n    console.log(\"using effect in samplelayout after tag change\");\r\n    console.log(activeTags);\r\n    if (activeTags.length > 0){\r\n      const func = (c: SampleData) => {\r\n        hasActiveTags(activeTags, c)\r\n      };\r\n      // const active = samples.filter((s)=>func(s))\r\n      const active = samples.filter((sample)=>{\r\n        if (sample.tags) {\r\n          console.log(activeTags);\r\n          // console.log(sample.tags);\r\n          // for (const s of sample.tags) {\r\n            if (activeTags.every(t=>sample.tags.includes(t))){\r\n              return true\r\n            }\r\n            // if (activeTags.includes(s)) {\r\n            //   return true;\r\n            // }\r\n          // }\r\n        }\r\n        return false;\r\n      }\r\n      )\r\n      console.log(active);\r\n      setActiveSamples(active)\r\n      console.log(activeSamples);\r\n    } else {\r\n      setActiveSamples(samples)\r\n    }\r\n  }, [activeTags]);\r\n\r\n  useEffect(()=>{\r\n    setActiveSamples(samples);\r\n  },[samples]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <IXDrop\r\n    {...droppableProps}\r\n    >\r\n      <Grid\r\n      {...gridProps}\r\n      itemHeight={itemHeight}\r\n      measured={true}\r\n      >\r\n        {activeSamples\r\n          .map(function(sD, index){\r\n\r\n            // const widthRatio = 2;\r\n            // const widthRatio = getSampleWidth(sD)\r\n            const widthRatio = getSampleWidth2(sD)\r\n            // console.log();\r\n            return (\r\n              <li\r\n              className=\"grid-item\"\r\n              key={index}\r\n              //allow for custom prop on li\r\n              //@ts-ignore\r\n              dataRatio={widthRatio}\r\n              style={{\r\n                width: widthRatio * columnWidth +  gutters * (widthRatio - 1),\r\n                height: itemHeight,\r\n                // backgroundColor: \"blue\"\r\n              }}\r\n            >\r\n              <div key={sD.id} className={\"layout-grid-item\"}>\r\n                <DraggableSample\r\n                  key={sD.id}\r\n                  sampleData={sD}\r\n                  index={index}\r\n                  droppableId={index + \"_drop\"}\r\n                  draggableId={index + \"_drag\"}\r\n                />\r\n              </div>\r\n              </li>\r\n            )\r\n          })}\r\n      </Grid>\r\n    </IXDrop>\r\n  );\r\n};\r\n\r\nexport default SampleLayout;\r\n\r\n\r\nconst hasActiveTags = (tags: string[], sample: SampleData): boolean =>{\r\n  if (sample.tags) {\r\n    for (const s of sample.tags) {\r\n      if (tags.includes(s)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\nconst getSampleWidth = (sample: SampleData): number =>{\r\n  const {length} = sample\r\n  if (length > 2.5) {\r\n    return 3\r\n  }\r\n  // if (length > 2) {\r\n  //   return 2\r\n  // }\r\n  if (length > 1.0) {\r\n    return 2\r\n  }\r\n  if (length > .5) {\r\n    return 1\r\n  }\r\n  if (length > .25) {\r\n    return 1\r\n  }\r\n  return 1  \r\n}\r\nconst getSampleWidth2 = (sample: SampleData): number =>{\r\n  const mapped = mapRange(sample.length, 0, 4.0, 5,9)\r\n  const rounded = Math.round(mapped)\r\n  // console.log(rounded);\r\n  // console.log(mapped);\r\n  return rounded\r\n  // return 1\r\n}\r\n\r\ninterface MyInterface{ \r\n  prop1: string; \r\n  prop2: string;\r\n  prop3: string\r\n}\r\n","export const quadIn     = 'cubic-bezier(0.55, 0.085, 0.68, 0.53)';\r\nexport const quadOut    = 'cubic-bezier(0.25, 0.46, 0.45, 0.94)';\r\nexport const quadInOut  = 'cubic-bezier(0.455, 0.03, 0.515, 0.955)';\r\nexport const cubicIn    = 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';\r\nexport const cubicOut   = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\r\nexport const cubicInOut = 'cubic-bezier(0.645, 0.045, 0.355, 1)';\r\nexport const quartIn    = 'cubic-bezier(0.895, 0.03, 0.685, 0.22)';\r\nexport const quartOut   = 'cubic-bezier(0.165, 0.84, 0.44, 1)';\r\nexport const quartInOut = 'cubic-bezier(0.77, 0, 0.175, 1)';\r\nexport const quintIn    = 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';\r\nexport const quintOut   = 'cubic-bezier(0.23, 1, 0.32, 1)';\r\nexport const quintInOut = 'cubic-bezier(0.86, 0, 0.07, 1)';\r\nexport const sineIn     = 'cubic-bezier(0.47, 0, 0.745, 0.715)';\r\nexport const sineOut    = 'cubic-bezier(0.39, 0.575, 0.565, 1)';\r\nexport const sineInOut  = 'cubic-bezier(0.445, 0.05, 0.55, 0.95)';\r\nexport const expoIn     = 'cubic-bezier(0.95, 0.05, 0.795, 0.035)';\r\nexport const expoOut    = 'cubic-bezier(0.19, 1, 0.22, 1)';\r\nexport const expoInOut  = 'cubic-bezier(1, 0, 0, 1)';\r\nexport const circIn     = 'cubic-bezier(0.6, 0.04, 0.98, 0.335)';\r\nexport const circOut    = 'cubic-bezier(0.075, 0.82, 0.165, 1)';\r\nexport const circInOut  = 'cubic-bezier(0.785, 0.135, 0.15, 0.86)';\r\nexport const backIn     = 'cubic-bezier(0.6, -0.28, 0.735, 0.045)';\r\nexport const backOut    = 'cubic-bezier(0.175, 0.885, 0.32, 1.275)';\r\nexport const backInOut  = 'cubic-bezier(0.68, -0.55, 0.265, 1.55)';","import { Button, TagInput } from \"evergreen-ui\";\r\nimport { Heading, Text } from \"evergreen-ui\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"@hooks\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport Section from \"./Section\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface TagProperties {\r\n  tag: string;\r\n  onMouseUp: (id: string) => void;\r\n  active: boolean;\r\n  \r\n}\r\n\r\nconst Tag = ({ tag, onMouseUp, active }: TagProperties): JSX.Element => {\r\n  const fullTagName = tagToFull(tag);\r\n  console.log(tag);\r\n  console.log(fullTagName);\r\n\r\n  const buttonStyle = {\r\n      height: 20,\r\n      width: \"fit-content\",\r\n      // backgroundColor: active?\"orange\":tagToColor(tag),\r\n      backgroundColor: active?\"orange\":\"grey\",\r\n      borderRadius: 4,\r\n      lineHeight: 1.2,\r\n      fontWeight: 400,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n  } as React.CSSProperties\r\n\r\n  \r\n  return (\r\n    <div\r\n    onMouseUp={(e) => {\r\n      console.log(\"got mouseup\");\r\n      onMouseUp(tag);\r\n    }}\r\n    style={{ paddingRight: \".5em\",\r\n    // backgroundColor: tagToColor(tag)dff\r\n  }}\r\n  >\r\n    <Popup\r\n      trigger={(open) => (\r\n        <button style = {buttonStyle}>{tagToFull(tag)}</button>\r\n      )}\r\n      on=\"hover\"\r\n      position=\"top center\"\r\n      closeOnDocumentClick\r\n    >\r\n      <PopupWindow tag={tag} />\r\n    </Popup>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tagToFull = (tag: string): string => {\r\n  let fullName = \"\";\r\n  switch (tag) {\r\n    case \"FD\":\r\n      fullName = \"Folk Dance\";\r\n      break;\r\n    case \"MR\":\r\n      fullName = \"Medium Register\";\r\n      break;\r\n    case \"HR\":\r\n      fullName = \"High Register\";\r\n      break;\r\n    case \"ST\":\r\n      fullName = \"Short Tone\";\r\n      break;\r\n    case \"LT\":\r\n      fullName = \"Long Tone\";\r\n      break;\r\n    case \"LR\":\r\n      fullName = \"Lower Register\";\r\n      break;\r\n    case \"M\":\r\n      fullName = \"Melancholy\";\r\n      break;\r\n    case \"E\":\r\n      fullName = \"Ethereal\";\r\n      break;\r\n    case \"LR\":\r\n      fullName = \"Lower Register\";\r\n      break;\r\n    case \"MIX\":\r\n      fullName = \"Mixed Tone\";\r\n      break;\r\n    case \"C\":\r\n      fullName = \"Chord\"\r\n      break; \r\n    default:\r\n      fullName = tag;\r\n  }\r\n  return fullName;\r\n};\r\nconst tagToColor = (tag: string): string => {\r\n  let color = \"\";\r\n  switch (tag) {\r\n    case \"FD\":\r\n      color = \"rgb(18,62,73);\";\r\n      break;\r\n    case \"MR\":\r\n      color = \"rgb(113,153,155);\";\r\n      break;\r\n    case \"HR\":\r\n      color = \"rgb(119,140,223)\";\r\n      break;\r\n    case \"ST\":\r\n      color = \"rgb(244,225,240)\";\r\n      break;\r\n    case \"LT\":\r\n      color = \"rgb(249,138,107)\";\r\n      break;\r\n    case \"LR\":\r\n      color = \"rgb(211,27,54)\";\r\n      break;\r\n    case \"M\":\r\n      color = \"rgb(98,26,50)\";\r\n      break;\r\n    case \"E\":\r\n      color = \"rgb(18,62,73)\";\r\n      break;\r\n    case \"LR\":\r\n      color = \"rgb(113,153,155)\";\r\n      break;\r\n    case \"MIX\":\r\n      color = \"rgb(113,153,155)\";\r\n      break;\r\n    case \"C\":\r\n      color = \"rgb(113,153,155)\"\r\n      break; \r\n    default:\r\n      color = tag;\r\n  }\r\n  return color;\r\n};\r\n\r\nconst PopupWindow = ({ tag }: { tag: string }): JSX.Element => {\r\n  const popupStyle = {\r\n    height: 200,\r\n    width: 400,\r\n    boxShadow: \"-1px 15px 30px -12px black\",\r\n    backgroundColor:\r\n      \"linear-gradient(to bottom, rgba(140,122,122,1) 0%, rgba(175,135,124,1) 65%, rgba(175,135,124,1) 100%) fixed;\",\r\n  };\r\n  return (\r\n    <div style={popupStyle}>\r\n      <Section column={true} padding={\"2em\"} backgroundColor =\"red\">\r\n        <Heading size={500}>{tagToFull(tag)}</Heading>\r\n        <Text>\r\n        Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n          since the 1500s, when an unknown printer took a galley of type and\r\n          scrambled it to make a type specimen book.\r\n        </Text>\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tag;\r\n\r\n\r\n","type SampleTag = \"short\" |\"long\" | \"fast\" | \"upbeat\" | \"intense\" | \"dramatic\" |\"chaotic\"\r\n\r\nconst tags = [\"FD\", \"MR\", \"HR\", \"ST\", \"LT\", \"MIX\", \"LR\", \"E\", \"M\", \"3L\", \"2L\", \"1L\", \"4L\", \"FL\", \"C\"]\r\nexport default tags;\r\n\r\n\r\n// AIzaSyBo7S3o_RHuyBnG3Z7ywlvz3FbtKU9n0MQ","import \"./TagBar.scss\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"@hooks\";\r\n\r\nimport { Actions } from \"easy-peasy\";\r\nimport { Pane } from \"evergreen-ui\";\r\nimport { SampleTrayModel } from \"../SampleTray\";\r\nimport Tag from \"@components/UI/Tag\";\r\nimport classNames from \"classnames\";\r\nimport tags from \"@static/tags\";\r\n\r\ninterface TagBarProperties {\r\n  actions: Actions<SampleTrayModel>;\r\n  tagsState: string[];\r\n  onTagClick?: (id: string) => void;\r\n}\r\n\r\nconst TagBar = ({\r\n  onTagClick,\r\n  tagsState,\r\n  actions,\r\n}: TagBarProperties): JSX.Element => {\r\n  \r\n  const [active, setActive] = useState(false)\r\n\r\n  const handleTagClick = (tag:string) =>{\r\n    console.log(tags);\r\n    if (tagsState.includes(tag)){\r\n      actions.removeTag(tag)\r\n      setActive(false)\r\n    } else {\r\n      actions.addTag(tag)\r\n      setActive(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={\"tag-bar-container\"}>\r\n      {tags.map((t, i) => (\r\n        <Tag\r\n          onMouseUp={t=>{handleTagClick(t)}}\r\n          key={i}\r\n          tag={t}\r\n          active= {tagsState.includes(t)}\r\n        ></Tag>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagBar;\r\n","import \"@css/SampleTray.scss\";\r\n\r\nimport { Action, Thunk, ThunkOn, action, thunk, thunkOn, useLocalStore } from 'easy-peasy';\r\nimport React, { FC, useEffect, useRef, useState } from \"react\";\r\n\r\nimport CloseButton from \"./CloseButton/CloseButton\";\r\nimport Heading from \"@components/UI/Heading\";\r\nimport IconButton from \"@components/UI/IconButton\";\r\nimport OverlayScrollbars from 'overlayscrollbars';\r\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\r\nimport { Pane } from \"evergreen-ui\";\r\nimport Sample from \"./Sample/Sample\";\r\nimport SampleLayout from \"./SampleLayout/SampleLayout\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\nimport Section from \"../UI/Section\";\r\nimport TagBar from \"./TagBar/TagBar\";\r\nimport classNames from \"classnames\";\r\nimport { useArray } from \"@hooks\"\r\nimport {useKeyboardShortcut} from \"crooks\";\r\nimport {useToggle} from \"@hooks\";\r\n\r\n// import {useToggle} from \"@withvoid/melting-pot\"\r\n\r\n\r\nexport interface SampleTrayModel{\r\n  tags: string[]\r\n  addTag: Action<SampleTrayModel, string>\r\n  removeTag: Action<SampleTrayModel, string>\r\n}\r\n\r\n\r\n\r\nconst SampleTray = (): JSX.Element => {\r\n  const [value, toggleValue] = useToggle(false)\r\n  \r\n  const [state, actions] = useLocalStore<SampleTrayModel>(() => ({\r\n    tags: [] as string[],\r\n    addTag: action((_state, tag) => {\r\n      _state.tags.push(tag);\r\n    }),\r\n    removeTag: action((_state, tag) => {\r\n      _state.tags = _state.tags.filter((t: string)=>t !== tag);\r\n    }),\r\n  }));\r\n\r\n  \r\n  const submit = () =>{\r\n    console.log(\"doing submit\");\r\n    toggleValue()\r\n  }\r\n  const osComponentRef1 = React.createRef<OverlayScrollbarsComponent>();\r\n  \r\n  const sampleTrayClass = classNames(\"sample-tray-container\", {\r\n    \"sample-tray-hidden\": value,\r\n  });\r\n\r\n  const containerRef= useRef<HTMLDivElement|undefined>();\r\n  const [tagFilter, setTagFilter] = useState(\"none\")\r\n\r\n  useEffect(()=>{\r\n    console.log(`setting tray filter to ${tagFilter}`);\r\n    // console.log(tagFilter);\r\n  },[tagFilter]);\r\n\r\n  const {enable, disable} = useKeyboardShortcut({\r\n    keyCode: 70, //f\r\n    action: submit,\r\n    disabled: false // This key is not required\r\n  })\r\n\r\n  return (\r\n      <Section\r\n      className={sampleTrayClass}>\r\n        <CloseButton onMouseUp= {toggleValue}/>\r\n          <Section column = {true} backgroundColor = \"white\" className = {\"sample-tray-inner-container\"}>\r\n            <Heading>\r\n              <TagBar tagsState = {state.tags} actions = {actions} onTagClick= {(id: string)=>{setTagFilter(id)}}/>\r\n            </Heading>\r\n            <Scrollbars style={{ width: \"100%\", height: 400 }}>\r\n            <SampleLayout activeTags = {state.tags}/>\r\n            </Scrollbars>\r\n        </Section>\r\n      </Section>\r\n  );\r\n};\r\n\r\nexport default SampleTray;\r\n","import '@css/App.css';\n\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport React, {useEffect, useState} from 'react';\nimport {useStoreActions, useStoreState} from \"@hooks\";\n\nimport { DragSource } from '@enums';\nimport Editor from '@components/Editor/Editor';\nimport SampleTray from \"./components/SampleTray/SampleTray\";\nimport { actions } from 'react-table';\nimport {useKeyboardShortcut} from \"crooks\";\n\nconst App = (): JSX.Element =>{\n  const fetchCardDataGoogleSheetThunk = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchAppGoogleSheet\n  );\n  const processCompositions = useStoreActions((actions)=>actions.compositionsModel.processCompositions)\n  const fetchCompositionSheet = useStoreActions((actions)=>actions.googleSheetsModel.fetchCompositionsSheet)\n  const fetchSamples = useStoreActions((actions)=>actions.googleSheetsModel.fetchSamplesSheet)\n\n  useEffect(() => {\n    fetchCardDataGoogleSheetThunk();\n    processCompositions();\n    fetchCompositionSheet();\n    fetchSamples();\n  }, [fetchCardDataGoogleSheetThunk]);\n\n  return (\n    <DragDropContext\n    onBeforeDragStart={(e) => {\n      console.log(e);\n      const { source } = e;\n    }}\n    onDragEnd={onDragEnd}\n  >\n    <div className=\"App\">\n        <Editor/>\n        <SampleTray/>\n    </div>\n    </DragDropContext>\n  );\n}\n\nconst onDragEnd = (response: DropResult) => {\n  console.log(response);\n  if (response.destination?.droppableId == response.source?.droppableId)\n    return;\n  const { source, destination, draggableId } = response;\n  console.log(source, destination, draggableId);\n  console.log(\n    `dragged from ${draggableId} to ${\n      destination?.droppableId\n    } current title: ${\"yes\"}`\n  );\n\n  if (!destination) return;\n};\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import type RawCardRow from \"@interfaces/RawCardRow\";\r\nimport { InteractionType } from \"@enums\";\r\nimport IFrameValidator from \"../IFrameValidator\";\r\nexport default class CardData {\r\n  readonly src: string;\r\n  readonly title: string;\r\n  readonly added?: Date;\r\n  readonly sourceId: string;\r\n  readonly author: string;\r\n  readonly interaction: InteractionType;\r\n  // error: undefined | \r\n  validator!: IFrameValidator;\r\n  isActive!: boolean;\r\n  failed!: boolean;\r\n  // instanceId!: string;\r\n\r\n  constructor(row: RawCardRow) {\r\n    this.src = row.src;\r\n    this.title = row.title;\r\n    this.added = new Date(row.added);\r\n    this.sourceId = row.src;\r\n    this.author = row.author;\r\n    this.interaction =\r\n      InteractionType[row.interaction as keyof typeof InteractionType];\r\n    this.isActive = false;\r\n    this.validator = new IFrameValidator(this.src)\r\n    this.failed = false; \r\n    // this.error = undefined;\r\n  }\r\n  setActive(b: boolean): void {\r\n    this.isActive = b;\r\n  }\r\n  fail(){\r\n    console.log(this.validator.errors);\r\n    this.failed = true; \r\n    // this.error = \r\n  }\r\n}\r\n","import { Layouts } from \"react-grid-layout\";\r\n/**\r\n *\r\n */\r\nexport default class History {\r\n  events!: Layouts[];\r\n  currentStep!: number;\r\n\r\n  constructor() {\r\n    const emptyLayoutsArray: Layouts[] = [];\r\n    this.events = emptyLayoutsArray;\r\n    this.currentStep = 0;\r\n  }\r\n  addEditEvent(event: Layouts) {\r\n    this.currentStep += 1;\r\n    this.events.push(event);\r\n  }\r\n  undo(): Layouts {\r\n    console.log(this.currentStep);\r\n    this.currentStep -= 1;\r\n    return this.events[this.currentStep];\r\n  }\r\n  redo(): Layouts {\r\n    console.log(this.currentStep);\r\n    this.currentStep += 1;\r\n    return this.events[this.currentStep];\r\n  }\r\n}\r\n","import {\r\n  action,\r\n  thunk,\r\n  Thunk,\r\n  Action,\r\n  ActionOn,\r\n  thunkOn,\r\n  ThunkOn,\r\n  debug,\r\n  actionOn,\r\n} from \"easy-peasy\";\r\nimport CardData from \"@classes/CardData\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport { Layouts } from \"react-grid-layout\";\r\nimport defaultGridLayout from \"../static/defaultLayouts\";\r\nimport { AppMode } from \"../enums\";\r\nimport History from \"@classes/History\";\r\nimport { StoreModel } from \"./index\";\r\n/**\r\n * Core app model\r\n * @param\r\n */\r\nexport interface AppDataModel {\r\n  //state\r\n  availableCards: CardData[];\r\n  activeCards: CardData[];\r\n  currentLayout: Layouts;\r\n  appMode: AppMode;\r\n  history: History;\r\n  // localStorageLayouts: any[];\r\n\r\n  //requests\r\n  // fetchGoogleSheet: Thunk<AppDataModel>;\r\n\r\n  //loaders\r\n  // loadLocalLayouts: Action<AppDataModel>;\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: ActionOn<AppDataModel, StoreModel>;\r\n  onSwapCardContent: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onSetActiveLayout: ThunkOn<AppDataModel, never, StoreModel>;\r\n  //managers\r\n  manageViewModeChange: Thunk<AppDataModel, AppMode>;\r\n  toggleViewMode: Thunk<AppDataModel, never>;\r\n  //simple setters\r\n  setAppMode: Action<AppDataModel, AppMode>;\r\n  setCurrentLayout: Action<AppDataModel, Layouts>;\r\n  setActiveCards: Action<AppDataModel, CardData[]>;\r\n  setAvailableCards: Action<AppDataModel, CardData[]>;\r\n  registerCardLoadFailure: Thunk<AppDataModel, CardData, never, StoreModel>\r\n  //listeners\r\n  onUndoHistory: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onRedoHistory: ThunkOn<AppDataModel, never, StoreModel>;\r\n\r\n  //clear\r\n  // clearLocalLayouts: Action<AppDataModel>;\r\n\r\n  //local storage\r\n  // saveLayoutLocal: Thunk<AppDataModel>;\r\n}\r\n\r\nconst appModel: AppDataModel = {\r\n  //state\r\n  availableCards: [],\r\n  activeCards: [],\r\n  currentLayout: defaultGridLayout,\r\n  appMode: AppMode.DISPLAY,\r\n  history: new History(),\r\n  // localStorageLayouts: [],\r\n\r\n  //managers\r\n  /**Control side effects for altering the view state of the app, and dispatch a setter for the state */\r\n  manageViewModeChange: thunk((actions, viewModeEnum) => {\r\n    console.log(viewModeEnum);\r\n    actions.setAppMode(viewModeEnum);\r\n    switch (viewModeEnum) {\r\n      case AppMode.EDIT:\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n        console.log(\"reached default in set view mode thunk\");\r\n    }\r\n  }),\r\n  toggleViewMode: thunk((actions, _, { getState }) => {\r\n    console.log(\"toggling view mod \");\r\n\r\n    switch (getState().appMode) {\r\n      case AppMode.EDIT:\r\n        actions.setAppMode(AppMode.DISPLAY);\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        actions.setAppMode(AppMode.EDIT);\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n        console.log(\"reached default in set view mode thunk\");\r\n    }\r\n    console.log(getState().appMode);\r\n  }),\r\n  setCurrentLayout: action((state, layoutArray) => {\r\n    state.currentLayout = layoutArray;\r\n  }),\r\n  setAvailableCards: action((state, cardDataArray) => {\r\n    console.log(\"setting available cards\");\r\n    state.availableCards = cardDataArray;\r\n  }),\r\n  setActiveCards: action((state, cardDataArray) => {\r\n    console.log(\"setting active cards\");\r\n    console.log(cardDataArray);\r\n    state.activeCards = cardDataArray;\r\n  }),\r\n  setAppMode: action((state, viewModeEnum) => {\r\n    console.log(\"setting view mode\");\r\n    state.appMode = viewModeEnum;\r\n  }),\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: actionOn(\r\n    // targetResolver:\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    // handler:\r\n    (state, target) => {\r\n      // console.log(\"got on card sheet load success\");\r\n      const cardRowsArray = target.payload.getSheetRows(0);\r\n      const rawCardRowsArray = cardRowsArray.map((row) => {\r\n        return {\r\n          src: row.src,\r\n          title: row.title,\r\n          added: row.added,\r\n          sourceid: row.sourceid,\r\n          author: row.author,\r\n          interaction: row.interaction,\r\n        } as RawCardRow;\r\n      });\r\n      const cards = rawCardRowsArray.map((c: RawCardRow) => new CardData(c));\r\n      console.log(cards);\r\n      state.availableCards = cards;\r\n      console.log(debug(state.availableCards));\r\n    }\r\n  ),\r\n\r\n  onSetActiveLayout: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.setActiveLayout,\r\n    async (actions, layout, { getState }) => {\r\n      // console.log(\"listened for setActiveLayout at app_model\");\r\n      //if a card source is in the active layout, then it must be active\r\n      // const sources = layout.payload.sources();\r\n      // console.log(sources);\r\n      const activeSources = layout.payload\r\n        .sources()\r\n        .filter((s) => s !== \"clock\");\r\n\r\n      const availableCardsUpdated = getState().availableCards.map((card) => {\r\n        if (activeSources.includes(card.sourceId)) {\r\n          card.setActive(true);\r\n        } else {\r\n          card.setActive(false);\r\n        }\r\n        return card;\r\n      });\r\n      const activeCards = getState().availableCards.filter((card) => {\r\n        return activeSources.includes(card.sourceId);\r\n      });\r\n      // console.log(availableCardsUpdated);\r\n      actions.setAvailableCards(availableCardsUpdated);\r\n      actions.setActiveCards(activeCards);\r\n      // console.log(activeCards);\r\n    }\r\n  ),\r\n  registerCardLoadFailure: thunk((actions, failedCard, { getState, getStoreState }) => {\r\n    console.log(\"Got card Register Load Failure at Layouts Model\");\r\n    console.log(failedCard);\r\n    const { activeCards } = getState();\r\n    const failedId = failedCard.sourceId;\r\n    let newCards = activeCards.map(c=>{\r\n      if (c.sourceId === failedId) {\r\n        console.log(\"found failed\");\r\n        c.fail();\r\n      }\r\n      return c\r\n    })\r\n    actions.setActiveCards(newCards);\r\n  }),\r\n  onSwapCardContent: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.swapCardContent,\r\n    async (actions, payload, { getState }) => {\r\n      console.log(\"got swap card content\");\r\n      console.log(payload.payload);\r\n      console.log(getState().activeCards);\r\n      const newCards = getState().activeCards.map((c) => {\r\n        if (c.sourceId === payload.payload.targetId) {\r\n          const newSource = getState().availableCards.find(\r\n            (c) => c.sourceId === payload.payload.sourceId\r\n          );\r\n          console.log(newSource);\r\n          return newSource;\r\n        } else {\r\n          return c;\r\n        }\r\n      });\r\n      if (newCards) {\r\n        actions.setActiveCards(newCards as CardData[]);\r\n      }\r\n      console.log(debug(payload));\r\n    }\r\n  ),\r\n\r\n  onUndoHistory: thunkOn(\r\n    (actions, storeActions) => storeActions.historyModel.setCurrentHistory,\r\n    async (actions, payload) => {\r\n      console.log(\"got undo\");\r\n      console.log(payload.payload);\r\n      actions.setCurrentLayout(payload.payload);\r\n      console.log(debug(payload));\r\n    }\r\n  ),\r\n  onRedoHistory: thunkOn(\r\n    (actions, storeActions) => storeActions.historyModel.setCurrentHistory,\r\n    async (actions, payload) => {\r\n      console.log(\"got redo\");\r\n      console.log(payload.payload);\r\n      actions.setCurrentLayout(payload.payload);\r\n      console.log(debug(payload));\r\n    }\r\n  ),\r\n  //local storage\r\n  // clearLocalLayouts: action((state) => {\r\n  //   localStorage.clear();\r\n  //   state.localStorageLayouts = [];\r\n  // }),\r\n  // loadLocalLayouts: action((state) => {\r\n  //   const layouts: any = Object.keys(localStorage)\r\n  //     .filter((k) => k.startsWith(\"curLayout\"))\r\n  //     .map((k) => ({\r\n  //       name: k,\r\n  //       layout: JSON.parse(localStorage[k]) as Layout[],\r\n  //     }));\r\n  //   state.localStorageLayouts = layouts;\r\n  // }),\r\n  // saveLayoutLocal: thunk((actions, _, { getState }) => {\r\n  //   localStorage.setItem(\r\n  //     `curLayout_${localStorage.length}`,\r\n  //     JSON.stringify(getState().currentLayout)\r\n  //   );\r\n  //   actions.loadLocalLayouts();\r\n  // }),\r\n};\r\n\r\nexport default appModel;\r\n","import WaveformData from \"waveform-data\";\nimport SampleData from \"./SampleData\";\nimport SVGCatmullRomSpline from \"svg-catmull-rom-spline\";\nimport { mapRange } from \"@utils\";\n\nexport default class WaveFormBuilder {\n  generateSVG(original: SampleData): Promise<SampleData> {\n    console.log(original.src);\n    return this.getAudio(original.src)\n      .then((a) => {\n        // console.log(a);\n        const pathData = this.collectSamplePoints(a);\n        original.setPath(pathData);\n        // console.log(original.path);\n        return original;\n      })\n      .catch((e) => {\n        return original;\n      });\n  }\n  collectSamplePoints = (data: WaveformData) => {\n    const numberOfPoints = 10;\n    const duration = data.duration;\n    const trueWidth = 0;\n    const yOffset = 10;\n    const mapToMax = 40;\n    const mapToMin = 0;\n    const maxSampleLengthSeconds = 2.5;\n    const minSampleLengthSeconds = 0;\n    const minSvgViewBoxWidth = 100;\n    const maxSvgViewBoxWidth = 400;\n    const sampleDuration = data.duration;\n    const svgViewBoxWidth = mapRange(\n      sampleDuration,\n      minSampleLengthSeconds,\n      maxSampleLengthSeconds,\n      minSvgViewBoxWidth,\n      maxSvgViewBoxWidth\n    );\n    console.log(sampleDuration);\n\n    const points: DataPoint[] = [];\n    for (let index = 0; index < numberOfPoints; index++) {\n      const currentTime = index * (1 / numberOfPoints) * duration;\n      const channel1 = data.channel(0);\n      const valueAtTime = data.at_time(currentTime);\n      const maxSampleVal = channel1.max_sample(valueAtTime);\n      // console.log(maxSampleVal);\n      const percentageComplete = index / numberOfPoints;\n      const xValue = percentageComplete * svgViewBoxWidth;\n\n      console.log(percentageComplete);\n\n      let yValue = mapRange(maxSampleVal, 0, 100, mapToMin, mapToMax);\n      yValue += yOffset;\n      // console.log(yValue);\n      // const xValue = Math.round(currentTime*200);\n      const timePointValue = { x: xValue, y: Math.round(yValue) };\n      points.push(timePointValue);\n      // console.log(`audio point value ${index} is ${timePointValue.x}, ${timePointValue.y}`)\n    }\n    // const testpoints = [[0, 0], [200, -200], [200, 0], [0, 200]];\n    const tolerance = 4;\n    const highestQuality = true;\n    // const attribute = SVGCatmullRomSpline.toPath(testpoints, tolerance, highestQuality);\n\n    //top line\n    const topPoints = points.map((p) => [p.x, p.y]);\n    //add a point between the top and bottom\n    topPoints.push([topPoints[topPoints.length - 1][0], 0]);\n\n    //reverse points to conenct\n\n    const reversePoints = points.map((p) => [p.x, trueWidth - p.y]).reverse();\n\n    const nextPointX = reversePoints[reversePoints.length - 1][0];\n    const nextPointY = topPoints[0][1];\n    const newPoint = [nextPointX, nextPointY];\n    reversePoints.push(newPoint);\n\n    const allPoints = [...topPoints, ...reversePoints];\n    const newTestedPoints = SVGCatmullRomSpline.toPath(\n      allPoints,\n      tolerance,\n      highestQuality\n    );\n\n    // console.log(newTestedPoints);\n    return newTestedPoints;\n    // return svgPath\n  };\n  data!: any[];\n  audioContext!: AudioContext;\n\n  constructor() {\n    this.data = [];\n    this.audioContext = new AudioContext();\n  }\n\n  getAudio = (url: string): Promise<WaveformData> => {\n    // const audioContext = new AudioContext();\n    return fetch(url)\n      .then((response) => response.arrayBuffer())\n      .then((buffer) => {\n        const options = {\n          audio_context: this.audioContext,\n          array_buffer: buffer,\n          scale: 128,\n        };\n\n        return new Promise((resolve, reject) => {\n          WaveformData.createFromAudio(options, (err, waveform) => {\n            if (err) {\n              console.error(`FAILED TO CREATE AUDIO FROM URL ${url}`);\n              reject(err);\n            } else {\n              resolve(waveform);\n            }\n          });\n        });\n      });\n  };\n}\n\ninterface DataPoint {\n  x: number;\n  y: number;\n}\n\nfunction catmullRom2bezier(points: DataPoint[]): DataPoint[] {\n  var result = [];\n  for (var i = 0; i < points.length - 1; i++) {\n    var p = [];\n\n    p.push({\n      x: points[Math.max(i - 1, 0)].x,\n      y: points[Math.max(i - 1, 0)].y,\n    });\n    p.push({\n      x: points[i].x,\n      y: points[i].y,\n    });\n    p.push({\n      x: points[i + 1].x,\n      y: points[i + 1].y,\n    });\n    p.push({\n      x: points[Math.min(i + 2, points.length - 1)].x,\n      y: points[Math.min(i + 2, points.length - 1)].y,\n    });\n\n    // Catmull-Rom to Cubic Bezier conversion matrix\n    //    0       1       0       0\n    //  -1/6      1      1/6      0\n    //    0      1/6      1     -1/6\n    //    0       0       1       0\n\n    var bp = [];\n    bp.push({\n      x: (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n      y: (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n    });\n    bp.push({\n      x: (p[1].x + 6 * p[2].x - p[3].x) / 6,\n      y: (p[1].y + 6 * p[2].y - p[3].y) / 6,\n    });\n    bp.push({\n      x: p[2].x,\n      y: p[2].y,\n    });\n    result.push(bp);\n  }\n\n  return result;\n}\n\nfunction makePath(points: DataPoint[]): string {\n  let result = \"M\" + points[0].x + \",\" + points[0].y + \" \";\n  const catmull = catmullRom2bezier(points);\n  for (const element of catmull) {\n    result +=\n      \"C\" +\n      element[0].x +\n      \",\" +\n      element[0].y +\n      \" \" +\n      element[1].x +\n      \",\" +\n      element[1].y +\n      \" \" +\n      element[2].x +\n      \",\" +\n      element[2].y +\n      \" \";\n  }\n  return result;\n}\n\nfunction generateSVG() {\n  var graph = [2, 2, 5, 8, 5, 4, 3, 9];\n  var points = [];\n  for (var i = 0; i < graph.length; i++) {\n    let newPoint = { x: i * 50 + 20, y: graph[i] * 40 * -1 + 400 };\n    console.log(newPoint);\n    points.push({ x: i * 50 + 20, y: graph[i] * 40 * -1 + 400 });\n  }\n  document.querySelector(\"#svg path\").setAttribute(\"d\", makePath(points));\n  for (var i = 0; i < points.length; i++) {\n    var circle = points[i];\n    var c = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    c.setAttribute(\"cx\", circle.x);\n    c.setAttribute(\"cy\", circle.y);\n    c.setAttribute(\"r\", \"3\");\n    document.querySelector(\"#svg\").appendChild(c);\n  }\n}\n\n// window.onload = function () {\n//     var graph = [2, 2, 5, 8, 5, 4, 3, 9];\n//     var points = [];\n//     for (var i = 0; i < graph.length; i++) {\n//         let newPoint = {x: i * 50 + 20, y: graph[i] * 40 * -1 + 400};\n//         console.log(newPoint);\n//         points.push({x: i * 50 + 20, y: graph[i] * 40 * -1 + 400});\n//     }\n//     document.querySelector('#svg path').setAttribute('d', makePath(points));\n//     for (var i = 0; i < points.length; i++) {\n//         var circle = points[i];\n//         var c = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n//         c.setAttribute(\"cx\", circle.x);\n//         c.setAttribute(\"cy\", circle.y);\n//         c.setAttribute(\"r\", \"3\");\n//         document.querySelector('#svg').appendChild(c);\n//     }\n// };\n","import WaveformData from \"waveform-data\"\n\nexport type CompositionTitle = \"Bartok Movement 1\" | \"Bach Movement 1\" | \"Bach Movement 2\"\n\n\nclass CompositionData{\n    title!: CompositionTitle\n    url!: string;\n    waveFormData: WaveformData | undefined\n    constructor(title: CompositionTitle, url: string) {\n        this.title = title\n        this.waveFormData\n        this.url = url\n    }\n\n    buildWaveform(): Promise<WaveformData>{\n        return getAudio(this.url).then(d=>{\n          this.waveFormData = d\n          return new Promise((resolve, reject)=>{\n            resolve(d)\n          })\n        })\n    }\n\n}\n\nexport default CompositionData\n\n\nconst getAudio = (url: string): Promise<WaveformData>=>{\n    // const audioContext = new AudioContext();\n    const audioContext = new AudioContext();\n    return fetch(url)\n    .then(response => response.arrayBuffer())\n    .then(buffer => {\n      const options = {\n        audio_context: audioContext,\n        array_buffer: buffer,\n        scale: 128\n      };\n  \n      return new Promise((resolve, reject) => {\n        WaveformData.createFromAudio(options, (err, waveform) => {\n          if (err) {\n            reject(err);\n          }\n          else {\n            resolve(waveform);\n          }\n        });\n      });\n    })\n  }","import CompositionData from \"@classes/ðŸŽ»CompositionData\";\n\nconst genearteDefaultCompositions = (): CompositionData =>{\n    // const url = `${process.env.PUBLIC_URL}/`+\"RECORDINGS/Bach Mov 2 v2.wav\"\n    const url = `${process.env.PUBLIC_URL}/`+\"BACH2.mp3\"\n    const bachMovement1 = new CompositionData(\"Bach Movement 2\", url)\n    console.log(bachMovement1);\n    return bachMovement1\n}\n\nconst defaultCompositions: CompositionData[] = [genearteDefaultCompositions()]\n\nexport default defaultCompositions","\n\n\nimport { action, Action, thunk, Thunk, thunkOn, ThunkOn } from \"easy-peasy\";\nimport History from \"@classes/History\";\nimport { Layouts } from \"react-grid-layout\";\nimport WaveFormBuilder from \"@classes/WaveFormBuilder\";\nimport SampleData from \"@classes/SampleData\";\nimport placeHolderSamples from \"@static/placeHolderSamples\"\nimport { StoreModel } from \"model\";\nimport WaveformData from \"waveform-data\";\nimport CompositionData from \"@classes/ðŸŽ»CompositionData\";\nimport defaultCompositions from \"@static/defaultCompositions\";\nimport FileSaver from \"file-saver\"\nimport Papa from \"papaparse\"\nimport { RawCompositionRow } from \"@interfaces/RawCompositionRow\";\n\nexport interface CompositionsModel{\n    //state\n    compositions: CompositionData[],\n    //thunks\n    //simple setters\n    setCompositions: Action<CompositionsModel, CompositionData[]>\n    //proccessing\n    processCompositions: Thunk<CompositionsModel, never, StoreModel>\n    downloadAnalysis: Action<CompositionsModel>\n}\n\n\nconst compositionsModel: CompositionsModel = {\n    //state\n    compositions: defaultCompositions,\n    //processing\n    processCompositions: thunk((actions, _, {getState})=>{\n        console.log(\"processing compositions\")\n        const state = getState()\n        const { compositions: compositions }  = {...state}\n\n        console.log(compositions)\n        const processor = new WaveFormBuilder()\n\n        //TODO: ERROR HANDLING\n        const analysisResults = compositions.map(c=>processor.getAudio(c.url))\n        \n        // const waveformData = processor.getAudio()\n        // const processedCompositions = compositions.map(composition=>composition.buildWaveform());\n        Promise.allSettled(analysisResults).then(results=>{\n            const succesfulAnalaysisCompositions: CompositionData[] = [];\n            for (let index = 0; index < results.length; index++) {\n                const result = results[index];\n                const compClone = [...compositions]\n                const comp = compClone[index]   \n                console.log(result);\n                if (result.status == \"fulfilled\"){\n                    comp.waveFormData = result.value \n                    succesfulAnalaysisCompositions.push(comp)\n                }\n            }\n            console.log(\"SETTINGS COMPOSITOINS\");\n            console.log(succesfulAnalaysisCompositions);\n            actions.setCompositions(succesfulAnalaysisCompositions)\n            actions.downloadAnalysis()\n        })\n        // console.log(processedCompositions);\n    }),\n    //simple setters\n    setCompositions: action((state, samplesArray) => {\n        console.log(\"setting samples\")\n        state.compositions = samplesArray;\n        // state.tempLayout = layouts;\n      }),\n    downloadAnalysis: action((state)=>{\n        console.log(state.compositions[0].waveFormData.toJSON().data);\n        const rows: RawCompositionRow[] = state.compositions.map(c=>({title: c.title, url: c.url , data: JSON.stringify(c.waveFormData)}))\n        const csv = Papa.unparse(rows)\n        console.log(rows[0].data.length);\n        \n        var csvData = new Blob([csv], {type: 'text/csv;charset=utf-8;'});\n        // FileSaver.saveAs(csvData, \"test.csv\")\n    })\n}\n\nexport default compositionsModel\n\n","import type SheetId from \"../interfaces/SheetId\";\r\n\r\nconst cardDataSheetKey: SheetId = {\r\n  key: \"1eq33_1yJS6EZjqBvxWgL7nDP0OxC8bMdJJqU7Akp_3E\",\r\n  // key: \"1o-R04VC8cIbcmqM68q4ESguaaNYb-0jhoPNgEuKa0i4\",\r\n  sheet_number: 1,\r\n};\r\nexport default cardDataSheetKey;\r\n\r\n// 1o-R04VC8cIbcmqM68q4ESguaaNYb-0jhoPNgEuKa0i4\r\n// key: \"181P-SDszUOj_xn1HJ1DRrO8pG-LXyXNmINcznHeoK8k\",\r\n","import { ConsoleIcon } from \"evergreen-ui\";\r\nimport {\r\n  GoogleSpreadsheet,\r\n  GoogleSpreadsheetRow,\r\n  GoogleSpreadsheetWorksheet,\r\n} from \"google-spreadsheet\";\r\n\r\nexport default class GoogleSheetData {\r\n  title!: string;\r\n  sheetId!: string;\r\n  sheets!: GoogleSpreadsheetRow[][];\r\n\r\n  constructor(\r\n    title: string,\r\n    sheetId: string,\r\n    sheets: GoogleSpreadsheetRow[][]\r\n  ) {\r\n    this.title = title;\r\n    this.sheetId = sheetId;\r\n    this.sheets = sheets;\r\n  }\r\n  getSheetRows(sheetIndex: number): GoogleSpreadsheetRow[] {\r\n    return this.sheets[sheetIndex];\r\n  }\r\n  loadSheets(\r\n    sheetId: string,\r\n    apikey: string\r\n  ): Promise<Promise<GoogleSpreadsheetRow[]>[]> {\r\n    const document = new GoogleSpreadsheet(sheetId);\r\n    document.useApiKey(apikey);\r\n    const sheetPromiseArray: Promise<GoogleSpreadsheetRow[]>[] = [];\r\n    return document.loadInfo().then(() => {\r\n      document.sheetsByIndex.forEach((element) => {\r\n        const myTest = element.getRows();\r\n        console.log(myTest);\r\n        sheetPromiseArray.push(myTest);\r\n      });\r\n      return sheetPromiseArray;\r\n    });\r\n  }\r\n}\r\n","import { action, Action, thunk, Thunk } from \"easy-peasy\";\r\nimport type GoogleSheet from \"../interfaces/GoogleSheet\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport cardDataSheetKey from \"@static/cardDataSheetKey\";\r\nimport layoutsGoogleSheetKey from \"@static/layoutsGoogleSheetKey\";\r\nimport GoogleSheetData from \"@classes/ðŸ“‹GoogleSheetData\";\r\nimport Papa, { ParseConfig } from \"papaparse\";\r\nimport { RawCompositionRow } from \"@interfaces/RawCompositionRow\";\r\nimport { ParagraphProps } from \"evergreen-ui\";\r\nimport RawSampleRow from \"@interfaces/RawSampleRow\";\r\nimport analyzeClips from '@static/analyzeClips';\r\n\r\ntype Result =\r\n  | { success: true; value: unknown }\r\n  | { success: false; error: Error };\r\n\r\nexport interface GoogleSheetsModel {\r\n  //state\r\n  compositionsSheet: GoogleSheetData | undefined;\r\n  appGoogleSheet: GoogleSheetData | undefined;\r\n  cardDataGoogleSheet: RawCardRow[] | null;\r\n  samplesSheet: RawSampleRow[];\r\n  // cardDataGoogleSheet: GoogleSheet<RawCardRow> | null;\r\n  layoutDataGoogleSheet: GoogleSheet<RawLayoutRow> | null;\r\n\r\n  //requests\r\n  fetchAppGoogleSheet: Thunk<GoogleSheetsModel>;\r\n  fetchCompositionsSheet: Thunk<GoogleSheetsModel>;\r\n  fetchSamplesSheet: Thunk<GoogleSheetsModel>;\r\n  // fetchLayoutDataGoogleSheet: Thunk<GoogleSheetsModel>;\r\n\r\n  //setters\r\n  setAppGoogleSheetData: Action<GoogleSheetsModel, GoogleSheetData>;\r\n  setCardDataGoogleSheet: Action<GoogleSheetsModel, RawCardRow[]>;\r\n  setCompositionsSheet: Action<GoogleSheetsModel, Papa.ParseResult<unknown>>;\r\n  setSamplesSheet: Action<GoogleSheetsModel, unknown[]>;\r\n  // setCardDataGoogleSheet: Action<GoogleSheetsModel, GoogleSheet<RawCardRow>>;\r\n  setLayoutDataGoogleSheet: Action<\r\n    GoogleSheetsModel,\r\n    GoogleSheet<RawLayoutRow>\r\n  >;\r\n}\r\n/**\r\n * Responsible for making requestst to google sheets. Other models must listen this model to intercept the sheet payload.\r\n * Also stores the fetch data purely for debugging purposes.\r\n */\r\n\r\nconst googleSheetsModel: GoogleSheetsModel = {\r\n  //state\r\n  layoutDataGoogleSheet: null,\r\n  cardDataGoogleSheet: null,\r\n  appGoogleSheet: undefined,\r\n  samplesSheet: [],\r\n  compositionsSheet: undefined,\r\n\r\n  //request\r\n  fetchCompositionsSheet: thunk(async (actions) => {\r\n    console.log(\"FETCHING COMPOSITIONS SHEET\");\r\n    const url  = publicSheetUrl(\"/TEST_ANALYSIS.csv\")\r\n    parseSheet(url, (r)=>{actions.setCompositionsSheet(r)})\r\n  }),\r\n  fetchSamplesSheet: thunk(async (actions) => {\r\n    console.log(\"Fetching Samples\");\r\n    if (analyzeClips){\r\n      console.log(\"USING UNPROCESSED SAMPLE SHEET\");\r\n      const url  = publicSheetUrl(\"/out_csv.csv\")\r\n      parseSheet(url, (r)=>{actions.setSamplesSheet(r.data)})\r\n    }\r\n    else {\r\n      console.log(\"USING PREPROCESSED SAMPLE SHEET\");\r\n      const url  = publicSheetUrl(\"/CLIPS_4.csv\")\r\n      parseSheet(url, (r)=>{actions.setSamplesSheet(r.data)})\r\n    }\r\n  }),\r\n  fetchAppGoogleSheet: thunk(async (actions) => {\r\n    GoogleSheetData.prototype\r\n      .loadSheets(\r\n        cardDataSheetKey.key,\r\n        process.env.REACT_APP_GCP_TOKEN as string\r\n      )\r\n      .then((response) => {\r\n        Promise.all(response).then((responseData) => {\r\n          const studentsGoogleSheet = new GoogleSheetData(\r\n            \"DSC App\",\r\n            cardDataSheetKey.key,\r\n            responseData\r\n          );\r\n          console.log(studentsGoogleSheet);\r\n          actions.setAppGoogleSheetData(studentsGoogleSheet);\r\n        });\r\n      });\r\n  }),\r\n  //Simple Setters\r\n  setAppGoogleSheetData: action((state, googleSheet) => {\r\n    state.appGoogleSheet = googleSheet;\r\n  }),\r\n  setCardDataGoogleSheet: action((state, sheet) => {\r\n    state.cardDataGoogleSheet = sheet;\r\n  }),\r\n  setLayoutDataGoogleSheet: action((state, sheet) => {\r\n    state.layoutDataGoogleSheet = sheet;\r\n  }),\r\n  setCompositionsSheet: action((state, compositionSheet) => {\r\n    compositionSheet.data = compositionSheet.data as RawCompositionRow[]\r\n  }),\r\n  setSamplesSheet: action((state, samplesSheet) => {\r\n    state.samplesSheet = samplesSheet as RawSampleRow[]\r\n  }),\r\n};\r\n\r\nexport default googleSheetsModel;\r\n\r\n\r\n\r\n// console.log(url);\r\n// Papa.parse(url, {\r\n//     download: true,\r\n//     header: true,\r\n//     complete: function(results) {\r\n//       console.log(results);\r\n//       actions.setSamplesSheet(results.data)\r\n//     }\r\n// });\r\n\r\nconst parseSheet = (url: string, complete: (results: Papa.ParseResult<unknown>)=>void) => {\r\n  Papa.parse(url, {\r\n    download: true,\r\n    header: true,\r\n    complete: function(results) {\r\n      console.log(results);\r\n      complete(results)\r\n    }})\r\n};\r\n\r\nconst publicSheetUrl = (file: string) =>{\r\n  if (!file.endsWith(\".csv\")){\r\n    console.error(\"Failed to load csv, wrong extension (not .csv)\")\r\n  }\r\n  return process.env.PUBLIC_URL+file;\r\n}\r\n","import { action, Action, thunk, Thunk, thunkOn, ThunkOn } from \"easy-peasy\";\r\nimport History from \"@classes/History\";\r\nimport { Layouts } from \"react-grid-layout\";\r\n\r\nexport interface HistoryModel {\r\n  history: History;\r\n  addEditHistory: Action<HistoryModel, Layouts>;\r\n  undoIt: Action<HistoryModel>;\r\n  redoIt: Action<HistoryModel>;\r\n  undoHistory: Thunk<HistoryModel>;\r\n  setCurrentHistory: Action<HistoryModel, Layouts>;\r\n  // onAddTodo: ThunkOn<HistoryModel, any, StoreModel>;\r\n}\r\nconst historyModel: HistoryModel = {\r\n  history: new History(),\r\n  undoHistory: thunk((actions, _, { getState }) => {\r\n    // console.log(payload);\r\n    actions.undoIt();\r\n    actions.setCurrentHistory(getState().history.undo());\r\n    // const newLayouts = state.history.undo();\r\n    // console.log(newLayouts);\r\n  }),\r\n  undoIt: action((state) => {\r\n    state.history.undo();\r\n    console.log(state.history.currentStep);\r\n    // console.log(payload);\r\n  }),\r\n  redoIt: action((state) => {\r\n    state.history.redo();\r\n    console.log(state.history.currentStep);\r\n    // console.log(payload);\r\n  }),\r\n  setCurrentHistory: action((state, payload) => {\r\n    console.log(payload);\r\n  }),\r\n  // undoHistory: action((state, layouts) => {\r\n  //   console.log(layouts);\r\n  //   const newLayouts = state.history.undo();\r\n  //   console.log(newLayouts);\r\n  // }),\r\n\r\n  // undoHistory: action((state, layouts) => {\r\n  //   console.log(layouts);\r\n  //   const newLayouts = state.history.undo();\r\n  //   console.log(newLayouts);\r\n  // }),\r\n  addEditHistory: action((state, layouts) => {\r\n    console.log(\"adding edit history\");\r\n    console.log(layouts);\r\n    const test = JSON.stringify(layouts);\r\n    console.log(test);\r\n    state.history.addEditEvent(layouts);\r\n  }),\r\n};\r\n\r\nexport default historyModel;\r\n","import { Layout, Layouts } from \"react-grid-layout\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport type { CardSwapEvent, CardAddEvent } from \"../interfaces/CardEvents\";\r\nimport CardData from \"./CardData\";\r\n// import { Ok, Err, Result } from \"ts-results\";\r\nimport defaultLayouts from \"../static/defaultLayouts\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport type { GridPosition } from \"../interfaces/GridPosition\";\r\n\r\n//TODO: Google form columns and layoutData fields should have the same capitilization\r\nexport default class LayoutData {\r\n  readonly title: string;\r\n  readonly author: string;\r\n  readonly added: Date;\r\n  readonly id: string;\r\n  layout: Layouts;\r\n  constructor(row: RawLayoutRow) {\r\n    this.id = row.title + \"_\" + row.timestamp;\r\n    this.title = row.title;\r\n    this.author = row.author;\r\n    //7/26/2021 14:38:57\r\n    //7/26/2021\r\n    this.added = new Date(row.timestamp.split(\" \")[0]);\r\n    const startLayout: Layouts = JSON.parse(row.layout);\r\n    this.layout = startLayout;\r\n  }\r\n  swapCard(swapInfo: CardSwapEvent): void {\r\n    for (const [k, v] of Object.entries(this.layout)) {\r\n      for (const [index, layoutValue] of v.entries()) {\r\n        if (layoutValue.i == swapInfo.targetId) {\r\n          v[index].i = swapInfo.sourceId;\r\n        }\r\n      }\r\n      this.layout[k] = v;\r\n    }\r\n  }\r\n  removeCard(toRemove: CardData): void {\r\n    console.log(this.layout);\r\n    for (const [k, v] of Object.entries(this.layout)) {\r\n      for (const [index, layoutValue] of v.entries()) {\r\n        // console.log(layoutVal);\r\n        this.layout[k] = v.filter((l) => l.i !== toRemove.sourceId);\r\n        // if (layoutVal.i == toRemove.sourceId) {\r\n        //   console.log(layoutVal);\r\n        // }\r\n      }\r\n    }\r\n  }\r\n  addCard(toAdd: CardData, pos: GridPosition): void {\r\n    console.log(\"ADDING CARD AT LAYOUT DATA\");\r\n    console.log(this.layout);\r\n    for (const [k, v] of Object.entries(this.layout)) {\r\n      const newItem: Layout = {\r\n        x: pos.x,\r\n        y: pos.y,\r\n        w: 1,\r\n        h: 1,\r\n        i: toAdd.sourceId,\r\n      };\r\n      this.layout[k].push(newItem);\r\n    }\r\n  }\r\n  failCard(toFail: CardData){\r\n    console.log(\"FAILING CARD AT LAYOUT DATA\");\r\n    // console.log()\r\n  }\r\n  setGridLayout(newGridLayout: Layouts): void {\r\n    console.log(newGridLayout);\r\n    this.layout = newGridLayout;\r\n  }\r\n  sources(): string[] {\r\n    const lg = Object.entries(this.layout)[0][1];\r\n    return lg.map((l: any) => l.i);\r\n  }\r\n}\r\n\r\nfunction findEmptyGridPositions(\r\n  layouts: Layout[],\r\n  rows: number,\r\n  cols: number\r\n): GridPosition[] {\r\n  const allGridSpots: GridPosition[] = [];\r\n  for (let y = 0; y < rows; y++) {\r\n    for (let x = 0; x < cols; x++) {\r\n      allGridSpots.push({ x: x, y: y });\r\n    }\r\n  }\r\n  const filledSpots = findFilledPositions(layouts);\r\n  const stringFilledSpots = new Set(\r\n    filledSpots.map((fs) => [fs.x, fs.y].toString())\r\n  );\r\n\r\n  return allGridSpots.filter(\r\n    (gs) => !stringFilledSpots.has([gs.x, gs.y].toString())\r\n  );\r\n}\r\n\r\nfunction findFilledPositions(layouts: Layout[]): GridPosition[] {\r\n  const takenSpots: GridPosition[] = [];\r\n  for (const l of layouts) {\r\n    takenSpots.push({ x: l.x, y: l.y });\r\n    for (let index = 1; index < l.w; index++) {\r\n      const fullSpotX: GridPosition = {\r\n        x: l.x + index,\r\n        y: l.y,\r\n      };\r\n      takenSpots.push(fullSpotX);\r\n    }\r\n    for (let index = 1; index < l.h; index++) {\r\n      const fullSpotY: GridPosition = {\r\n        x: l.x,\r\n        y: l.y + index,\r\n      };\r\n      takenSpots.push(fullSpotY);\r\n    }\r\n  }\r\n  return takenSpots;\r\n}\r\n\r\n// function parseLayout(\r\n//   data: string\r\n// ): Result<Layouts, \"failed to parse layoutJSON\"> {\r\n//   try {\r\n//     const layouts = JSON.parse(data);\r\n//     return Ok(layouts);\r\n//   } catch {\r\n//     return Err(\"failed to parse layoutJSON\");\r\n//   }\r\n// }\r\n\r\nfunction generateFilledLayout(\r\n  layout: Layout[],\r\n  emptyPosArray: GridPosition[]\r\n): Layouts {\r\n  const emptyCards = emptyPosArray.map((rr) => {\r\n    return {\r\n      x: rr.x,\r\n      y: rr.y,\r\n      w: 1,\r\n      h: 1,\r\n      i: `empty_card_${uuidv4()}`,\r\n      minW: 1,\r\n      maxW: 1,\r\n      minH: 1,\r\n      maxH: 1,\r\n      static: true,\r\n      isDraggable: false,\r\n      isResizable: false,\r\n      resizeHandles: [],\r\n    } as Layout;\r\n  });\r\n  const filled = layout.concat(emptyCards);\r\n  return {\r\n    lg: filled,\r\n    md: filled,\r\n    sm: filled,\r\n    xs: filled,\r\n    xxs: filled,\r\n  };\r\n}\r\n// function getCount(): Promise<Result<number, Error>> {\r\n//   return fetch(\"/index-count\")\r\n//     .then((res) => res.json())\r\n//     .then((body): Ok<number, Error> => ok(body[\"count\"]))\r\n//     .catch(() => err(new Error(\"Something when wrong while fetching count\")));\r\n// }\r\n\r\n// // To access the count, we'll first have to check if the calculation succeeded.\r\n// if (res.isOk()) {\r\n//   // Now we can access the value.\r\n//   console.log(\"Count is:\", res.value);\r\n// }\r\n\r\n// if (res.isErr()) {\r\n//   // Now we can access the error.\r\n//   console.error(\"Oh no, there was an error:\", res.error);\r\n// }\r\n\r\n// // https://dev.to/duunitori/mimicing-rust-s-result-type-in-typescript-3pn1\r\n// // type Result =\r\n// //   | { success: true; value: unknown }\r\n// //   | { success: false; error: Error };\r\n\r\n// export type Result<T, E> = Ok<T, E> | Err<T, E>;\r\n\r\n// export class Ok<T, E> {\r\n//   public constructor(public readonly value: T) {}\r\n\r\n//   public isOk(): this is Ok<T, E> {\r\n//     return true;\r\n//   }\r\n\r\n//   public isErr(): this is Err<T, E> {\r\n//     return false;\r\n//   }\r\n// }\r\n\r\n// export class Err<T, E> {\r\n//   public constructor(public readonly error: E) {}\r\n\r\n//   public isOk(): this is Ok<T, E> {\r\n//     return false;\r\n//   }\r\n\r\n//   public isErr(): this is Err<T, E> {\r\n//     return true;\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * Construct a new Ok result value.\r\n//  */\r\n// export const ok = <T, E>(value: T): Ok<T, E> => new Ok(value);\r\n\r\n// /**\r\n//  * Construct a new Err result value.\r\n//  */\r\n// export const err = <T, E>(error: E): Err<T, E> => new Err(error);\r\n","import {\r\n  action,\r\n  thunk,\r\n  Thunk,\r\n  Action,\r\n  thunkOn,\r\n  ThunkOn,\r\n  debug,\r\n} from \"easy-peasy\";\r\nimport CardData from \"@classes/CardData\";\r\nimport LayoutData from \"@classes/LayoutData\";\r\nimport { StoreModel } from \"./index\";\r\nimport { Layout, Layouts } from \"react-grid-layout\";\r\nimport { CardAddEvent, CardSwapEvent } from \"../interfaces/CardEvents\";\r\nimport defaultLayouts from \"../static/defaultLayouts\";\r\nimport { AppMode } from \"../enums\";\r\nimport RawCardRow from \"../interfaces/RawCardRow\";\r\nimport RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport IFrameValidator from \"../IFrameValidator\";\r\nimport defaultLayout from \"@static/defaultLayouts\" \r\nexport interface LayoutsModel {\r\n  //state\r\n  activeLayout: LayoutData | undefined;\r\n  externalLayouts: LayoutData[];\r\n  bufferLayout: Layouts;\r\n  tempLayout: Layouts;\r\n  //listeners\r\n  onSetAppGoogleSheetData: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  onToggleViewModeListener: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  //requests\r\n\r\n  //simple setters\r\n  setActiveLayout: Action<LayoutsModel, LayoutData>;\r\n  setExternalLayouts: Action<LayoutsModel, LayoutData[]>;\r\n  setBufferLayout: Action<LayoutsModel, Layouts>;\r\n  setTempLayout: Action<LayoutsModel, Layouts>;\r\n  updateLayout: Action<LayoutsModel, CardSwapEvent>;\r\n\r\n  // storeBufferLayout: Action<LayoutsModel>;\r\n\r\n  //update\r\n  swapCardContent: Thunk<LayoutsModel, CardSwapEvent, StoreModel>;\r\n  deleteCard: Thunk<LayoutsModel, CardData, StoreModel>;\r\n  addCard: Thunk<LayoutsModel, CardAddEvent, never, StoreModel>;\r\n  registerCardLoadFailure: Thunk<LayoutsModel, CardData, never, StoreModel>\r\n}\r\n\r\nconst layoutsModel: LayoutsModel = {\r\n  //state\r\n  activeLayout: undefined,\r\n  externalLayouts: [],\r\n  bufferLayout: defaultLayouts,\r\n  tempLayout: defaultLayouts,\r\n\r\n  //listeners\r\n  /**On setAppGoogleSheetData, create an array of LayoutData objects from the provided rows */\r\n  onSetAppGoogleSheetData: thunkOn(\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    (actions, target) => {\r\n      //extract only the needed properties from the GoogleSheetRow\r\n      const rawLayoutRows = target.payload.getSheetRows(1).map((l) => {\r\n        return {\r\n          title: l.title,\r\n          author: l.author,\r\n          timestamp: l.timestamp,\r\n          layout: l.layout,\r\n          interaction: l.interaction,\r\n        } as RawLayoutRow;\r\n      });\r\n      const layouts = rawLayoutRows.map((l) => new LayoutData(l));\r\n      // const defaultLayout = layouts[0];\r\n      // const defaultLayout = defa\r\n      // layouts.\r\n      const dLayout = layouts[0];\r\n      dLayout.layout = defaultLayout;\r\n      actions.setActiveLayout(dLayout);\r\n      // const bufferLayout = layouts[0]\r\n      // if (defaultLayout) {\r\n      //   actions.setActiveLayout(defaultLayout);\r\n      // }\r\n      actions.setExternalLayouts(layouts);\r\n      actions.setBufferLayout(layouts[0].layout);\r\n    }\r\n  ),\r\n  onToggleViewModeListener: thunkOn(\r\n    // targetResolver:\r\n    (actions, storeActions) => storeActions.appModel.toggleViewMode,\r\n    // handler:\r\n    (actions, target, { getState, getStoreState }) => {\r\n      console.log(\r\n        \"listened to on toggle view mode in layout model, setting layout from buffer\"\r\n      );\r\n      const { activeLayout } = getState();\r\n      const buf = getState().bufferLayout;\r\n      if (getStoreState().appModel.appMode === AppMode.DISPLAY) {\r\n        console.log(\"IT WAS IN DISPLAY MODE\");\r\n        if (activeLayout?.layout) {\r\n          activeLayout.layout = buf;\r\n          actions.setActiveLayout(activeLayout);\r\n        }\r\n      }\r\n    }\r\n  ),\r\n  //simple setters\r\n  setActiveLayout: action((state, newActiveLayout) => {\r\n    // console.log(\"setting active layout\");\r\n    // console.log(newActiveLayout);\r\n    state.activeLayout = newActiveLayout;\r\n  }),\r\n  setExternalLayouts: action((state, newLayoutArray) => {\r\n    console.log(\"setting external layouts\");\r\n    state.externalLayouts = newLayoutArray;\r\n  }),\r\n  //mutators\r\n  swapCardContent: thunk(\r\n    (actions, swapInfo, { getState, getStoreState, getStoreActions }) => {\r\n      const currentModel = getStoreState() as StoreModel;\r\n      // const activeCards = curModel.appModel.activeCards;\r\n      const { activeLayout } = getState();\r\n      if (activeLayout) {\r\n        const buf = getState().bufferLayout;\r\n        activeLayout.layout = buf;\r\n        activeLayout.swapCard(swapInfo);\r\n        actions.setActiveLayout(activeLayout);\r\n        // actions.setBufferLayout(activeLayout.layout);\r\n      }\r\n    }\r\n  ),\r\n  deleteCard: thunk(\r\n    (actions, cardToDelete, { getState, getStoreState, getStoreActions }) => {\r\n      console.log(\"deleting card at layotus model\");\r\n      console.log(cardToDelete);\r\n      // let buf = getState().bufferLayout;\r\n      const previousLayout = getState().activeLayout;\r\n      console.log(\"got here\");\r\n      const { activeLayout } = getState();\r\n      if (activeLayout) {\r\n        const buf = getState().bufferLayout;\r\n        activeLayout.layout = buf;\r\n        activeLayout.removeCard(cardToDelete);\r\n        actions.setActiveLayout(activeLayout);\r\n      }\r\n    }\r\n  ),\r\n  addCard: thunk((actions, cardAddEvent, { getState, getStoreState }) => {\r\n    console.log(\"adding card\");\r\n    console.log(cardAddEvent);\r\n    const { availableCards } = getStoreState().appModel;\r\n    const { sourceId, targetPosition } = cardAddEvent;\r\n    const cardToAdd = availableCards.find((c) => c.sourceId == sourceId);\r\n    const { activeLayout } = getState();\r\n    if (activeLayout && cardToAdd) {\r\n      const buf = getState().bufferLayout;\r\n      console.log(debug(buf));\r\n      activeLayout.setGridLayout(buf);\r\n      activeLayout?.addCard(cardToAdd, targetPosition);\r\n      actions.setActiveLayout(activeLayout);\r\n      // actions.setBufferLayout(activeLayout.layout);\r\n      console.log(cardToAdd);\r\n    }\r\n  }),\r\n  registerCardLoadFailure: thunk((actions, failedCard, { getState, getStoreState }) => {\r\n    console.log(\"Got card Register Load Failure at Layouts Model\");\r\n    console.log(failedCard);\r\n    const { activeLayout } = getState();\r\n    if (activeLayout){\r\n      activeLayout.failCard(failedCard)\r\n    }\r\n    // if (activeLayout && cardToAdd) {\r\n    //   const buf = getState().bufferLayout;\r\n    //   console.log(debug(buf));\r\n    //   activeLayout.setGridLayout(buf);\r\n    //   activeLayout?.addCard(cardToAdd, targetPosition);\r\n    //   actions.setActiveLayout(activeLayout);\r\n    //   // actions.setBufferLayout(activeLayout.layout);\r\n    //   console.log(cardToAdd);\r\n    // }\r\n  }),\r\n  setBufferLayout: action((state, layouts) => {\r\n    console.log(\"setting buffer layout\");\r\n    console.log(layouts);\r\n    state.bufferLayout = layouts;\r\n    // state.tempLayout = layouts;\r\n  }),\r\n  setTempLayout: action((state, layouts) => {\r\n    console.log(\"setting buffer layout\");\r\n    console.log(layouts);\r\n    state.tempLayout = layouts;\r\n  }),\r\n  updateLayout: action((state, swap) => {\r\n    const old = state.activeLayout;\r\n    if (old) {\r\n      old.swapCard(swap);\r\n      console.log(old.layout);\r\n      state.activeLayout = old;\r\n    }\r\n  }),\r\n};\r\n\r\nexport default layoutsModel;\r\n","import { action, Action, ActionOn, actionOn, thunkOn, ThunkOn, thunk, Thunk } from \"easy-peasy\";\r\nimport { StoreModel } from \"./index\";\r\n\r\nexport interface LogModel{\r\n  //state\r\n  data: string[]\r\n\r\n  //requests\r\n    // onUpdate: ThunkOn<LogModel, never, StoreModel>\r\n  //setter\r\n  setData: Action<LogModel, string[]>\r\n\r\n}\r\n\r\nconst logModel: LogModel= {\r\n    //state\r\n    data: [],\r\n    \r\n    //requests\r\n\r\n    //setters\r\n    setData: action((state, data) => {\r\n    state.data = data\r\n    }),\r\n    //listeners\r\n    // onUpdate: thunkOn(\r\n    //     (actions, storeActions) =>\r\n    //         [\r\n\t// \t\t storeActions.samplesModel.loadSamples,\r\n\t// \t\t storeActions.samplesModel.setSamples\r\n    //         ],\r\n    //     (actions, target) => {\r\n\r\n\r\n    //     }\r\n    //   ),\r\n};\r\n\r\nexport default logModel;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let log = {\r\n// \tinfo: function info(message) {\r\n// \t\tconst callerInfo = getFileName(info.caller.name);\r\n// \t\tconsole.log(\r\n// \t\t\tnew Date() +\r\n// \t\t\t\t' ' +\r\n// \t\t\t\targuments.callee.name.toUpperCase() +\r\n// \t\t\t\t' ' +\r\n// \t\t\t\tcallerInfo.filename +\r\n// \t\t\t\t':' +\r\n// \t\t\t\tcallerInfo.line +\r\n// \t\t\t\t':' +\r\n// \t\t\t\tcallerInfo.column +\r\n// \t\t\t\t' ' +\r\n// \t\t\t\tinfo.caller.name +\r\n// \t\t\t\t'() ' +\r\n// \t\t\t\tmessage\r\n// \t\t);\r\n// \t},\r\n// };\r\n\r\n// function getFileName(caller) {\r\n//   const STACK_FUNC_NAME = new RegExp(/at\\s+((\\S+)\\s)?\\((\\S+):(\\d+):(\\d+)\\)/);\r\n// \tlet err = new Error();\r\n// \tError.captureStackTrace(err);\r\n// \tlet stacks = err.stack.split('\\n').slice(1);\r\n\r\n// \tlet callerInfo = null;\r\n// \tfor (let i = 0; i < stacks.length; i++) {\r\n// \t\tcallerInfo = STACK_FUNC_NAME.exec(stacks[i]);\r\n    \r\n// \t\tif (callerInfo[2] === caller) {\r\n// \t\t\treturn {\r\n// \t\t\t\tfilename: callerInfo[3],\r\n// \t\t\t\tline: callerInfo[4],\r\n// \t\t\t\tcolumn: callerInfo[5],\r\n// \t\t\t};\r\n// \t\t}\r\n// \t}\r\n\r\n// \treturn null;\r\n// }\r\n\r\n// function iWantToLog() {\r\n// \tlog.info('Testing my log');\r\n// }\r\n\r\n// iWantToLog();","import RawSampleRow from \"@interfaces/RawSampleRow\";\r\n\r\nclass SampleData {\r\n  id!: string;\r\n  src!: string;\r\n  tags!: string[];\r\n  svgPath!: string;\r\n  filename!: string;\r\n  length!: number;\r\n  composition: string;\r\n  startTime: Date;\r\n  endTime: Date;\r\n  \r\n\r\n  constructor(sampleDataRow: RawSampleRow) {\r\n    const {\r\n      filename,\r\n      tags,\r\n      composition,\r\n      starTime: start,\r\n      endTime: end,\r\n      hour,\r\n      svgPath,\r\n      length, \r\n    } = sampleDataRow;\r\n    const url = `${process.env.PUBLIC_URL}/Clips/` + filename;\r\n    const defaultStartTime = new Date(\"1995-12-17T03:24:00\");\r\n    const defaultEndTime = new Date(\"1995-12-17T03:24:01\");\r\n    this.src = url;\r\n    this.tags = tags.split(\",\");\r\n    this.startTime = defaultStartTime;\r\n    this.endTime = defaultEndTime;\r\n    this.composition = composition;\r\n    this.filename = filename;\r\n    this.svgPath = svgPath;\r\n    this.length = length; \r\n  }\r\n\r\n  setPath = (path: string): void => {\r\n    this.svgPath = path;\r\n  };\r\n}\r\nexport default SampleData;\r\n\r\n","import SampleData from \"@classes/SampleData\"\nimport RawSampleRow from \"@interfaces/RawSampleRow\";\nimport {randomElements} from \"@utils\"\nimport tags from \"./tags\";\n\nconst placeHolderSamplePaths = [\"DNB_BREAK_134-1.wav\", \"Samples/s1.wav\"]\nconst recitalrecordings = [\"RECORDINGS/Bach Move 2 v2.wav\", \"RECORDINGS/Bach Move 3 v2.wav\"]\n\n\nconst makeDefaultSamples = (count: number): SampleData[] =>{\n    const defaultSamples: SampleData[] = [];\n    // const defaultUrl = `${process.env.PUBLIC_URL}/Samples/s1.wav`\n    // const defaultUrl = `${process.env.PUBLIC_URL}/DNB_BREAK_134-1.wav`\n    const defaultStartTime = new Date(\"1995-12-17T03:24:00\")\n    const defaultEndTime = new Date(\"1995-12-17T03:24:01\")\n\n\n    for (let i = 0; i < count; i++) {\n        const sampleUrl = `${process.env.PUBLIC_URL}/`+randomElements(placeHolderSamplePaths, 1)[0]\n        const basicRow: RawSampleRow = {\n            composition:`placeHolderSample_${i}`,\n            starTime: \"1995-12-17T03:24:00\",\n            endTime: \"1995-12-17T03:24:01\",\n            tags: \"MR, FD\",\n            date: \"2021-09-24\",\n            hour: \"222332\",\n            svgPath: \"\",\n            length: 1.0,\n            filename: sampleUrl\n        }\n        const tagNames = randomElements(tags, 3)\n\n        const sampleD = new SampleData(basicRow)\n        defaultSamples.push(sampleD)\n    }\n    return defaultSamples\n}\n\nconst placeHolderSamples = makeDefaultSamples(30)\n\nexport default placeHolderSamples","import { action, Action, thunk, Thunk, thunkOn, ThunkOn } from \"easy-peasy\";\nimport History from \"@classes/History\";\nimport { Layouts } from \"react-grid-layout\";\nimport WaveFormBuilder from \"@classes/WaveFormBuilder\";\nimport SampleData from \"@classes/SampleData\";\nimport placeHolderSamples from \"@static/placeHolderSamples\"\nimport { StoreModel } from \"model\";\nimport WaveformData from \"waveform-data\";\nimport { actions } from \"react-table\";\nimport RawSampleRow from \"@interfaces/RawSampleRow\";\nimport Papa from \"papaparse\";\nimport {downloadBlob} from \"@utils\"\nimport analyzeClips from \"@static/analyzeClips\"\nexport interface SamplesModel{\n    //state\n    samples: SampleData[],\n    //listeners\n\n\n    //thunks\n\n    //simple setters\n    setSamples: Action<SamplesModel, SampleData[]>\n\n\n    onSetSamplesSheets: ThunkOn<SamplesModel, never, StoreModel>;\n    //proccessing\n    processSamples: Thunk<SamplesModel, never, StoreModel>\n    loadSamples: Thunk<SamplesModel>\n}\n\nconst samplesModel: SamplesModel = {\n    //state\n    samples: placeHolderSamples,\n    //listeners\n    onSetSamplesSheets: thunkOn(\n        (actions, storeActions) =>\n          storeActions.googleSheetsModel.setSamplesSheet,\n        (actions, target) => {\n            console.log(target.payload);\n            const rawSampleRows = target.payload as RawSampleRow[]\n            if (analyzeClips){\n                processSamples(rawSampleRows).then(samples=>{\n                    actions.setSamples(samples)\n                    const csv = Papa.unparse(samples)   \n                    downloadBlob(csv, \"test.csv\", 'text/csv;charset=utf-8;')\n                })\n            } else {\n                const sampleDataArray = rawSampleRows.map(r=>new SampleData(r))\n                actions.setSamples(sampleDataArray)\n            }\n          //extract only the needed properties from the GoogleSheetRow\n        }\n      ),\n    //processing\n    processSamples: thunk((actions, _, {getState})=>{\n        console.log(\"processing samples\")\n        const state = getState()\n        const { samples }  = {...state}\n        console.log(samples)\n        const processor = new WaveFormBuilder()\n        const processedSamples = samples.map(s=>processor.generateSVG(s))\n        Promise.allSettled(processedSamples).then(results=>{\n            const succesfulAnalaysisSamples: SampleData[] = [];\n            for (const result of results) {\n                if (result.status === \"fulfilled\"){\n                    succesfulAnalaysisSamples.push(result.value)\n                }\n            }\n            actions.setSamples(succesfulAnalaysisSamples)\n        })\n        console.log(processedSamples);\n    }),\n    loadSamples: thunk((actions, )=>{\n        console.log(\"processing samples\")\n    }),\n    setSamples: action((state, samplesArray) => {\n        console.log(\"setting samples\")\n        state.samples = samplesArray;\n        // state.tempLayout = layouts;\n    }),\n}\n\nexport default samplesModel\n\n\nconst processSamples = (sampleRows: RawSampleRow[], max?: number): Promise<SampleData[]> =>{\n    if (max){\n        sampleRows = sampleRows.filter(r=>r.tags !== undefined).slice(max)\n    } else {\n        sampleRows = sampleRows.filter(r=>r.tags !== undefined)\n    }\n    const sampleDataArray = sampleRows.map(s=>new SampleData(s));\n    const processor = new WaveFormBuilder()\n    const processedSamples = sampleDataArray.map(s=>processor.generateSVG(s))\n    return Promise.allSettled(processedSamples).then(results=>{\n        const succesfulAnalaysisSamples: SampleData[] = [];\n        for (const result of results) {\n            if (result.status === \"fulfilled\"){\n                succesfulAnalaysisSamples.push(result.value)\n            }\n        }\n        return succesfulAnalaysisSamples;\n    })\n}\n\n","import appData, { AppDataModel } from \"./appModel\";\r\nimport compositonsModel, {CompositionsModel} from \"./ðŸŽ»compositionsModel\";\r\nimport googleSheetsModel, { GoogleSheetsModel } from \"./googleSheetsModel\";\r\nimport historyData, { HistoryModel } from \"./historyModel\";\r\nimport layoutsModel, { LayoutsModel } from \"./layoutsModel\";\r\nimport logModel, {LogModel} from \"./logModel\";\r\nimport samplesModel, { SamplesModel } from \"./samplesModel\";\r\n\r\n// https://codesandbox.io/s/easy-peasy-typescript-v3-riqbl?file=/src/model/todos.ts\r\n\r\nexport interface StoreModel {\r\n  appModel: AppDataModel;\r\n  historyModel: HistoryModel;\r\n  layoutsModel: LayoutsModel;\r\n  googleSheetsModel: GoogleSheetsModel;\r\n  samplesModel: SamplesModel; \r\n  compositionsModel: CompositionsModel;\r\n  logModel: LogModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  appModel: appData,\r\n  historyModel: historyData,\r\n  layoutsModel: layoutsModel,\r\n  googleSheetsModel: googleSheetsModel,\r\n  samplesModel: samplesModel,\r\n  compositionsModel: compositonsModel,\r\n  logModel: logModel, \r\n};\r\n\r\nexport default model;\r\n","import { createStore, action } from 'easy-peasy';\r\nimport model from './model';\r\nimport logger from 'redux-logger'\r\n// const store = createStore(model);\r\n\r\nconst store = createStore(model, {\r\n    devTools: process.env.NODE_ENV === 'development',\r\n    middleware: [\r\n      logger\r\n    ]\r\n    // initialState: { commentsModel: { comments }, postsModel: { posts } },\r\n});\r\n  \r\nif (process.env.NODE_ENV === \"development\") {\r\n    if (module.hot) {\r\n      module.hot.accept(\"./model\", () => {\r\n        store.reconfigure(model);  // ðŸ‘ˆ Here is the magic\r\n      });\r\n    }\r\n}\r\n  \r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StoreProvider } from \"easy-peasy\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}